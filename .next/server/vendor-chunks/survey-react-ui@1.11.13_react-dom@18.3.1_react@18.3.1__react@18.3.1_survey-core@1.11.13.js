/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/survey-react-ui@1.11.13_react-dom@18.3.1_react@18.3.1__react@18.3.1_survey-core@1.11.13";
exports.ids = ["vendor-chunks/survey-react-ui@1.11.13_react-dom@18.3.1_react@18.3.1__react@18.3.1_survey-core@1.11.13"];
exports.modules = {

/***/ "(ssr)/./node_modules/.pnpm/survey-react-ui@1.11.13_react-dom@18.3.1_react@18.3.1__react@18.3.1_survey-core@1.11.13/node_modules/survey-react-ui/survey-react-ui.js":
/*!********************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/survey-react-ui@1.11.13_react-dom@18.3.1_react@18.3.1__react@18.3.1_survey-core@1.11.13/node_modules/survey-react-ui/survey-react-ui.js ***!
  \********************************************************************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("/*!\n * surveyjs - Survey JavaScript library v1.11.13\n * Copyright (c) 2015-2024 Devsoft Baltic OÃœ  - http://surveyjs.io/\n * License: MIT (http://www.opensource.org/licenses/mit-license.php)\n */\n(function webpackUniversalModuleDefinition(root, factory) {\n\tif(true)\n\t\tmodule.exports = factory(__webpack_require__(/*! react */ \"(ssr)/./node_modules/.pnpm/next@14.2.7_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\"), __webpack_require__(/*! react-dom */ \"(ssr)/./node_modules/.pnpm/next@14.2.7_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react-dom.js\"), __webpack_require__(/*! survey-core */ \"(ssr)/./node_modules/.pnpm/survey-core@1.11.13/node_modules/survey-core/survey.core.js\"));\n\telse {}\n})(this, function(__WEBPACK_EXTERNAL_MODULE_react__, __WEBPACK_EXTERNAL_MODULE_react_dom__, __WEBPACK_EXTERNAL_MODULE_survey_core__) {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __nested_webpack_require_1081__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __nested_webpack_require_1081__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__nested_webpack_require_1081__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__nested_webpack_require_1081__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__nested_webpack_require_1081__.d = function(exports, name, getter) {\n/******/ \t\tif(!__nested_webpack_require_1081__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// define __esModule on exports\n/******/ \t__nested_webpack_require_1081__.r = function(exports) {\n/******/ \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n/******/ \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n/******/ \t\t}\n/******/ \t\tObject.defineProperty(exports, '__esModule', { value: true });\n/******/ \t};\n/******/\n/******/ \t// create a fake namespace object\n/******/ \t// mode & 1: value is a module id, require it\n/******/ \t// mode & 2: merge all properties of value into the ns\n/******/ \t// mode & 4: return value when already ns object\n/******/ \t// mode & 8|1: behave like require\n/******/ \t__nested_webpack_require_1081__.t = function(value, mode) {\n/******/ \t\tif(mode & 1) value = __nested_webpack_require_1081__(value);\n/******/ \t\tif(mode & 8) return value;\n/******/ \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n/******/ \t\tvar ns = Object.create(null);\n/******/ \t\t__nested_webpack_require_1081__.r(ns);\n/******/ \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n/******/ \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __nested_webpack_require_1081__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n/******/ \t\treturn ns;\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__nested_webpack_require_1081__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__nested_webpack_require_1081__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__nested_webpack_require_1081__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__nested_webpack_require_1081__.p = \"\";\n/******/\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __nested_webpack_require_1081__(__nested_webpack_require_1081__.s = \"./src/entries/react-ui.ts\");\n/******/ })\n/************************************************************************/\n/******/ ({\n\n/***/ \"./src/entries/react-ui.ts\":\n/*!**********************************************!*\\\n  !*** ./src/entries/react-ui.ts + 95 modules ***!\n  \\**********************************************/\n/*! exports provided: Survey, attachKey2click, ReactSurveyElementsWrapper, SurveyNavigationBase, SurveyTimerPanel, SurveyPage, SurveyRow, SurveyPanel, SurveyFlowPanel, SurveyQuestion, SurveyElementErrors, SurveyQuestionAndErrorsCell, ReactSurveyElement, SurveyElementBase, SurveyQuestionElementBase, SurveyQuestionCommentItem, SurveyQuestionComment, SurveyQuestionCheckbox, SurveyQuestionCheckboxItem, SurveyQuestionRanking, SurveyQuestionRankingItem, SurveyQuestionRankingItemContent, RatingItem, RatingItemStar, RatingItemSmiley, RatingDropdownItem, TagboxFilterString, SurveyQuestionOptionItem, SurveyQuestionDropdownBase, SurveyQuestionDropdown, SurveyQuestionTagboxItem, SurveyQuestionTagbox, SurveyQuestionDropdownSelect, SurveyQuestionMatrix, SurveyQuestionMatrixRow, SurveyQuestionMatrixCell, SurveyQuestionHtml, SurveyQuestionFile, SurveyFileChooseButton, SurveyFilePreview, SurveyQuestionMultipleText, SurveyQuestionRadiogroup, SurveyQuestionRadioItem, SurveyQuestionText, SurveyQuestionBoolean, SurveyQuestionBooleanCheckbox, SurveyQuestionBooleanRadio, SurveyQuestionEmpty, SurveyQuestionMatrixDropdownCell, SurveyQuestionMatrixDropdownBase, SurveyQuestionMatrixDropdown, SurveyQuestionMatrixDynamic, SurveyQuestionMatrixDynamicAddButton, SurveyQuestionPanelDynamic, SurveyProgress, SurveyProgressButtons, SurveyProgressToc, SurveyQuestionRating, SurveyQuestionRatingDropdown, SurveyQuestionExpression, PopupSurvey, SurveyWindow, ReactQuestionFactory, ReactElementFactory, SurveyQuestionImagePicker, SurveyQuestionImage, SurveyQuestionSignaturePad, SurveyQuestionButtonGroup, SurveyQuestionCustom, SurveyQuestionComposite, Popup, ListItemContent, ListItemGroup, List, TitleActions, TitleElement, SurveyActionBar, LogoImage, SurveyHeader, SvgIcon, SurveyQuestionMatrixDynamicRemoveButton, SurveyQuestionMatrixDetailButton, SurveyQuestionMatrixDynamicDragDropIcon, SurveyQuestionPanelDynamicAddButton, SurveyQuestionPanelDynamicRemoveButton, SurveyQuestionPanelDynamicPrevButton, SurveyQuestionPanelDynamicNextButton, SurveyQuestionPanelDynamicProgressText, SurveyNavigationButton, QuestionErrorComponent, MatrixRow, Skeleton, NotifierComponent, ComponentsContainer, CharacterCounterComponent, HeaderMobile, HeaderCell, Header, SurveyLocStringViewer, SurveyLocStringEditor, LoadingIndicatorComponent, SvgBundleComponent, SurveyModel, SurveyWindowModel, Model, settings, surveyLocalization, surveyStrings */\n/*! ModuleConcatenation bailout: Cannot concat with external {\"root\":\"React\",\"commonjs2\":\"react\",\"commonjs\":\"react\",\"amd\":\"react\"} (<- Module is not an ECMAScript module) */\n/*! ModuleConcatenation bailout: Cannot concat with external {\"root\":\"ReactDOM\",\"commonjs2\":\"react-dom\",\"commonjs\":\"react-dom\",\"amd\":\"react-dom\"} (<- Module is not an ECMAScript module) */\n/*! ModuleConcatenation bailout: Cannot concat with external {\"root\":\"Survey\",\"commonjs2\":\"survey-core\",\"commonjs\":\"survey-core\",\"amd\":\"survey-core\"} (<- Module is not an ECMAScript module) */\n/***/ (function(module, __nested_webpack_exports__, __nested_webpack_require_7739__) {\n\n\"use strict\";\n// ESM COMPAT FLAG\n__nested_webpack_require_7739__.r(__nested_webpack_exports__);\n\n// EXPORTS\n__nested_webpack_require_7739__.d(__nested_webpack_exports__, \"Survey\", function() { return /* reexport */ reactSurvey_Survey; });\n__nested_webpack_require_7739__.d(__nested_webpack_exports__, \"attachKey2click\", function() { return /* reexport */ attachKey2click; });\n__nested_webpack_require_7739__.d(__nested_webpack_exports__, \"ReactSurveyElementsWrapper\", function() { return /* reexport */ reactsurveymodel_ReactSurveyElementsWrapper; });\n__nested_webpack_require_7739__.d(__nested_webpack_exports__, \"SurveyNavigationBase\", function() { return /* reexport */ SurveyNavigationBase; });\n__nested_webpack_require_7739__.d(__nested_webpack_exports__, \"SurveyTimerPanel\", function() { return /* reexport */ reacttimerpanel_SurveyTimerPanel; });\n__nested_webpack_require_7739__.d(__nested_webpack_exports__, \"SurveyPage\", function() { return /* reexport */ page_SurveyPage; });\n__nested_webpack_require_7739__.d(__nested_webpack_exports__, \"SurveyRow\", function() { return /* reexport */ row_SurveyRow; });\n__nested_webpack_require_7739__.d(__nested_webpack_exports__, \"SurveyPanel\", function() { return /* reexport */ panel_SurveyPanel; });\n__nested_webpack_require_7739__.d(__nested_webpack_exports__, \"SurveyFlowPanel\", function() { return /* reexport */ flow_panel_SurveyFlowPanel; });\n__nested_webpack_require_7739__.d(__nested_webpack_exports__, \"SurveyQuestion\", function() { return /* reexport */ reactquestion_SurveyQuestion; });\n__nested_webpack_require_7739__.d(__nested_webpack_exports__, \"SurveyElementErrors\", function() { return /* reexport */ reactquestion_SurveyElementErrors; });\n__nested_webpack_require_7739__.d(__nested_webpack_exports__, \"SurveyQuestionAndErrorsCell\", function() { return /* reexport */ reactquestion_SurveyQuestionAndErrorsCell; });\n__nested_webpack_require_7739__.d(__nested_webpack_exports__, \"ReactSurveyElement\", function() { return /* reexport */ ReactSurveyElement; });\n__nested_webpack_require_7739__.d(__nested_webpack_exports__, \"SurveyElementBase\", function() { return /* reexport */ reactquestion_element_SurveyElementBase; });\n__nested_webpack_require_7739__.d(__nested_webpack_exports__, \"SurveyQuestionElementBase\", function() { return /* reexport */ reactquestion_element_SurveyQuestionElementBase; });\n__nested_webpack_require_7739__.d(__nested_webpack_exports__, \"SurveyQuestionCommentItem\", function() { return /* reexport */ reactquestion_comment_SurveyQuestionCommentItem; });\n__nested_webpack_require_7739__.d(__nested_webpack_exports__, \"SurveyQuestionComment\", function() { return /* reexport */ reactquestion_comment_SurveyQuestionComment; });\n__nested_webpack_require_7739__.d(__nested_webpack_exports__, \"SurveyQuestionCheckbox\", function() { return /* reexport */ reactquestion_checkbox_SurveyQuestionCheckbox; });\n__nested_webpack_require_7739__.d(__nested_webpack_exports__, \"SurveyQuestionCheckboxItem\", function() { return /* reexport */ reactquestion_checkbox_SurveyQuestionCheckboxItem; });\n__nested_webpack_require_7739__.d(__nested_webpack_exports__, \"SurveyQuestionRanking\", function() { return /* reexport */ reactquestion_ranking_SurveyQuestionRanking; });\n__nested_webpack_require_7739__.d(__nested_webpack_exports__, \"SurveyQuestionRankingItem\", function() { return /* reexport */ reactquestion_ranking_SurveyQuestionRankingItem; });\n__nested_webpack_require_7739__.d(__nested_webpack_exports__, \"SurveyQuestionRankingItemContent\", function() { return /* reexport */ reactquestion_ranking_SurveyQuestionRankingItemContent; });\n__nested_webpack_require_7739__.d(__nested_webpack_exports__, \"RatingItem\", function() { return /* reexport */ rating_item_RatingItem; });\n__nested_webpack_require_7739__.d(__nested_webpack_exports__, \"RatingItemStar\", function() { return /* reexport */ rating_item_star_RatingItemStar; });\n__nested_webpack_require_7739__.d(__nested_webpack_exports__, \"RatingItemSmiley\", function() { return /* reexport */ rating_item_smiley_RatingItemSmiley; });\n__nested_webpack_require_7739__.d(__nested_webpack_exports__, \"RatingDropdownItem\", function() { return /* reexport */ rating_dropdown_item_RatingDropdownItem; });\n__nested_webpack_require_7739__.d(__nested_webpack_exports__, \"TagboxFilterString\", function() { return /* reexport */ tagbox_filter_TagboxFilterString; });\n__nested_webpack_require_7739__.d(__nested_webpack_exports__, \"SurveyQuestionOptionItem\", function() { return /* reexport */ dropdown_item_SurveyQuestionOptionItem; });\n__nested_webpack_require_7739__.d(__nested_webpack_exports__, \"SurveyQuestionDropdownBase\", function() { return /* reexport */ dropdown_base_SurveyQuestionDropdownBase; });\n__nested_webpack_require_7739__.d(__nested_webpack_exports__, \"SurveyQuestionDropdown\", function() { return /* reexport */ reactquestion_dropdown_SurveyQuestionDropdown; });\n__nested_webpack_require_7739__.d(__nested_webpack_exports__, \"SurveyQuestionTagboxItem\", function() { return /* reexport */ tagbox_item_SurveyQuestionTagboxItem; });\n__nested_webpack_require_7739__.d(__nested_webpack_exports__, \"SurveyQuestionTagbox\", function() { return /* reexport */ reactquestion_tagbox_SurveyQuestionTagbox; });\n__nested_webpack_require_7739__.d(__nested_webpack_exports__, \"SurveyQuestionDropdownSelect\", function() { return /* reexport */ dropdown_select_SurveyQuestionDropdownSelect; });\n__nested_webpack_require_7739__.d(__nested_webpack_exports__, \"SurveyQuestionMatrix\", function() { return /* reexport */ reactquestion_matrix_SurveyQuestionMatrix; });\n__nested_webpack_require_7739__.d(__nested_webpack_exports__, \"SurveyQuestionMatrixRow\", function() { return /* reexport */ reactquestion_matrix_SurveyQuestionMatrixRow; });\n__nested_webpack_require_7739__.d(__nested_webpack_exports__, \"SurveyQuestionMatrixCell\", function() { return /* reexport */ reactquestion_matrix_SurveyQuestionMatrixCell; });\n__nested_webpack_require_7739__.d(__nested_webpack_exports__, \"SurveyQuestionHtml\", function() { return /* reexport */ reactquestion_html_SurveyQuestionHtml; });\n__nested_webpack_require_7739__.d(__nested_webpack_exports__, \"SurveyQuestionFile\", function() { return /* reexport */ reactquestion_file_SurveyQuestionFile; });\n__nested_webpack_require_7739__.d(__nested_webpack_exports__, \"SurveyFileChooseButton\", function() { return /* reexport */ file_choose_button_SurveyFileChooseButton; });\n__nested_webpack_require_7739__.d(__nested_webpack_exports__, \"SurveyFilePreview\", function() { return /* reexport */ file_preview_SurveyFilePreview; });\n__nested_webpack_require_7739__.d(__nested_webpack_exports__, \"SurveyQuestionMultipleText\", function() { return /* reexport */ reactquestion_multipletext_SurveyQuestionMultipleText; });\n__nested_webpack_require_7739__.d(__nested_webpack_exports__, \"SurveyQuestionRadiogroup\", function() { return /* reexport */ reactquestion_radiogroup_SurveyQuestionRadiogroup; });\n__nested_webpack_require_7739__.d(__nested_webpack_exports__, \"SurveyQuestionRadioItem\", function() { return /* reexport */ reactquestion_radiogroup_SurveyQuestionRadioItem; });\n__nested_webpack_require_7739__.d(__nested_webpack_exports__, \"SurveyQuestionText\", function() { return /* reexport */ reactquestion_text_SurveyQuestionText; });\n__nested_webpack_require_7739__.d(__nested_webpack_exports__, \"SurveyQuestionBoolean\", function() { return /* reexport */ boolean_SurveyQuestionBoolean; });\n__nested_webpack_require_7739__.d(__nested_webpack_exports__, \"SurveyQuestionBooleanCheckbox\", function() { return /* reexport */ boolean_checkbox_SurveyQuestionBooleanCheckbox; });\n__nested_webpack_require_7739__.d(__nested_webpack_exports__, \"SurveyQuestionBooleanRadio\", function() { return /* reexport */ boolean_radio_SurveyQuestionBooleanRadio; });\n__nested_webpack_require_7739__.d(__nested_webpack_exports__, \"SurveyQuestionEmpty\", function() { return /* reexport */ reactquestion_empty_SurveyQuestionEmpty; });\n__nested_webpack_require_7739__.d(__nested_webpack_exports__, \"SurveyQuestionMatrixDropdownCell\", function() { return /* reexport */ reactquestion_matrixdropdownbase_SurveyQuestionMatrixDropdownCell; });\n__nested_webpack_require_7739__.d(__nested_webpack_exports__, \"SurveyQuestionMatrixDropdownBase\", function() { return /* reexport */ reactquestion_matrixdropdownbase_SurveyQuestionMatrixDropdownBase; });\n__nested_webpack_require_7739__.d(__nested_webpack_exports__, \"SurveyQuestionMatrixDropdown\", function() { return /* reexport */ SurveyQuestionMatrixDropdown; });\n__nested_webpack_require_7739__.d(__nested_webpack_exports__, \"SurveyQuestionMatrixDynamic\", function() { return /* reexport */ reactquestion_matrixdynamic_SurveyQuestionMatrixDynamic; });\n__nested_webpack_require_7739__.d(__nested_webpack_exports__, \"SurveyQuestionMatrixDynamicAddButton\", function() { return /* reexport */ reactquestion_matrixdynamic_SurveyQuestionMatrixDynamicAddButton; });\n__nested_webpack_require_7739__.d(__nested_webpack_exports__, \"SurveyQuestionPanelDynamic\", function() { return /* reexport */ reactquestion_paneldynamic_SurveyQuestionPanelDynamic; });\n__nested_webpack_require_7739__.d(__nested_webpack_exports__, \"SurveyProgress\", function() { return /* reexport */ progress_SurveyProgress; });\n__nested_webpack_require_7739__.d(__nested_webpack_exports__, \"SurveyProgressButtons\", function() { return /* reexport */ progressButtons_SurveyProgressButtons; });\n__nested_webpack_require_7739__.d(__nested_webpack_exports__, \"SurveyProgressToc\", function() { return /* reexport */ progressToc_SurveyProgressToc; });\n__nested_webpack_require_7739__.d(__nested_webpack_exports__, \"SurveyQuestionRating\", function() { return /* reexport */ reactquestion_rating_SurveyQuestionRating; });\n__nested_webpack_require_7739__.d(__nested_webpack_exports__, \"SurveyQuestionRatingDropdown\", function() { return /* reexport */ rating_dropdown_SurveyQuestionRatingDropdown; });\n__nested_webpack_require_7739__.d(__nested_webpack_exports__, \"SurveyQuestionExpression\", function() { return /* reexport */ reactquestion_expression_SurveyQuestionExpression; });\n__nested_webpack_require_7739__.d(__nested_webpack_exports__, \"PopupSurvey\", function() { return /* reexport */ react_popup_survey_PopupSurvey; });\n__nested_webpack_require_7739__.d(__nested_webpack_exports__, \"SurveyWindow\", function() { return /* reexport */ SurveyWindow; });\n__nested_webpack_require_7739__.d(__nested_webpack_exports__, \"ReactQuestionFactory\", function() { return /* reexport */ ReactQuestionFactory; });\n__nested_webpack_require_7739__.d(__nested_webpack_exports__, \"ReactElementFactory\", function() { return /* reexport */ ReactElementFactory; });\n__nested_webpack_require_7739__.d(__nested_webpack_exports__, \"SurveyQuestionImagePicker\", function() { return /* reexport */ imagepicker_SurveyQuestionImagePicker; });\n__nested_webpack_require_7739__.d(__nested_webpack_exports__, \"SurveyQuestionImage\", function() { return /* reexport */ image_SurveyQuestionImage; });\n__nested_webpack_require_7739__.d(__nested_webpack_exports__, \"SurveyQuestionSignaturePad\", function() { return /* reexport */ signaturepad_SurveyQuestionSignaturePad; });\n__nested_webpack_require_7739__.d(__nested_webpack_exports__, \"SurveyQuestionButtonGroup\", function() { return /* reexport */ reactquestion_buttongroup_SurveyQuestionButtonGroup; });\n__nested_webpack_require_7739__.d(__nested_webpack_exports__, \"SurveyQuestionCustom\", function() { return /* reexport */ reactquestion_custom_SurveyQuestionCustom; });\n__nested_webpack_require_7739__.d(__nested_webpack_exports__, \"SurveyQuestionComposite\", function() { return /* reexport */ reactquestion_custom_SurveyQuestionComposite; });\n__nested_webpack_require_7739__.d(__nested_webpack_exports__, \"Popup\", function() { return /* reexport */ popup_Popup; });\n__nested_webpack_require_7739__.d(__nested_webpack_exports__, \"ListItemContent\", function() { return /* reexport */ list_item_content_ListItemContent; });\n__nested_webpack_require_7739__.d(__nested_webpack_exports__, \"ListItemGroup\", function() { return /* reexport */ list_item_group_ListItemGroup; });\n__nested_webpack_require_7739__.d(__nested_webpack_exports__, \"List\", function() { return /* reexport */ list_List; });\n__nested_webpack_require_7739__.d(__nested_webpack_exports__, \"TitleActions\", function() { return /* reexport */ title_actions_TitleActions; });\n__nested_webpack_require_7739__.d(__nested_webpack_exports__, \"TitleElement\", function() { return /* reexport */ title_element_TitleElement; });\n__nested_webpack_require_7739__.d(__nested_webpack_exports__, \"SurveyActionBar\", function() { return /* reexport */ action_bar_SurveyActionBar; });\n__nested_webpack_require_7739__.d(__nested_webpack_exports__, \"LogoImage\", function() { return /* reexport */ logo_image_LogoImage; });\n__nested_webpack_require_7739__.d(__nested_webpack_exports__, \"SurveyHeader\", function() { return /* reexport */ survey_header_SurveyHeader; });\n__nested_webpack_require_7739__.d(__nested_webpack_exports__, \"SvgIcon\", function() { return /* reexport */ svg_icon_SvgIcon; });\n__nested_webpack_require_7739__.d(__nested_webpack_exports__, \"SurveyQuestionMatrixDynamicRemoveButton\", function() { return /* reexport */ remove_button_SurveyQuestionMatrixDynamicRemoveButton; });\n__nested_webpack_require_7739__.d(__nested_webpack_exports__, \"SurveyQuestionMatrixDetailButton\", function() { return /* reexport */ detail_button_SurveyQuestionMatrixDetailButton; });\n__nested_webpack_require_7739__.d(__nested_webpack_exports__, \"SurveyQuestionMatrixDynamicDragDropIcon\", function() { return /* reexport */ drag_drop_icon_SurveyQuestionMatrixDynamicDragDropIcon; });\n__nested_webpack_require_7739__.d(__nested_webpack_exports__, \"SurveyQuestionPanelDynamicAddButton\", function() { return /* reexport */ paneldynamic_add_btn_SurveyQuestionPanelDynamicAddButton; });\n__nested_webpack_require_7739__.d(__nested_webpack_exports__, \"SurveyQuestionPanelDynamicRemoveButton\", function() { return /* reexport */ paneldynamic_remove_btn_SurveyQuestionPanelDynamicRemoveButton; });\n__nested_webpack_require_7739__.d(__nested_webpack_exports__, \"SurveyQuestionPanelDynamicPrevButton\", function() { return /* reexport */ paneldynamic_prev_btn_SurveyQuestionPanelDynamicPrevButton; });\n__nested_webpack_require_7739__.d(__nested_webpack_exports__, \"SurveyQuestionPanelDynamicNextButton\", function() { return /* reexport */ paneldynamic_next_btn_SurveyQuestionPanelDynamicNextButton; });\n__nested_webpack_require_7739__.d(__nested_webpack_exports__, \"SurveyQuestionPanelDynamicProgressText\", function() { return /* reexport */ paneldynamic_progress_text_SurveyQuestionPanelDynamicProgressText; });\n__nested_webpack_require_7739__.d(__nested_webpack_exports__, \"SurveyNavigationButton\", function() { return /* reexport */ survey_nav_button_SurveyNavigationButton; });\n__nested_webpack_require_7739__.d(__nested_webpack_exports__, \"QuestionErrorComponent\", function() { return /* reexport */ question_error_QuestionErrorComponent; });\n__nested_webpack_require_7739__.d(__nested_webpack_exports__, \"MatrixRow\", function() { return /* reexport */ row_MatrixRow; });\n__nested_webpack_require_7739__.d(__nested_webpack_exports__, \"Skeleton\", function() { return /* reexport */ skeleton_Skeleton; });\n__nested_webpack_require_7739__.d(__nested_webpack_exports__, \"NotifierComponent\", function() { return /* reexport */ notifier_NotifierComponent; });\n__nested_webpack_require_7739__.d(__nested_webpack_exports__, \"ComponentsContainer\", function() { return /* reexport */ components_container_ComponentsContainer; });\n__nested_webpack_require_7739__.d(__nested_webpack_exports__, \"CharacterCounterComponent\", function() { return /* reexport */ character_counter_CharacterCounterComponent; });\n__nested_webpack_require_7739__.d(__nested_webpack_exports__, \"HeaderMobile\", function() { return /* reexport */ header_HeaderMobile; });\n__nested_webpack_require_7739__.d(__nested_webpack_exports__, \"HeaderCell\", function() { return /* reexport */ header_HeaderCell; });\n__nested_webpack_require_7739__.d(__nested_webpack_exports__, \"Header\", function() { return /* reexport */ header_Header; });\n__nested_webpack_require_7739__.d(__nested_webpack_exports__, \"SurveyLocStringViewer\", function() { return /* reexport */ string_viewer_SurveyLocStringViewer; });\n__nested_webpack_require_7739__.d(__nested_webpack_exports__, \"SurveyLocStringEditor\", function() { return /* reexport */ string_editor_SurveyLocStringEditor; });\n__nested_webpack_require_7739__.d(__nested_webpack_exports__, \"LoadingIndicatorComponent\", function() { return /* reexport */ loading_indicator_LoadingIndicatorComponent; });\n__nested_webpack_require_7739__.d(__nested_webpack_exports__, \"SvgBundleComponent\", function() { return /* reexport */ svgbundle_SvgBundleComponent; });\n__nested_webpack_require_7739__.d(__nested_webpack_exports__, \"SurveyModel\", function() { return /* reexport */ external_root_Survey_commonjs2_survey_core_commonjs_survey_core_amd_survey_core_[\"SurveyModel\"]; });\n__nested_webpack_require_7739__.d(__nested_webpack_exports__, \"SurveyWindowModel\", function() { return /* reexport */ external_root_Survey_commonjs2_survey_core_commonjs_survey_core_amd_survey_core_[\"SurveyWindowModel\"]; });\n__nested_webpack_require_7739__.d(__nested_webpack_exports__, \"Model\", function() { return /* reexport */ external_root_Survey_commonjs2_survey_core_commonjs_survey_core_amd_survey_core_[\"SurveyModel\"]; });\n__nested_webpack_require_7739__.d(__nested_webpack_exports__, \"settings\", function() { return /* reexport */ external_root_Survey_commonjs2_survey_core_commonjs_survey_core_amd_survey_core_[\"settings\"]; });\n__nested_webpack_require_7739__.d(__nested_webpack_exports__, \"surveyLocalization\", function() { return /* reexport */ external_root_Survey_commonjs2_survey_core_commonjs_survey_core_amd_survey_core_[\"surveyLocalization\"]; });\n__nested_webpack_require_7739__.d(__nested_webpack_exports__, \"surveyStrings\", function() { return /* reexport */ external_root_Survey_commonjs2_survey_core_commonjs_survey_core_amd_survey_core_[\"surveyStrings\"]; });\n\n// EXTERNAL MODULE: external {\"root\":\"Survey\",\"commonjs2\":\"survey-core\",\"commonjs\":\"survey-core\",\"amd\":\"survey-core\"}\nvar external_root_Survey_commonjs2_survey_core_commonjs_survey_core_amd_survey_core_ = __nested_webpack_require_7739__(\"survey-core\");\n\n// EXTERNAL MODULE: external {\"root\":\"React\",\"commonjs2\":\"react\",\"commonjs\":\"react\",\"amd\":\"react\"}\nvar external_root_React_commonjs2_react_commonjs_react_amd_react_ = __nested_webpack_require_7739__(\"react\");\nvar external_root_React_commonjs2_react_commonjs_react_amd_react_default = /*#__PURE__*/__nested_webpack_require_7739__.n(external_root_React_commonjs2_react_commonjs_react_amd_react_);\n\n// CONCATENATED MODULE: ./packages/survey-react-ui/src/element-factory.tsx\nvar ReactElementFactory = /** @class */ (function () {\n    function ReactElementFactory() {\n        this.creatorHash = {};\n    }\n    ReactElementFactory.prototype.registerElement = function (elementType, elementCreator) {\n        this.creatorHash[elementType] = elementCreator;\n    };\n    ReactElementFactory.prototype.getAllTypes = function () {\n        var result = new Array();\n        for (var key in this.creatorHash) {\n            result.push(key);\n        }\n        return result.sort();\n    };\n    ReactElementFactory.prototype.isElementRegistered = function (elementType) {\n        return !!this.creatorHash[elementType];\n    };\n    ReactElementFactory.prototype.createElement = function (elementType, params) {\n        var creator = this.creatorHash[elementType];\n        if (creator == null)\n            return null;\n        return creator(params);\n    };\n    ReactElementFactory.Instance = new ReactElementFactory();\n    return ReactElementFactory;\n}());\n\n\n// CONCATENATED MODULE: ./packages/survey-react-ui/src/reactsurveymodel.tsx\n\n\nvar reactsurveymodel_ReactSurveyElementsWrapper = /** @class */ (function () {\n    function ReactSurveyElementsWrapper() {\n    }\n    ReactSurveyElementsWrapper.wrapRow = function (survey, element, row) {\n        var componentName = survey.getRowWrapperComponentName(row);\n        var componentData = survey.getRowWrapperComponentData(row);\n        return ReactElementFactory.Instance.createElement(componentName, {\n            element: element,\n            row: row,\n            componentData: componentData,\n        });\n    };\n    ReactSurveyElementsWrapper.wrapElement = function (survey, element, question) {\n        var componentName = survey.getElementWrapperComponentName(question);\n        var componentData = survey.getElementWrapperComponentData(question);\n        return ReactElementFactory.Instance.createElement(componentName, {\n            element: element,\n            question: question,\n            componentData: componentData,\n        });\n    };\n    ReactSurveyElementsWrapper.wrapQuestionContent = function (survey, element, question) {\n        var componentName = survey.getQuestionContentWrapperComponentName(question);\n        var componentData = survey.getElementWrapperComponentData(question);\n        return ReactElementFactory.Instance.createElement(componentName, {\n            element: element,\n            question: question,\n            componentData: componentData,\n        });\n    };\n    ReactSurveyElementsWrapper.wrapItemValue = function (survey, element, question, item) {\n        var componentName = survey.getItemValueWrapperComponentName(item, question);\n        var componentData = survey.getItemValueWrapperComponentData(item, question);\n        return ReactElementFactory.Instance.createElement(componentName, {\n            key: element === null || element === void 0 ? void 0 : element.key,\n            element: element,\n            question: question,\n            item: item,\n            componentData: componentData,\n        });\n    };\n    ReactSurveyElementsWrapper.wrapMatrixCell = function (survey, element, cell, reason) {\n        if (reason === void 0) { reason = \"cell\"; }\n        var componentName = survey.getElementWrapperComponentName(cell, reason);\n        var componentData = survey.getElementWrapperComponentData(cell, reason);\n        return ReactElementFactory.Instance.createElement(componentName, {\n            element: element,\n            cell: cell,\n            componentData: componentData,\n        });\n    };\n    return ReactSurveyElementsWrapper;\n}());\n\nexternal_root_Survey_commonjs2_survey_core_commonjs_survey_core_amd_survey_core_[\"SurveyModel\"].platform = \"react\";\n\n// CONCATENATED MODULE: ./packages/survey-react-ui/src/reactquestion_element.tsx\nvar __extends = ( false) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\n\n\nvar reactquestion_element_SurveyElementBase = /** @class */ (function (_super) {\n    __extends(SurveyElementBase, _super);\n    function SurveyElementBase(props) {\n        var _this = _super.call(this, props) || this;\n        _this._allowComponentUpdate = true;\n        return _this;\n    }\n    SurveyElementBase.renderLocString = function (locStr, style, key) {\n        if (style === void 0) { style = null; }\n        return ReactElementFactory.Instance.createElement(locStr.renderAs, {\n            locStr: locStr.renderAsData,\n            style: style,\n            key: key,\n        });\n    };\n    SurveyElementBase.renderQuestionDescription = function (question) {\n        var descriptionText = SurveyElementBase.renderLocString(question.locDescription);\n        return external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"div\", { style: question.hasDescription ? undefined : { display: \"none\" }, id: question.ariaDescriptionId, className: question.cssDescription }, descriptionText);\n    };\n    SurveyElementBase.prototype.componentDidMount = function () {\n        this.makeBaseElementsReact();\n    };\n    SurveyElementBase.prototype.componentWillUnmount = function () {\n        this.unMakeBaseElementsReact();\n    };\n    SurveyElementBase.prototype.componentDidUpdate = function (prevProps, prevState) {\n        this.makeBaseElementsReact();\n        this.getStateElements().forEach(function (el) {\n            el.afterRerender();\n        });\n    };\n    SurveyElementBase.prototype.allowComponentUpdate = function () {\n        this._allowComponentUpdate = true;\n        this.forceUpdate();\n    };\n    SurveyElementBase.prototype.denyComponentUpdate = function () {\n        this._allowComponentUpdate = false;\n    };\n    SurveyElementBase.prototype.shouldComponentUpdate = function (nextProps, nextState) {\n        if (this._allowComponentUpdate) {\n            this.unMakeBaseElementsReact();\n        }\n        return this._allowComponentUpdate;\n    };\n    SurveyElementBase.prototype.render = function () {\n        if (!this.canRender()) {\n            return null;\n        }\n        this.startEndRendering(1);\n        var res = this.renderElement();\n        this.startEndRendering(-1);\n        if (!!res) {\n            res = this.wrapElement(res);\n        }\n        this.changedStatePropNameValue = undefined;\n        return res;\n    };\n    SurveyElementBase.prototype.wrapElement = function (element) {\n        return element;\n    };\n    Object.defineProperty(SurveyElementBase.prototype, \"isRendering\", {\n        get: function () {\n            var stateEls = this.getRenderedElements();\n            for (var _i = 0, stateEls_1 = stateEls; _i < stateEls_1.length; _i++) {\n                var stateEl = stateEls_1[_i];\n                if (stateEl.reactRendering > 0)\n                    return true;\n            }\n            return false;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    SurveyElementBase.prototype.getRenderedElements = function () {\n        return this.getStateElements();\n    };\n    SurveyElementBase.prototype.startEndRendering = function (val) {\n        var stateEls = this.getRenderedElements();\n        for (var _i = 0, stateEls_2 = stateEls; _i < stateEls_2.length; _i++) {\n            var stateEl = stateEls_2[_i];\n            if (!stateEl.reactRendering)\n                stateEl.reactRendering = 0;\n            stateEl.reactRendering += val;\n        }\n    };\n    SurveyElementBase.prototype.canRender = function () {\n        return true;\n    };\n    SurveyElementBase.prototype.renderElement = function () {\n        return null;\n    };\n    Object.defineProperty(SurveyElementBase.prototype, \"changedStatePropName\", {\n        get: function () {\n            return this.changedStatePropNameValue;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    SurveyElementBase.prototype.makeBaseElementsReact = function () {\n        var els = this.getStateElements();\n        for (var i = 0; i < els.length; i++) {\n            els[i].enableOnElementRenderedEvent();\n            this.makeBaseElementReact(els[i]);\n        }\n    };\n    SurveyElementBase.prototype.unMakeBaseElementsReact = function () {\n        var els = this.getStateElements();\n        for (var i = 0; i < els.length; i++) {\n            els[i].disableOnElementRenderedEvent();\n            this.unMakeBaseElementReact(els[i]);\n        }\n    };\n    SurveyElementBase.prototype.getStateElements = function () {\n        var el = this.getStateElement();\n        return !!el ? [el] : [];\n    };\n    SurveyElementBase.prototype.getStateElement = function () {\n        return null;\n    };\n    Object.defineProperty(SurveyElementBase.prototype, \"isDisplayMode\", {\n        get: function () {\n            var props = this.props;\n            return props.isDisplayMode || false;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    SurveyElementBase.prototype.renderLocString = function (locStr, style, key) {\n        if (style === void 0) { style = null; }\n        return SurveyElementBase.renderLocString(locStr, style, key);\n    };\n    SurveyElementBase.prototype.canMakeReact = function (stateElement) {\n        return !!stateElement && !!stateElement.iteratePropertiesHash;\n    };\n    SurveyElementBase.prototype.makeBaseElementReact = function (stateElement) {\n        var _this = this;\n        if (!this.canMakeReact(stateElement))\n            return;\n        stateElement.iteratePropertiesHash(function (hash, key) {\n            if (!_this.canUsePropInState(key))\n                return;\n            var val = hash[key];\n            if (Array.isArray(val)) {\n                var val = val;\n                val[\"onArrayChanged\"] = function (arrayChanges) {\n                    if (_this.isRendering)\n                        return;\n                    _this.changedStatePropNameValue = key;\n                    _this.setState(function (state) {\n                        var newState = {};\n                        newState[key] = val;\n                        return newState;\n                    });\n                };\n            }\n        });\n        stateElement.setPropertyValueCoreHandler = function (hash, key, val) {\n            if (hash[key] !== val) {\n                hash[key] = val;\n                if (!_this.canUsePropInState(key))\n                    return;\n                if (_this.isRendering)\n                    return;\n                _this.changedStatePropNameValue = key;\n                _this.setState(function (state) {\n                    var newState = {};\n                    newState[key] = val;\n                    return newState;\n                });\n            }\n        };\n    };\n    SurveyElementBase.prototype.canUsePropInState = function (key) {\n        return true;\n    };\n    SurveyElementBase.prototype.unMakeBaseElementReact = function (stateElement) {\n        if (!this.canMakeReact(stateElement))\n            return;\n        stateElement.setPropertyValueCoreHandler = undefined;\n        stateElement.iteratePropertiesHash(function (hash, key) {\n            var val = hash[key];\n            if (Array.isArray(val)) {\n                var val = val;\n                val[\"onArrayChanged\"] = function () { };\n            }\n        });\n    };\n    return SurveyElementBase;\n}(external_root_React_commonjs2_react_commonjs_react_amd_react_[\"Component\"]));\n\nvar ReactSurveyElement = /** @class */ (function (_super) {\n    __extends(ReactSurveyElement, _super);\n    function ReactSurveyElement(props) {\n        return _super.call(this, props) || this;\n    }\n    Object.defineProperty(ReactSurveyElement.prototype, \"cssClasses\", {\n        get: function () {\n            return this.props.cssClasses;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    return ReactSurveyElement;\n}(reactquestion_element_SurveyElementBase));\n\nvar reactquestion_element_SurveyQuestionElementBase = /** @class */ (function (_super) {\n    __extends(SurveyQuestionElementBase, _super);\n    function SurveyQuestionElementBase(props) {\n        return _super.call(this, props) || this;\n    }\n    SurveyQuestionElementBase.prototype.componentDidUpdate = function (prevProps, prevState) {\n        _super.prototype.componentDidUpdate.call(this, prevProps, prevState);\n        this.updateDomElement();\n    };\n    SurveyQuestionElementBase.prototype.componentDidMount = function () {\n        _super.prototype.componentDidMount.call(this);\n        this.updateDomElement();\n    };\n    SurveyQuestionElementBase.prototype.componentWillUnmount = function () {\n        _super.prototype.componentWillUnmount.call(this);\n        if (!!this.questionBase) {\n            var contentElement = this.content || this.control;\n            this.questionBase.beforeDestroyQuestionElement(contentElement);\n            if (!!contentElement) {\n                contentElement.removeAttribute(\"data-rendered\");\n            }\n        }\n    };\n    SurveyQuestionElementBase.prototype.updateDomElement = function () {\n        var contentElement = this.content || this.control;\n        if (!!contentElement) {\n            if (contentElement.getAttribute(\"data-rendered\") !== \"r\") {\n                contentElement.setAttribute(\"data-rendered\", \"r\");\n                this.questionBase.afterRenderQuestionElement(contentElement);\n            }\n        }\n    };\n    Object.defineProperty(SurveyQuestionElementBase.prototype, \"questionBase\", {\n        get: function () {\n            return this.props.question;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    SurveyQuestionElementBase.prototype.getRenderedElements = function () {\n        return [this.questionBase];\n    };\n    Object.defineProperty(SurveyQuestionElementBase.prototype, \"creator\", {\n        get: function () {\n            return this.props.creator;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    SurveyQuestionElementBase.prototype.canRender = function () {\n        return !!this.questionBase && !!this.creator;\n    };\n    SurveyQuestionElementBase.prototype.shouldComponentUpdate = function (nextProps, nextState) {\n        if (!_super.prototype.shouldComponentUpdate.call(this, nextProps, nextState))\n            return false;\n        return (!this.questionBase.customWidget ||\n            !!this.questionBase.customWidgetData.isNeedRender ||\n            !!this.questionBase.customWidget.widgetJson.isDefaultRender ||\n            !!this.questionBase.customWidget.widgetJson.render);\n    };\n    Object.defineProperty(SurveyQuestionElementBase.prototype, \"isDisplayMode\", {\n        get: function () {\n            var props = this.props;\n            return (props.isDisplayMode ||\n                (!!this.questionBase && this.questionBase.isInputReadOnly) || false);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    SurveyQuestionElementBase.prototype.wrapCell = function (cell, element, reason) {\n        if (!reason) {\n            return element;\n        }\n        var survey = this.questionBase\n            .survey;\n        var wrapper = null;\n        if (survey) {\n            wrapper = reactsurveymodel_ReactSurveyElementsWrapper.wrapMatrixCell(survey, element, cell, reason);\n        }\n        return wrapper !== null && wrapper !== void 0 ? wrapper : element;\n    };\n    SurveyQuestionElementBase.prototype.setControl = function (element) {\n        if (!!element) {\n            this.control = element;\n        }\n    };\n    SurveyQuestionElementBase.prototype.setContent = function (element) {\n        if (!!element) {\n            this.content = element;\n        }\n    };\n    return SurveyQuestionElementBase;\n}(reactquestion_element_SurveyElementBase));\n\nvar reactquestion_element_SurveyQuestionUncontrolledElement = /** @class */ (function (_super) {\n    __extends(SurveyQuestionUncontrolledElement, _super);\n    function SurveyQuestionUncontrolledElement(props) {\n        var _this = _super.call(this, props) || this;\n        _this.updateValueOnEvent = function (event) {\n            if (!external_root_Survey_commonjs2_survey_core_commonjs_survey_core_amd_survey_core_[\"Helpers\"].isTwoValueEquals(_this.questionBase.value, event.target.value, false, true, false)) {\n                _this.setValueCore(event.target.value);\n            }\n        };\n        _this.updateValueOnEvent = _this.updateValueOnEvent.bind(_this);\n        return _this;\n    }\n    Object.defineProperty(SurveyQuestionUncontrolledElement.prototype, \"question\", {\n        get: function () {\n            return this.questionBase;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    SurveyQuestionUncontrolledElement.prototype.setValueCore = function (newValue) {\n        this.questionBase.value = newValue;\n    };\n    SurveyQuestionUncontrolledElement.prototype.getValueCore = function () {\n        return this.questionBase.value;\n    };\n    SurveyQuestionUncontrolledElement.prototype.updateDomElement = function () {\n        if (!!this.control) {\n            var control = this.control;\n            var newValue = this.getValueCore();\n            if (!external_root_Survey_commonjs2_survey_core_commonjs_survey_core_amd_survey_core_[\"Helpers\"].isTwoValueEquals(newValue, control.value, false, true, false)) {\n                control.value = this.getValue(newValue);\n            }\n        }\n        _super.prototype.updateDomElement.call(this);\n    };\n    SurveyQuestionUncontrolledElement.prototype.getValue = function (val) {\n        if (external_root_Survey_commonjs2_survey_core_commonjs_survey_core_amd_survey_core_[\"Helpers\"].isValueEmpty(val))\n            return \"\";\n        return val;\n    };\n    return SurveyQuestionUncontrolledElement;\n}(reactquestion_element_SurveyQuestionElementBase));\n\n\n// CONCATENATED MODULE: ./packages/survey-react-ui/src/element.tsx\nvar element_extends = ( false) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\n\nvar element_SurveyRowElement = /** @class */ (function (_super) {\n    element_extends(SurveyRowElement, _super);\n    function SurveyRowElement(props) {\n        var _this = _super.call(this, props) || this;\n        _this.element.cssClasses;\n        _this.rootRef = external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createRef\"]();\n        return _this;\n    }\n    SurveyRowElement.prototype.getStateElement = function () {\n        return this.element;\n    };\n    Object.defineProperty(SurveyRowElement.prototype, \"element\", {\n        get: function () {\n            return this.props.element;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(SurveyRowElement.prototype, \"index\", {\n        get: function () {\n            return this.props.index;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(SurveyRowElement.prototype, \"row\", {\n        get: function () {\n            return this.props.row;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(SurveyRowElement.prototype, \"survey\", {\n        get: function () {\n            return this.props.survey;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(SurveyRowElement.prototype, \"creator\", {\n        get: function () {\n            return this.props.creator;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(SurveyRowElement.prototype, \"css\", {\n        get: function () {\n            return this.props.css;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    SurveyRowElement.prototype.componentDidMount = function () {\n        _super.prototype.componentDidMount.call(this);\n        if (this.rootRef.current) {\n            (this.element).setWrapperElement(this.rootRef.current);\n        }\n    };\n    SurveyRowElement.prototype.componentWillUnmount = function () {\n        _super.prototype.componentWillUnmount.call(this);\n        this.element.setWrapperElement(undefined);\n    };\n    SurveyRowElement.prototype.shouldComponentUpdate = function (nextProps, nextState) {\n        if (!_super.prototype.shouldComponentUpdate.call(this, nextProps, nextState))\n            return false;\n        if (nextProps.element !== this.element) {\n            if (nextProps.element) {\n                nextProps.element.setWrapperElement(this.rootRef.current);\n            }\n            if (this.element) {\n                this.element.setWrapperElement(undefined);\n            }\n        }\n        this.element.cssClasses;\n        return true;\n    };\n    SurveyRowElement.prototype.renderElement = function () {\n        var element = this.element;\n        var innerElement = this.createElement(element, this.index);\n        var css = element.cssClassesValue;\n        var focusIn = function () {\n            var el = element;\n            if (el && el.isQuestion) {\n                el.focusIn();\n            }\n        };\n        return (external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"div\", { className: css.questionWrapper, style: element.rootStyle, \"data-key\": innerElement.key, key: innerElement.key, onFocus: focusIn, ref: this.rootRef }, this.row.isNeedRender ? innerElement : ReactElementFactory.Instance.createElement(element.skeletonComponentName, { element: element, css: this.css, })));\n    };\n    SurveyRowElement.prototype.createElement = function (element, elementIndex) {\n        var index = elementIndex ? \"-\" + elementIndex : 0;\n        var elementType = element.getType();\n        if (!ReactElementFactory.Instance.isElementRegistered(elementType)) {\n            elementType = \"question\";\n        }\n        return ReactElementFactory.Instance.createElement(elementType, {\n            key: element.name + index,\n            element: element,\n            creator: this.creator,\n            survey: this.survey,\n            css: this.css,\n        });\n    };\n    return SurveyRowElement;\n}(reactquestion_element_SurveyElementBase));\n\n\n// CONCATENATED MODULE: ./packages/survey-react-ui/src/row.tsx\nvar row_extends = ( false) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\n\n\n\nvar row_SurveyRow = /** @class */ (function (_super) {\n    row_extends(SurveyRow, _super);\n    function SurveyRow(props) {\n        var _this = _super.call(this, props) || this;\n        _this.rootRef = external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createRef\"]();\n        _this.recalculateCss();\n        return _this;\n    }\n    SurveyRow.prototype.recalculateCss = function () {\n        this.row.visibleElements.map(function (element) { return element.cssClasses; });\n    };\n    SurveyRow.prototype.getStateElement = function () {\n        return this.row;\n    };\n    Object.defineProperty(SurveyRow.prototype, \"row\", {\n        get: function () {\n            return this.props.row;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(SurveyRow.prototype, \"survey\", {\n        get: function () {\n            return this.props.survey;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(SurveyRow.prototype, \"creator\", {\n        get: function () {\n            return this.props.creator;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(SurveyRow.prototype, \"css\", {\n        get: function () {\n            return this.props.css;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    SurveyRow.prototype.canRender = function () {\n        return !!this.row && !!this.survey && !!this.creator;\n    };\n    SurveyRow.prototype.renderElementContent = function () {\n        var _this = this;\n        var elements = this.row.visibleElements.map(function (element, elementIndex) {\n            var index = elementIndex ? \"-\" + elementIndex : 0;\n            var key = element.name + index;\n            return (external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](element_SurveyRowElement, { element: element, index: elementIndex, row: _this.row, survey: _this.survey, creator: _this.creator, css: _this.css, key: key }));\n        });\n        return (external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"div\", { ref: this.rootRef, className: this.row.getRowCss() }, elements));\n    };\n    SurveyRow.prototype.renderElement = function () {\n        var survey = this.survey;\n        var content = this.renderElementContent();\n        var wrapper = reactsurveymodel_ReactSurveyElementsWrapper.wrapRow(survey, content, this.row);\n        return wrapper || content;\n    };\n    SurveyRow.prototype.componentDidMount = function () {\n        var _this = this;\n        _super.prototype.componentDidMount.call(this);\n        var el = this.rootRef.current;\n        if (this.rootRef.current) {\n            this.row.setRootElement(this.rootRef.current);\n        }\n        if (!!el && !this.row.isNeedRender) {\n            var rowContainerDiv = el;\n            setTimeout(function () {\n                _this.row.startLazyRendering(rowContainerDiv);\n            }, 10);\n        }\n    };\n    SurveyRow.prototype.shouldComponentUpdate = function (nextProps, nextState) {\n        if (!_super.prototype.shouldComponentUpdate.call(this, nextProps, nextState))\n            return false;\n        if (nextProps.row !== this.row) {\n            nextProps.row.isNeedRender = this.row.isNeedRender;\n            nextProps.row.setRootElement(this.rootRef.current);\n            this.row.setRootElement(undefined);\n            this.stopLazyRendering();\n        }\n        this.recalculateCss();\n        return true;\n    };\n    SurveyRow.prototype.stopLazyRendering = function () {\n        this.row.stopLazyRendering();\n        this.row.isNeedRender = !this.row.isLazyRendering();\n    };\n    SurveyRow.prototype.componentWillUnmount = function () {\n        _super.prototype.componentWillUnmount.call(this);\n        this.row.setRootElement(undefined);\n        this.stopLazyRendering();\n    };\n    SurveyRow.prototype.createElement = function (element, elementIndex) {\n        var index = elementIndex ? \"-\" + elementIndex : 0;\n        var elementType = element.getType();\n        if (!ReactElementFactory.Instance.isElementRegistered(elementType)) {\n            elementType = \"question\";\n        }\n        return ReactElementFactory.Instance.createElement(elementType, {\n            key: element.name + index,\n            element: element,\n            creator: this.creator,\n            survey: this.survey,\n            css: this.css,\n        });\n    };\n    return SurveyRow;\n}(reactquestion_element_SurveyElementBase));\n\n\n// CONCATENATED MODULE: ./packages/survey-react-ui/src/panel-base.tsx\nvar panel_base_extends = ( false) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\n\nvar panel_base_SurveyPanelBase = /** @class */ (function (_super) {\n    panel_base_extends(SurveyPanelBase, _super);\n    function SurveyPanelBase(props) {\n        var _this = _super.call(this, props) || this;\n        _this.rootRef = external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createRef\"]();\n        return _this;\n    }\n    SurveyPanelBase.prototype.getStateElement = function () {\n        return this.panelBase;\n    };\n    SurveyPanelBase.prototype.canUsePropInState = function (key) {\n        return key !== \"elements\" && _super.prototype.canUsePropInState.call(this, key);\n    };\n    Object.defineProperty(SurveyPanelBase.prototype, \"survey\", {\n        get: function () {\n            return this.getSurvey();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(SurveyPanelBase.prototype, \"creator\", {\n        get: function () {\n            return this.props.creator;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(SurveyPanelBase.prototype, \"css\", {\n        get: function () {\n            return this.getCss();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(SurveyPanelBase.prototype, \"panelBase\", {\n        get: function () {\n            return this.getPanelBase();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    SurveyPanelBase.prototype.getPanelBase = function () {\n        return this.props.element || this.props.question;\n    };\n    SurveyPanelBase.prototype.getSurvey = function () {\n        return (this.props.survey || (!!this.panelBase ? this.panelBase.survey : null));\n    };\n    SurveyPanelBase.prototype.getCss = function () {\n        return this.props.css;\n    };\n    SurveyPanelBase.prototype.componentDidMount = function () {\n        _super.prototype.componentDidMount.call(this);\n        this.doAfterRender();\n    };\n    SurveyPanelBase.prototype.componentWillUnmount = function () {\n        _super.prototype.componentWillUnmount.call(this);\n        var el = this.rootRef.current;\n        if (!!el) {\n            el.removeAttribute(\"data-rendered\");\n        }\n    };\n    SurveyPanelBase.prototype.componentDidUpdate = function (prevProps, prevState) {\n        _super.prototype.componentDidUpdate.call(this, prevProps, prevState);\n        if (!!prevProps.page &&\n            !!this.survey &&\n            !!this.survey.activePage &&\n            prevProps.page.id === this.survey.activePage.id)\n            return;\n        this.doAfterRender();\n    };\n    SurveyPanelBase.prototype.doAfterRender = function () {\n        var el = this.rootRef.current;\n        if (el && this.survey) {\n            if (this.panelBase.isPanel) {\n                this.survey.afterRenderPanel(this.panelBase, el);\n            }\n            else {\n                this.survey.afterRenderPage(el);\n            }\n        }\n    };\n    SurveyPanelBase.prototype.getIsVisible = function () {\n        return this.panelBase.isVisible;\n    };\n    SurveyPanelBase.prototype.canRender = function () {\n        return (_super.prototype.canRender.call(this) && !!this.survey && !!this.panelBase && !!this.panelBase.survey && this.getIsVisible());\n    };\n    SurveyPanelBase.prototype.renderRows = function (css) {\n        var _this = this;\n        return this.panelBase.visibleRows.map(function (row) { return _this.createRow(row, css); });\n    };\n    SurveyPanelBase.prototype.createRow = function (row, css) {\n        return (external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](row_SurveyRow, { key: row.id, row: row, survey: this.survey, creator: this.creator, css: css }));\n    };\n    return SurveyPanelBase;\n}(reactquestion_element_SurveyElementBase));\n\n\n// CONCATENATED MODULE: ./packages/survey-react-ui/src/components/svg-icon/svg-icon.tsx\nvar svg_icon_extends = ( false) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\n\nvar svg_icon_SvgIcon = /** @class */ (function (_super) {\n    svg_icon_extends(SvgIcon, _super);\n    function SvgIcon(props) {\n        var _this = _super.call(this, props) || this;\n        _this.svgIconRef = external_root_React_commonjs2_react_commonjs_react_amd_react_default.a.createRef();\n        return _this;\n    }\n    SvgIcon.prototype.updateSvg = function () {\n        if (this.props.iconName)\n            Object(external_root_Survey_commonjs2_survey_core_commonjs_survey_core_amd_survey_core_[\"createSvg\"])(this.props.size, this.props.width, this.props.height, this.props.iconName, this.svgIconRef.current, this.props.title);\n    };\n    SvgIcon.prototype.componentDidUpdate = function () {\n        this.updateSvg();\n    };\n    SvgIcon.prototype.render = function () {\n        var className = \"sv-svg-icon\";\n        if (this.props.className) {\n            className += \" \" + this.props.className;\n        }\n        return (this.props.iconName ?\n            external_root_React_commonjs2_react_commonjs_react_amd_react_default.a.createElement(\"svg\", { className: className, style: this.props.style, onClick: this.props.onClick, ref: this.svgIconRef, role: \"img\" },\n                external_root_React_commonjs2_react_commonjs_react_amd_react_default.a.createElement(\"use\", null))\n            : null);\n    };\n    SvgIcon.prototype.componentDidMount = function () {\n        this.updateSvg();\n    };\n    return SvgIcon;\n}(external_root_React_commonjs2_react_commonjs_react_amd_react_default.a.Component));\n\nReactElementFactory.Instance.registerElement(\"sv-svg-icon\", function (props) {\n    return external_root_React_commonjs2_react_commonjs_react_amd_react_default.a.createElement(svg_icon_SvgIcon, props);\n});\n\n// CONCATENATED MODULE: ./packages/survey-react-ui/src/components/action-bar/action-bar-separator.tsx\nvar action_bar_separator_extends = ( false) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\nvar action_bar_separator_SurveyActionBarSeparator = /** @class */ (function (_super) {\n    action_bar_separator_extends(SurveyActionBarSeparator, _super);\n    function SurveyActionBarSeparator(props) {\n        return _super.call(this, props) || this;\n    }\n    SurveyActionBarSeparator.prototype.render = function () {\n        var className = \"sv-action-bar-separator \" + this.props.cssClasses;\n        return external_root_React_commonjs2_react_commonjs_react_amd_react_default.a.createElement(\"div\", { className: className });\n    };\n    return SurveyActionBarSeparator;\n}(external_root_React_commonjs2_react_commonjs_react_amd_react_default.a.Component));\n\nReactElementFactory.Instance.registerElement(\"sv-action-bar-separator\", function (props) {\n    return external_root_React_commonjs2_react_commonjs_react_amd_react_default.a.createElement(action_bar_separator_SurveyActionBarSeparator, props);\n});\n\n// CONCATENATED MODULE: ./packages/survey-react-ui/src/components/action-bar/action-bar-item.tsx\nvar action_bar_item_extends = ( false) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\n\n\n\n\nvar action_bar_item_SurveyAction = /** @class */ (function (_super) {\n    action_bar_item_extends(SurveyAction, _super);\n    function SurveyAction() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(SurveyAction.prototype, \"item\", {\n        get: function () {\n            return this.props.item;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    SurveyAction.prototype.getStateElement = function () {\n        return this.item;\n    };\n    SurveyAction.prototype.renderElement = function () {\n        //refactor\n        var itemClass = this.item.getActionRootCss();\n        var separator = this.item.needSeparator ? (external_root_React_commonjs2_react_commonjs_react_amd_react_default.a.createElement(action_bar_separator_SurveyActionBarSeparator, null)) : null;\n        var itemComponent = ReactElementFactory.Instance.createElement(this.item.component || \"sv-action-bar-item\", {\n            item: this.item,\n        });\n        return (external_root_React_commonjs2_react_commonjs_react_amd_react_default.a.createElement(\"div\", { className: itemClass, id: this.item.id },\n            external_root_React_commonjs2_react_commonjs_react_amd_react_default.a.createElement(\"div\", { className: \"sv-action__content\" },\n                separator,\n                itemComponent)));\n    };\n    return SurveyAction;\n}(reactquestion_element_SurveyElementBase));\n\nvar action_bar_item_SurveyActionBarItem = /** @class */ (function (_super) {\n    action_bar_item_extends(SurveyActionBarItem, _super);\n    function SurveyActionBarItem() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(SurveyActionBarItem.prototype, \"item\", {\n        get: function () {\n            return this.props.item;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    SurveyActionBarItem.prototype.getStateElement = function () {\n        return this.item;\n    };\n    SurveyActionBarItem.prototype.renderElement = function () {\n        return external_root_React_commonjs2_react_commonjs_react_amd_react_default.a.createElement(external_root_React_commonjs2_react_commonjs_react_amd_react_default.a.Fragment, null, this.renderInnerButton());\n    };\n    SurveyActionBarItem.prototype.renderText = function () {\n        if (!this.item.hasTitle)\n            return null;\n        var titleClass = this.item.getActionBarItemTitleCss();\n        return external_root_React_commonjs2_react_commonjs_react_amd_react_default.a.createElement(\"span\", { className: titleClass }, this.item.title);\n    };\n    SurveyActionBarItem.prototype.renderButtonContent = function () {\n        var text = this.renderText();\n        var svgIcon = !!this.item.iconName ? (external_root_React_commonjs2_react_commonjs_react_amd_react_default.a.createElement(svg_icon_SvgIcon, { className: this.item.cssClasses.itemIcon, size: this.item.iconSize, iconName: this.item.iconName, title: this.item.tooltip || this.item.title })) : null;\n        return (external_root_React_commonjs2_react_commonjs_react_amd_react_default.a.createElement(external_root_React_commonjs2_react_commonjs_react_amd_react_default.a.Fragment, null,\n            svgIcon,\n            text));\n    };\n    SurveyActionBarItem.prototype.renderInnerButton = function () {\n        var _this = this;\n        var className = this.item.getActionBarItemCss();\n        var title = this.item.tooltip || this.item.title;\n        var buttonContent = this.renderButtonContent();\n        var tabIndex = this.item.disableTabStop ? -1 : undefined;\n        var button = attachKey2click(external_root_React_commonjs2_react_commonjs_react_amd_react_default.a.createElement(\"button\", { className: className, type: \"button\", disabled: this.item.disabled, onMouseDown: function () { return _this.item.doMouseDown(); }, onFocus: function (args) { return _this.item.doFocus(args); }, onClick: function (args) { return _this.item.doAction(args); }, title: title, tabIndex: tabIndex, \"aria-checked\": this.item.ariaChecked, \"aria-expanded\": this.item.ariaExpanded, role: this.item.ariaRole }, buttonContent), this.item, { processEsc: false });\n        return button;\n    };\n    return SurveyActionBarItem;\n}(reactquestion_element_SurveyElementBase));\n\nReactElementFactory.Instance.registerElement(\"sv-action-bar-item\", function (props) {\n    return external_root_React_commonjs2_react_commonjs_react_amd_react_default.a.createElement(action_bar_item_SurveyActionBarItem, props);\n});\n\n// EXTERNAL MODULE: external {\"root\":\"ReactDOM\",\"commonjs2\":\"react-dom\",\"commonjs\":\"react-dom\",\"amd\":\"react-dom\"}\nvar external_root_ReactDOM_commonjs2_react_dom_commonjs_react_dom_amd_react_dom_ = __nested_webpack_require_7739__(\"react-dom\");\nvar external_root_ReactDOM_commonjs2_react_dom_commonjs_react_dom_amd_react_dom_default = /*#__PURE__*/__nested_webpack_require_7739__.n(external_root_ReactDOM_commonjs2_react_dom_commonjs_react_dom_amd_react_dom_);\n\n// CONCATENATED MODULE: ./packages/survey-react-ui/src/components/popup/popup.tsx\nvar popup_extends = ( false) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\n\n\n\n\nvar popup_Popup = /** @class */ (function (_super) {\n    popup_extends(Popup, _super);\n    function Popup(props) {\n        var _this = _super.call(this, props) || this;\n        _this.containerRef = external_root_React_commonjs2_react_commonjs_react_amd_react_default.a.createRef();\n        _this.createModel();\n        return _this;\n    }\n    Object.defineProperty(Popup.prototype, \"model\", {\n        get: function () {\n            return this.props.model;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Popup.prototype.getStateElement = function () {\n        return this.model;\n    };\n    Popup.prototype.createModel = function () {\n        this.popup = Object(external_root_Survey_commonjs2_survey_core_commonjs_survey_core_amd_survey_core_[\"createPopupViewModel\"])(this.props.model, undefined);\n    };\n    Popup.prototype.setTargetElement = function () {\n        var container = this.containerRef.current;\n        this.popup.setComponentElement(container, this.props.getTarget ? this.props.getTarget(container) : undefined, this.props.getArea ? this.props.getArea(container) : undefined);\n    };\n    Popup.prototype.componentDidMount = function () {\n        _super.prototype.componentDidMount.call(this);\n        this.setTargetElement();\n    };\n    Popup.prototype.componentDidUpdate = function (prevProps, prevState) {\n        _super.prototype.componentDidUpdate.call(this, prevProps, prevState);\n        this.setTargetElement();\n    };\n    Popup.prototype.componentWillUnmount = function () {\n        _super.prototype.componentWillUnmount.call(this);\n        this.popup.resetComponentElement();\n    };\n    Popup.prototype.shouldComponentUpdate = function (nextProps, nextState) {\n        var _a;\n        if (!_super.prototype.shouldComponentUpdate.call(this, nextProps, nextState))\n            return false;\n        var isNeedUpdate = nextProps.model !== this.popup.model;\n        if (isNeedUpdate) {\n            (_a = this.popup) === null || _a === void 0 ? void 0 : _a.dispose();\n            this.createModel();\n        }\n        return isNeedUpdate;\n    };\n    Popup.prototype.render = function () {\n        this.popup.model = this.model;\n        var popupContainer;\n        if (this.model.isModal) {\n            popupContainer = external_root_React_commonjs2_react_commonjs_react_amd_react_default.a.createElement(popup_PopupContainer, { model: this.popup });\n        }\n        else {\n            popupContainer = external_root_React_commonjs2_react_commonjs_react_amd_react_default.a.createElement(popup_PopupDropdownContainer, { model: this.popup });\n        }\n        return external_root_React_commonjs2_react_commonjs_react_amd_react_default.a.createElement(\"div\", { ref: this.containerRef }, popupContainer);\n    };\n    return Popup;\n}(reactquestion_element_SurveyElementBase));\n\nReactElementFactory.Instance.registerElement(\"sv-popup\", function (props) {\n    return external_root_React_commonjs2_react_commonjs_react_amd_react_default.a.createElement(popup_Popup, props);\n});\nvar popup_PopupContainer = /** @class */ (function (_super) {\n    popup_extends(PopupContainer, _super);\n    function PopupContainer(props) {\n        var _this = _super.call(this, props) || this;\n        _this.handleKeydown = function (event) {\n            _this.model.onKeyDown(event);\n        };\n        _this.clickInside = function (ev) {\n            ev.stopPropagation();\n        };\n        return _this;\n    }\n    Object.defineProperty(PopupContainer.prototype, \"model\", {\n        get: function () {\n            return this.props.model;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    PopupContainer.prototype.getStateElement = function () {\n        return this.model;\n    };\n    PopupContainer.prototype.componentDidUpdate = function (prevProps, prevState) {\n        _super.prototype.componentDidUpdate.call(this, prevProps, prevState);\n        if (!this.model.isPositionSet && this.model.isVisible) {\n            this.model.updateOnShowing();\n        }\n    };\n    PopupContainer.prototype.renderContainer = function (popupBaseViewModel) {\n        var _this = this;\n        var headerPopup = popupBaseViewModel.showHeader ? this.renderHeaderPopup(popupBaseViewModel) : null;\n        var headerContent = !!popupBaseViewModel.title ? this.renderHeaderContent() : null;\n        var content = this.renderContent();\n        var footerContent = popupBaseViewModel.showFooter ? this.renderFooter(this.model) : null;\n        return (external_root_React_commonjs2_react_commonjs_react_amd_react_default.a.createElement(\"div\", { className: \"sv-popup__container\", style: {\n                left: popupBaseViewModel.left,\n                top: popupBaseViewModel.top,\n                height: popupBaseViewModel.height,\n                width: popupBaseViewModel.width,\n                minWidth: popupBaseViewModel.minWidth,\n            }, onClick: function (ev) {\n                _this.clickInside(ev);\n            } },\n            external_root_React_commonjs2_react_commonjs_react_amd_react_default.a.createElement(\"div\", { className: \"sv-popup__shadow\" },\n                headerPopup,\n                external_root_React_commonjs2_react_commonjs_react_amd_react_default.a.createElement(\"div\", { className: \"sv-popup__body-content\" },\n                    headerContent,\n                    external_root_React_commonjs2_react_commonjs_react_amd_react_default.a.createElement(\"div\", { className: \"sv-popup__scrolling-content\" }, content),\n                    footerContent))));\n    };\n    PopupContainer.prototype.renderHeaderContent = function () {\n        return external_root_React_commonjs2_react_commonjs_react_amd_react_default.a.createElement(\"div\", { className: \"sv-popup__body-header\" }, this.model.title);\n    };\n    PopupContainer.prototype.renderContent = function () {\n        var contentComponent = ReactElementFactory.Instance.createElement(this.model.contentComponentName, this.model.contentComponentData);\n        return external_root_React_commonjs2_react_commonjs_react_amd_react_default.a.createElement(\"div\", { className: \"sv-popup__content\" }, contentComponent);\n    };\n    PopupContainer.prototype.renderHeaderPopup = function (popupModel) {\n        return null;\n    };\n    PopupContainer.prototype.renderFooter = function (popuModel) {\n        return (external_root_React_commonjs2_react_commonjs_react_amd_react_default.a.createElement(\"div\", { className: \"sv-popup__body-footer\" },\n            external_root_React_commonjs2_react_commonjs_react_amd_react_default.a.createElement(action_bar_SurveyActionBar, { model: popuModel.footerToolbar })));\n    };\n    PopupContainer.prototype.render = function () {\n        var _this = this;\n        var container = this.renderContainer(this.model);\n        var className = new external_root_Survey_commonjs2_survey_core_commonjs_survey_core_amd_survey_core_[\"CssClassBuilder\"]()\n            .append(\"sv-popup\")\n            .append(this.model.styleClass)\n            .toString();\n        var style = { display: this.model.isVisible ? \"\" : \"none\", };\n        return (external_root_React_commonjs2_react_commonjs_react_amd_react_default.a.createElement(\"div\", { tabIndex: -1, className: className, style: style, onClick: function (e) {\n                _this.model.clickOutside(e);\n            }, onKeyDown: this.handleKeydown }, container));\n    };\n    return PopupContainer;\n}(reactquestion_element_SurveyElementBase));\n\nvar popup_PopupDropdownContainer = /** @class */ (function (_super) {\n    popup_extends(PopupDropdownContainer, _super);\n    function PopupDropdownContainer() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    PopupDropdownContainer.prototype.renderHeaderPopup = function (popupModel) {\n        var popupDropdownModel = popupModel;\n        if (!popupDropdownModel)\n            return null;\n        return (external_root_React_commonjs2_react_commonjs_react_amd_react_default.a.createElement(\"span\", { style: {\n                left: popupDropdownModel.pointerTarget.left,\n                top: popupDropdownModel.pointerTarget.top,\n            }, className: \"sv-popup__pointer\" }));\n    };\n    return PopupDropdownContainer;\n}(popup_PopupContainer));\n\n// replace to showDialog then delete\nfunction showModal(componentName, data, onApply, onCancel, cssClass, title, displayMode) {\n    if (displayMode === void 0) { displayMode = \"popup\"; }\n    var options = Object(external_root_Survey_commonjs2_survey_core_commonjs_survey_core_amd_survey_core_[\"createDialogOptions\"])(componentName, data, onApply, onCancel, undefined, undefined, cssClass, title, displayMode);\n    return showDialog(options);\n}\nfunction showDialog(dialogOptions, rootElement) {\n    var popupViewModel = Object(external_root_Survey_commonjs2_survey_core_commonjs_survey_core_amd_survey_core_[\"createPopupModalViewModel\"])(dialogOptions, rootElement);\n    var onVisibilityChangedCallback = function (_, options) {\n        if (!options.isVisible) {\n            external_root_ReactDOM_commonjs2_react_dom_commonjs_react_dom_amd_react_dom_default.a.unmountComponentAtNode(popupViewModel.container);\n            popupViewModel.dispose();\n        }\n    };\n    popupViewModel.onVisibilityChanged.add(onVisibilityChangedCallback);\n    external_root_ReactDOM_commonjs2_react_dom_commonjs_react_dom_amd_react_dom_default.a.render(external_root_React_commonjs2_react_commonjs_react_amd_react_default.a.createElement(popup_PopupContainer, { model: popupViewModel }), popupViewModel.container);\n    popupViewModel.model.isVisible = true;\n    return popupViewModel;\n}\nexternal_root_Survey_commonjs2_survey_core_commonjs_survey_core_amd_survey_core_[\"settings\"].showModal = showModal;\nexternal_root_Survey_commonjs2_survey_core_commonjs_survey_core_amd_survey_core_[\"settings\"].showDialog = showDialog;\n\n// CONCATENATED MODULE: ./packages/survey-react-ui/src/components/action-bar/action-bar-item-dropdown.tsx\nvar action_bar_item_dropdown_extends = ( false) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\n\n\n\nvar action_bar_item_dropdown_SurveyActionBarItemDropdown = /** @class */ (function (_super) {\n    action_bar_item_dropdown_extends(SurveyActionBarItemDropdown, _super);\n    function SurveyActionBarItemDropdown(props) {\n        var _this = _super.call(this, props) || this;\n        _this.viewModel = new external_root_Survey_commonjs2_survey_core_commonjs_survey_core_amd_survey_core_[\"ActionDropdownViewModel\"](_this.item);\n        return _this;\n    }\n    SurveyActionBarItemDropdown.prototype.renderInnerButton = function () {\n        var button = _super.prototype.renderInnerButton.call(this);\n        return (external_root_React_commonjs2_react_commonjs_react_amd_react_default.a.createElement(external_root_React_commonjs2_react_commonjs_react_amd_react_default.a.Fragment, null,\n            button,\n            external_root_React_commonjs2_react_commonjs_react_amd_react_default.a.createElement(popup_Popup, { model: this.item.popupModel, getTarget: external_root_Survey_commonjs2_survey_core_commonjs_survey_core_amd_survey_core_[\"getActionDropdownButtonTarget\"] })));\n    };\n    SurveyActionBarItemDropdown.prototype.componentWillUnmount = function () {\n        _super.prototype.componentWillUnmount.call(this);\n        this.viewModel.dispose();\n    };\n    return SurveyActionBarItemDropdown;\n}(action_bar_item_SurveyActionBarItem));\n\nReactElementFactory.Instance.registerElement(\"sv-action-bar-item-dropdown\", function (props) {\n    return external_root_React_commonjs2_react_commonjs_react_amd_react_default.a.createElement(action_bar_item_dropdown_SurveyActionBarItemDropdown, props);\n});\n\n// CONCATENATED MODULE: ./packages/survey-react-ui/src/components/action-bar/action-bar.tsx\nvar action_bar_extends = ( false) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\n\n\n\n\nvar action_bar_SurveyActionBar = /** @class */ (function (_super) {\n    action_bar_extends(SurveyActionBar, _super);\n    function SurveyActionBar(props) {\n        var _this = _super.call(this, props) || this;\n        _this.rootRef = external_root_React_commonjs2_react_commonjs_react_amd_react_default.a.createRef();\n        return _this;\n    }\n    Object.defineProperty(SurveyActionBar.prototype, \"handleClick\", {\n        get: function () {\n            return this.props.handleClick !== undefined ? this.props.handleClick : true;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(SurveyActionBar.prototype, \"model\", {\n        get: function () {\n            return this.props.model;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    SurveyActionBar.prototype.componentDidMount = function () {\n        _super.prototype.componentDidMount.call(this);\n        if (!this.model.hasActions)\n            return;\n        var container = this.rootRef.current;\n        if (!!container) {\n            this.model.initResponsivityManager(container, function (callback) { setTimeout(callback); });\n        }\n    };\n    SurveyActionBar.prototype.componentWillUnmount = function () {\n        _super.prototype.componentWillUnmount.call(this);\n        if (!!this.model.hasActions) {\n            this.model.resetResponsivityManager();\n        }\n    };\n    SurveyActionBar.prototype.componentDidUpdate = function (prevProps, prevState) {\n        _super.prototype.componentDidUpdate.call(this, prevProps, prevState);\n        if (prevProps.model == this.props.model) {\n            return;\n        }\n        if (!!this.model.hasActions) {\n            this.model.resetResponsivityManager();\n            var container = this.rootRef.current;\n            if (!!container) {\n                this.model.initResponsivityManager(container, function (callback) { setTimeout(callback); });\n            }\n        }\n    };\n    SurveyActionBar.prototype.getStateElement = function () {\n        return this.model;\n    };\n    SurveyActionBar.prototype.renderElement = function () {\n        if (!this.model.hasActions)\n            return null;\n        var items = this.renderItems();\n        return (external_root_React_commonjs2_react_commonjs_react_amd_react_default.a.createElement(\"div\", { ref: this.rootRef, className: this.model.getRootCss(), onClick: this.handleClick ? function (event) {\n                event.stopPropagation();\n            } : undefined }, items));\n    };\n    SurveyActionBar.prototype.renderItems = function () {\n        return this.model.renderedActions.map(function (item, itemIndex) {\n            return (external_root_React_commonjs2_react_commonjs_react_amd_react_default.a.createElement(action_bar_item_SurveyAction, { item: item, key: \"item\" + itemIndex }));\n        });\n    };\n    return SurveyActionBar;\n}(reactquestion_element_SurveyElementBase));\n\nReactElementFactory.Instance.registerElement(\"sv-action-bar\", function (props) {\n    return external_root_React_commonjs2_react_commonjs_react_amd_react_default.a.createElement(action_bar_SurveyActionBar, props);\n});\n\n// CONCATENATED MODULE: ./packages/survey-react-ui/src/components/title/title-content.tsx\nvar title_content_extends = ( false) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\nvar title_content_TitleContent = /** @class */ (function (_super) {\n    title_content_extends(TitleContent, _super);\n    function TitleContent(props) {\n        return _super.call(this, props) || this;\n    }\n    Object.defineProperty(TitleContent.prototype, \"cssClasses\", {\n        get: function () {\n            return this.props.cssClasses;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(TitleContent.prototype, \"element\", {\n        get: function () {\n            return this.props.element;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    TitleContent.prototype.render = function () {\n        if (this.element.isTitleRenderedAsString)\n            return reactquestion_element_SurveyElementBase.renderLocString(this.element.locTitle);\n        var spans = this.renderTitleSpans(this.element.getTitleOwner(), this.cssClasses);\n        return external_root_React_commonjs2_react_commonjs_react_amd_react_default.a.createElement(external_root_React_commonjs2_react_commonjs_react_amd_react_default.a.Fragment, null, spans);\n    };\n    TitleContent.prototype.renderTitleSpans = function (element, cssClasses) {\n        var getSpaceSpan = function (key) {\n            return (external_root_React_commonjs2_react_commonjs_react_amd_react_default.a.createElement(\"span\", { \"data-key\": key, key: key }, \"\\u00A0\"));\n        };\n        var spans = [];\n        if (element.isRequireTextOnStart) {\n            spans.push(this.renderRequireText(element, cssClasses));\n            spans.push(getSpaceSpan(\"req-sp\"));\n        }\n        var questionNumber = element.no;\n        if (questionNumber) {\n            var panelNumber = !!cssClasses.panel ? cssClasses.panel.number : undefined;\n            spans.push(external_root_React_commonjs2_react_commonjs_react_amd_react_default.a.createElement(\"span\", { \"data-key\": \"q_num\", key: \"q_num\", className: cssClasses.number || panelNumber, style: { position: \"static\" }, \"aria-hidden\": true }, questionNumber));\n            spans.push(getSpaceSpan(\"num-sp\"));\n        }\n        if (element.isRequireTextBeforeTitle) {\n            spans.push(this.renderRequireText(element, cssClasses));\n            spans.push(getSpaceSpan(\"req-sp\"));\n        }\n        spans.push(reactquestion_element_SurveyElementBase.renderLocString(element.locTitle, null, \"q_title\"));\n        if (element.isRequireTextAfterTitle) {\n            spans.push(getSpaceSpan(\"req-sp\"));\n            spans.push(this.renderRequireText(element, cssClasses));\n        }\n        return spans;\n    };\n    TitleContent.prototype.renderRequireText = function (element, cssClasses) {\n        return (external_root_React_commonjs2_react_commonjs_react_amd_react_default.a.createElement(\"span\", { \"data-key\": \"req-text\", key: \"req-text\", className: cssClasses.requiredText || cssClasses.panel.requiredText, \"aria-hidden\": true }, element.requiredText));\n    };\n    return TitleContent;\n}(external_root_React_commonjs2_react_commonjs_react_amd_react_default.a.Component));\n\n\n// CONCATENATED MODULE: ./packages/survey-react-ui/src/components/title/title-actions.tsx\nvar title_actions_extends = ( false) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\n\n\n\nvar title_actions_TitleActions = /** @class */ (function (_super) {\n    title_actions_extends(TitleActions, _super);\n    function TitleActions() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(TitleActions.prototype, \"cssClasses\", {\n        get: function () {\n            return this.props.cssClasses;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(TitleActions.prototype, \"element\", {\n        get: function () {\n            return this.props.element;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    TitleActions.prototype.render = function () {\n        var titleContent = external_root_React_commonjs2_react_commonjs_react_amd_react_default.a.createElement(title_content_TitleContent, { element: this.element, cssClasses: this.cssClasses });\n        if (!this.element.hasTitleActions)\n            return titleContent;\n        return (external_root_React_commonjs2_react_commonjs_react_amd_react_default.a.createElement(\"div\", { className: \"sv-title-actions\" },\n            external_root_React_commonjs2_react_commonjs_react_amd_react_default.a.createElement(\"span\", { className: \"sv-title-actions__title\" }, titleContent),\n            external_root_React_commonjs2_react_commonjs_react_amd_react_default.a.createElement(action_bar_SurveyActionBar, { model: this.element.getTitleToolbar() })));\n    };\n    return TitleActions;\n}(external_root_React_commonjs2_react_commonjs_react_amd_react_default.a.Component));\n\nexternal_root_Survey_commonjs2_survey_core_commonjs_survey_core_amd_survey_core_[\"RendererFactory\"].Instance.registerRenderer(\"element\", \"title-actions\", \"sv-title-actions\");\nReactElementFactory.Instance.registerElement(\"sv-title-actions\", function (props) {\n    return external_root_React_commonjs2_react_commonjs_react_amd_react_default.a.createElement(title_actions_TitleActions, props);\n});\n\n// CONCATENATED MODULE: ./packages/survey-react-ui/src/components/title/title-element.tsx\nvar title_element_extends = ( false) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\n\nvar title_element_TitleElement = /** @class */ (function (_super) {\n    title_element_extends(TitleElement, _super);\n    function TitleElement(props) {\n        return _super.call(this, props) || this;\n    }\n    Object.defineProperty(TitleElement.prototype, \"element\", {\n        get: function () {\n            return this.props.element;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    TitleElement.prototype.render = function () {\n        var element = this.element;\n        if (!element || !element.hasTitle)\n            return null;\n        var ariaLabel = element.titleAriaLabel || undefined;\n        var titleContent = (external_root_React_commonjs2_react_commonjs_react_amd_react_default.a.createElement(title_actions_TitleActions, { element: element, cssClasses: element.cssClasses }));\n        var onClick = undefined;\n        var onKeyUp = undefined;\n        if (element.hasTitleEvents) {\n            onKeyUp = function (evt) {\n                Object(external_root_Survey_commonjs2_survey_core_commonjs_survey_core_amd_survey_core_[\"doKey2ClickUp\"])(evt.nativeEvent);\n            };\n        }\n        var CustomTag = element.titleTagName;\n        return (external_root_React_commonjs2_react_commonjs_react_amd_react_default.a.createElement(CustomTag, { className: element.cssTitle, id: element.ariaTitleId, \"aria-label\": ariaLabel, tabIndex: element.titleTabIndex, \"aria-expanded\": element.titleAriaExpanded, role: element.titleAriaRole, onClick: onClick, onKeyUp: onKeyUp }, titleContent));\n    };\n    return TitleElement;\n}(external_root_React_commonjs2_react_commonjs_react_amd_react_default.a.Component));\n\n\n// CONCATENATED MODULE: ./packages/survey-react-ui/src/reactquestion_factory.tsx\nvar ReactQuestionFactory = /** @class */ (function () {\n    function ReactQuestionFactory() {\n        this.creatorHash = {};\n    }\n    ReactQuestionFactory.prototype.registerQuestion = function (questionType, questionCreator) {\n        this.creatorHash[questionType] = questionCreator;\n    };\n    ReactQuestionFactory.prototype.getAllTypes = function () {\n        var result = new Array();\n        for (var key in this.creatorHash) {\n            result.push(key);\n        }\n        return result.sort();\n    };\n    ReactQuestionFactory.prototype.createQuestion = function (questionType, params) {\n        var creator = this.creatorHash[questionType];\n        if (creator == null)\n            return null;\n        return creator(params);\n    };\n    ReactQuestionFactory.Instance = new ReactQuestionFactory();\n    return ReactQuestionFactory;\n}());\n\n\n// CONCATENATED MODULE: ./packages/survey-react-ui/src/components/character-counter.tsx\nvar character_counter_extends = ( false) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\n\nvar character_counter_CharacterCounterComponent = /** @class */ (function (_super) {\n    character_counter_extends(CharacterCounterComponent, _super);\n    function CharacterCounterComponent() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    CharacterCounterComponent.prototype.getStateElement = function () {\n        return this.props.counter;\n    };\n    CharacterCounterComponent.prototype.renderElement = function () {\n        return (external_root_React_commonjs2_react_commonjs_react_amd_react_default.a.createElement(\"div\", { className: this.props.remainingCharacterCounter }, this.props.counter.remainingCharacterCounter));\n    };\n    return CharacterCounterComponent;\n}(reactquestion_element_SurveyElementBase));\n\nReactElementFactory.Instance.registerElement(\"sv-character-counter\", function (props) {\n    return external_root_React_commonjs2_react_commonjs_react_amd_react_default.a.createElement(character_counter_CharacterCounterComponent, props);\n});\n\n// CONCATENATED MODULE: ./packages/survey-react-ui/src/reactquestion_comment.tsx\nvar reactquestion_comment_extends = ( false) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\n\n\n\nvar reactquestion_comment_SurveyQuestionComment = /** @class */ (function (_super) {\n    reactquestion_comment_extends(SurveyQuestionComment, _super);\n    function SurveyQuestionComment(props) {\n        return _super.call(this, props) || this;\n    }\n    SurveyQuestionComment.prototype.renderElement = function () {\n        var _this = this;\n        var onBlur = function (e) {\n            if (!_this.question.isInputTextUpdate) {\n                _this.updateValueOnEvent(e);\n            }\n            _this.question.onBlur(e);\n        };\n        var onInput = function (event) {\n            if (_this.question.isInputTextUpdate) {\n                _this.updateValueOnEvent(event);\n            }\n            else {\n                _this.question.updateElement();\n            }\n            var newValue = event.target.value;\n            _this.question.updateRemainingCharacterCounter(newValue);\n        };\n        var placeholder = this.question.renderedPlaceholder;\n        if (this.question.isReadOnlyRenderDiv()) {\n            return external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"div\", null, this.question.value);\n        }\n        var counter = !!this.question.getMaxLength() ? (external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](character_counter_CharacterCounterComponent, { counter: this.question.characterCounter, remainingCharacterCounter: this.question.cssClasses.remainingCharacterCounter })) : null;\n        return (external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](external_root_React_commonjs2_react_commonjs_react_amd_react_[\"Fragment\"], null,\n            external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"textarea\", { id: this.question.inputId, className: this.question.className, disabled: this.question.isDisabledAttr, readOnly: this.question.isReadOnlyAttr, ref: function (textarea) { return (_this.setControl(textarea)); }, maxLength: this.question.getMaxLength(), placeholder: placeholder, onFocus: function (event) { _this.question.onFocus(event); }, onBlur: onBlur, onInput: onInput, onKeyDown: function (event) { _this.question.onKeyDown(event); }, cols: this.question.cols, rows: this.question.rows, \"aria-required\": this.question.a11y_input_ariaRequired, \"aria-label\": this.question.a11y_input_ariaLabel, \"aria-labelledby\": this.question.a11y_input_ariaLabelledBy, \"aria-describedby\": this.question.a11y_input_ariaDescribedBy, \"aria-invalid\": this.question.a11y_input_ariaInvalid, \"aria-errormessage\": this.question.a11y_input_ariaErrormessage, style: { resize: this.question.resizeStyle } }),\n            counter));\n    };\n    return SurveyQuestionComment;\n}(reactquestion_element_SurveyQuestionUncontrolledElement));\n\nvar reactquestion_comment_SurveyQuestionCommentItem = /** @class */ (function (_super) {\n    reactquestion_comment_extends(SurveyQuestionCommentItem, _super);\n    function SurveyQuestionCommentItem(props) {\n        var _this = _super.call(this, props) || this;\n        _this.state = { comment: _this.getComment() || \"\" };\n        return _this;\n    }\n    SurveyQuestionCommentItem.prototype.componentDidUpdate = function (prevProps, prevState) {\n        _super.prototype.componentDidUpdate.call(this, prevProps, prevState);\n        this.updateDomElement();\n    };\n    SurveyQuestionCommentItem.prototype.componentDidMount = function () {\n        _super.prototype.componentDidMount.call(this);\n        this.updateDomElement();\n    };\n    SurveyQuestionCommentItem.prototype.updateDomElement = function () {\n        if (!!this.control) {\n            var control = this.control;\n            var newValue = this.getComment() || \"\";\n            if (!external_root_Survey_commonjs2_survey_core_commonjs_survey_core_amd_survey_core_[\"Helpers\"].isTwoValueEquals(newValue, control.value, false, true, false)) {\n                control.value = newValue;\n            }\n        }\n    };\n    SurveyQuestionCommentItem.prototype.setControl = function (element) {\n        if (!!element) {\n            this.control = element;\n        }\n    };\n    SurveyQuestionCommentItem.prototype.canRender = function () {\n        return !!this.props.question;\n    };\n    SurveyQuestionCommentItem.prototype.onCommentChange = function (event) {\n        this.props.question.onCommentChange(event);\n    };\n    SurveyQuestionCommentItem.prototype.onCommentInput = function (event) {\n        this.props.question.onCommentInput(event);\n    };\n    SurveyQuestionCommentItem.prototype.getComment = function () {\n        return this.props.question.comment;\n    };\n    SurveyQuestionCommentItem.prototype.setComment = function (value) {\n        this.props.question.comment = value;\n    };\n    SurveyQuestionCommentItem.prototype.getId = function () {\n        return this.props.question.commentId;\n    };\n    SurveyQuestionCommentItem.prototype.getPlaceholder = function () {\n        return this.props.question.renderedCommentPlaceholder;\n    };\n    SurveyQuestionCommentItem.prototype.renderElement = function () {\n        var _this = this;\n        var question = this.props.question;\n        var className = this.props.otherCss || this.cssClasses.comment;\n        if (question.isReadOnlyRenderDiv()) {\n            var comment = this.getComment() || \"\";\n            return external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"div\", null, comment);\n        }\n        return (external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"textarea\", { id: this.getId(), className: className, ref: function (textarea) { return (_this.setControl(textarea)); }, disabled: this.isDisplayMode, maxLength: question.getOthersMaxLength(), rows: question.commentAreaRows, placeholder: this.getPlaceholder(), onBlur: function (e) { _this.onCommentChange(e); }, onInput: function (e) { return _this.onCommentInput(e); }, \"aria-required\": question.isRequired || question.a11y_input_ariaRequired, \"aria-label\": question.ariaLabel || question.a11y_input_ariaLabel, style: { resize: question.resizeStyle } }));\n    };\n    return SurveyQuestionCommentItem;\n}(ReactSurveyElement));\n\nvar SurveyQuestionOtherValueItem = /** @class */ (function (_super) {\n    reactquestion_comment_extends(SurveyQuestionOtherValueItem, _super);\n    function SurveyQuestionOtherValueItem() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    SurveyQuestionOtherValueItem.prototype.onCommentChange = function (event) {\n        this.props.question.onOtherValueChange(event);\n    };\n    SurveyQuestionOtherValueItem.prototype.onCommentInput = function (event) {\n        this.props.question.onOtherValueInput(event);\n    };\n    SurveyQuestionOtherValueItem.prototype.getComment = function () {\n        return this.props.question.otherValue;\n    };\n    SurveyQuestionOtherValueItem.prototype.setComment = function (value) {\n        this.props.question.otherValue = value;\n    };\n    SurveyQuestionOtherValueItem.prototype.getId = function () {\n        return this.props.question.otherId;\n    };\n    SurveyQuestionOtherValueItem.prototype.getPlaceholder = function () {\n        return this.props.question.otherPlaceholder;\n    };\n    return SurveyQuestionOtherValueItem;\n}(reactquestion_comment_SurveyQuestionCommentItem));\n\nReactQuestionFactory.Instance.registerQuestion(\"comment\", function (props) {\n    return external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](reactquestion_comment_SurveyQuestionComment, props);\n});\n\n// CONCATENATED MODULE: ./packages/survey-react-ui/src/custom-widget.tsx\nvar custom_widget_extends = ( false) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\nvar custom_widget_SurveyCustomWidget = /** @class */ (function (_super) {\n    custom_widget_extends(SurveyCustomWidget, _super);\n    function SurveyCustomWidget(props) {\n        var _this = _super.call(this, props) || this;\n        _this.widgetRef = external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createRef\"]();\n        return _this;\n    }\n    SurveyCustomWidget.prototype._afterRender = function () {\n        if (this.questionBase.customWidget) {\n            var el = this.widgetRef.current;\n            if (!!el) {\n                this.questionBase.customWidget.afterRender(this.questionBase, el);\n                this.questionBase.customWidgetData.isNeedRender = false;\n            }\n        }\n    };\n    SurveyCustomWidget.prototype.componentDidMount = function () {\n        _super.prototype.componentDidMount.call(this);\n        if (this.questionBase) {\n            this._afterRender();\n        }\n    };\n    SurveyCustomWidget.prototype.componentDidUpdate = function (prevProps, prevState) {\n        _super.prototype.componentDidUpdate.call(this, prevProps, prevState);\n        var isDefaultRender = !!this.questionBase.customWidget &&\n            this.questionBase.customWidget.isDefaultRender;\n        if (this.questionBase && !isDefaultRender) {\n            this._afterRender();\n        }\n    };\n    SurveyCustomWidget.prototype.componentWillUnmount = function () {\n        _super.prototype.componentWillUnmount.call(this);\n        if (this.questionBase.customWidget) {\n            var el = this.widgetRef.current;\n            if (!!el) {\n                this.questionBase.customWidget.willUnmount(this.questionBase, el);\n            }\n        }\n    };\n    SurveyCustomWidget.prototype.canRender = function () {\n        return _super.prototype.canRender.call(this) && this.questionBase.visible;\n    };\n    SurveyCustomWidget.prototype.renderElement = function () {\n        var customWidget = this.questionBase.customWidget;\n        if (customWidget.isDefaultRender) {\n            return (external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"div\", { ref: this.widgetRef }, this.creator.createQuestionElement(this.questionBase)));\n        }\n        var widget = null;\n        if (customWidget.widgetJson.render) {\n            widget = customWidget.widgetJson.render(this.questionBase);\n        }\n        else {\n            if (customWidget.htmlTemplate) {\n                var htmlValue = { __html: customWidget.htmlTemplate };\n                return external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"div\", { ref: this.widgetRef, dangerouslySetInnerHTML: htmlValue });\n            }\n        }\n        return external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"div\", { ref: this.widgetRef }, widget);\n    };\n    return SurveyCustomWidget;\n}(reactquestion_element_SurveyQuestionElementBase));\n\n\n// CONCATENATED MODULE: ./packages/survey-react-ui/src/element-header.tsx\nvar element_header_extends = ( false) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\n\n\n\nvar element_header_SurveyElementHeader = /** @class */ (function (_super) {\n    element_header_extends(SurveyElementHeader, _super);\n    function SurveyElementHeader() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(SurveyElementHeader.prototype, \"element\", {\n        get: function () {\n            return this.props.element;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    SurveyElementHeader.prototype.render = function () {\n        var element = this.element;\n        var title = element.hasTitle ? (external_root_React_commonjs2_react_commonjs_react_amd_react_default.a.createElement(title_element_TitleElement, { element: element })) : null;\n        var description = element.hasDescriptionUnderTitle\n            ? reactquestion_element_SurveyElementBase.renderQuestionDescription(this.element)\n            : null;\n        var additionalTitleToolbarElement = element.hasAdditionalTitleToolbar ? external_root_React_commonjs2_react_commonjs_react_amd_react_default.a.createElement(action_bar_SurveyActionBar, { model: element.additionalTitleToolbar }) : null;\n        var headerStyle = { width: undefined };\n        if (element instanceof external_root_Survey_commonjs2_survey_core_commonjs_survey_core_amd_survey_core_[\"Question\"]) {\n            headerStyle.width = element.titleWidth;\n        }\n        return (external_root_React_commonjs2_react_commonjs_react_amd_react_default.a.createElement(\"div\", { className: element.cssHeader, onClick: function (e) { return element.clickTitleFunction && element.clickTitleFunction(e.nativeEvent); }, style: headerStyle },\n            title,\n            description,\n            additionalTitleToolbarElement));\n    };\n    return SurveyElementHeader;\n}(external_root_React_commonjs2_react_commonjs_react_amd_react_default.a.Component));\n\n\n// CONCATENATED MODULE: ./packages/survey-react-ui/src/reactquestion.tsx\nvar reactquestion_extends = ( false) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\n\n\n\n\n\nvar reactquestion_SurveyQuestion = /** @class */ (function (_super) {\n    reactquestion_extends(SurveyQuestion, _super);\n    function SurveyQuestion(props) {\n        var _this = _super.call(this, props) || this;\n        _this.isNeedFocus = false;\n        _this.rootRef = external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createRef\"]();\n        return _this;\n    }\n    SurveyQuestion.renderQuestionBody = function (creator, question) {\n        // if (!question.isVisible) return null;\n        var customWidget = question.customWidget;\n        if (!customWidget) {\n            return creator.createQuestionElement(question);\n        }\n        return external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](custom_widget_SurveyCustomWidget, { creator: creator, question: question });\n    };\n    SurveyQuestion.prototype.getStateElement = function () {\n        return this.question;\n    };\n    Object.defineProperty(SurveyQuestion.prototype, \"question\", {\n        get: function () {\n            return this.props.element;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(SurveyQuestion.prototype, \"creator\", {\n        get: function () {\n            return this.props.creator;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    SurveyQuestion.prototype.componentDidMount = function () {\n        _super.prototype.componentDidMount.call(this);\n        if (!!this.question) {\n            this.question[\"react\"] = this;\n        }\n        this.doAfterRender();\n    };\n    SurveyQuestion.prototype.componentWillUnmount = function () {\n        _super.prototype.componentWillUnmount.call(this);\n        if (!!this.question) {\n            this.question[\"react\"] = null;\n        }\n        var el = this.rootRef.current;\n        if (!!el) {\n            el.removeAttribute(\"data-rendered\");\n        }\n    };\n    SurveyQuestion.prototype.componentDidUpdate = function (prevProps, prevState) {\n        _super.prototype.componentDidUpdate.call(this, prevProps, prevState);\n        this.doAfterRender();\n    };\n    SurveyQuestion.prototype.doAfterRender = function () {\n        if (this.isNeedFocus) {\n            if (!this.question.isCollapsed) {\n                this.question.clickTitleFunction();\n            }\n            this.isNeedFocus = false;\n        }\n        if (this.question) {\n            var el = this.rootRef.current;\n            if (el && el.getAttribute(\"data-rendered\") !== \"r\") {\n                el.setAttribute(\"data-rendered\", \"r\");\n                el.setAttribute(\"data-name\", this.question.name);\n                if (this.question.afterRender) {\n                    this.question.afterRender(el);\n                }\n            }\n        }\n    };\n    SurveyQuestion.prototype.canRender = function () {\n        return (_super.prototype.canRender.call(this) &&\n            !!this.question &&\n            !!this.creator);\n    };\n    SurveyQuestion.prototype.renderQuestionContent = function () {\n        var question = this.question;\n        var contentStyle = {\n            display: this.question.renderedIsExpanded ? \"\" : \"none\",\n        };\n        var cssClasses = question.cssClasses;\n        var questionRender = this.renderQuestion();\n        var errorsTop = this.question.showErrorOnTop\n            ? this.renderErrors(cssClasses, \"top\")\n            : null;\n        var errorsBottom = this.question.showErrorOnBottom\n            ? this.renderErrors(cssClasses, \"bottom\")\n            : null;\n        var comment = question && question.hasComment ? this.renderComment(cssClasses) : null;\n        var descriptionUnderInput = question.hasDescriptionUnderInput\n            ? this.renderDescription()\n            : null;\n        return (external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"div\", { className: question.cssContent || undefined, style: contentStyle, role: \"presentation\" },\n            errorsTop,\n            questionRender,\n            comment,\n            errorsBottom,\n            descriptionUnderInput));\n    };\n    SurveyQuestion.prototype.renderElement = function () {\n        var question = this.question;\n        var cssClasses = question.cssClasses;\n        var header = this.renderHeader(question);\n        var headerTop = question.hasTitleOnLeftTop ? header : null;\n        var headerBottom = question.hasTitleOnBottom ? header : null;\n        var errorsAboveQuestion = this.question.showErrorsAboveQuestion\n            ? this.renderErrors(cssClasses, \"\")\n            : null;\n        var errorsBelowQuestion = this.question.showErrorsBelowQuestion\n            ? this.renderErrors(cssClasses, \"\")\n            : null;\n        var rootStyle = question.getRootStyle();\n        var questionContent = this.wrapQuestionContent(this.renderQuestionContent());\n        return (external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](external_root_React_commonjs2_react_commonjs_react_amd_react_[\"Fragment\"], null,\n            external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"div\", { ref: this.rootRef, id: question.id, className: question.getRootCss(), style: rootStyle, role: question.ariaRole, \"aria-required\": this.question.ariaRequired, \"aria-invalid\": this.question.ariaInvalid, \"aria-labelledby\": question.ariaLabelledBy, \"aria-describedby\": question.ariaDescribedBy, \"aria-expanded\": question.ariaExpanded },\n                errorsAboveQuestion,\n                headerTop,\n                questionContent,\n                headerBottom,\n                errorsBelowQuestion)));\n    };\n    SurveyQuestion.prototype.wrapElement = function (element) {\n        var survey = this.question.survey;\n        var wrapper = null;\n        if (survey) {\n            wrapper = reactsurveymodel_ReactSurveyElementsWrapper.wrapElement(survey, element, this.question);\n        }\n        return wrapper !== null && wrapper !== void 0 ? wrapper : element;\n    };\n    SurveyQuestion.prototype.wrapQuestionContent = function (element) {\n        var survey = this.question.survey;\n        var wrapper = null;\n        if (survey) {\n            wrapper = reactsurveymodel_ReactSurveyElementsWrapper.wrapQuestionContent(survey, element, this.question);\n        }\n        return wrapper !== null && wrapper !== void 0 ? wrapper : element;\n    };\n    SurveyQuestion.prototype.renderQuestion = function () {\n        return SurveyQuestion.renderQuestionBody(this.creator, this.question);\n    };\n    SurveyQuestion.prototype.renderDescription = function () {\n        return reactquestion_element_SurveyElementBase.renderQuestionDescription(this.question);\n    };\n    SurveyQuestion.prototype.renderComment = function (cssClasses) {\n        var commentText = reactquestion_element_SurveyElementBase.renderLocString(this.question.locCommentText);\n        return (external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"div\", { className: this.question.getCommentAreaCss() },\n            external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"div\", null, commentText),\n            external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](reactquestion_comment_SurveyQuestionCommentItem, { question: this.question, cssClasses: cssClasses, otherCss: cssClasses.other, isDisplayMode: this.question.isInputReadOnly })));\n    };\n    SurveyQuestion.prototype.renderHeader = function (question) {\n        return external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](element_header_SurveyElementHeader, { element: question });\n    };\n    SurveyQuestion.prototype.renderErrors = function (cssClasses, location) {\n        return (external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](reactquestion_SurveyElementErrors, { element: this.question, cssClasses: cssClasses, creator: this.creator, location: location, id: this.question.id + \"_errors\" }));\n    };\n    return SurveyQuestion;\n}(reactquestion_element_SurveyElementBase));\n\nReactElementFactory.Instance.registerElement(\"question\", function (props) {\n    return external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](reactquestion_SurveyQuestion, props);\n});\nvar reactquestion_SurveyElementErrors = /** @class */ (function (_super) {\n    reactquestion_extends(SurveyElementErrors, _super);\n    function SurveyElementErrors(props) {\n        var _this = _super.call(this, props) || this;\n        _this.state = _this.getState();\n        return _this;\n    }\n    Object.defineProperty(SurveyElementErrors.prototype, \"id\", {\n        get: function () {\n            return this.props.element.id + \"_errors\";\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(SurveyElementErrors.prototype, \"element\", {\n        get: function () {\n            return this.props.element;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(SurveyElementErrors.prototype, \"creator\", {\n        get: function () {\n            return this.props.creator;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(SurveyElementErrors.prototype, \"location\", {\n        get: function () {\n            return this.props.location;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    SurveyElementErrors.prototype.getState = function (prevState) {\n        if (prevState === void 0) { prevState = null; }\n        return !prevState ? { error: 0 } : { error: prevState.error + 1 };\n    };\n    SurveyElementErrors.prototype.canRender = function () {\n        return !!this.element && this.element.hasVisibleErrors;\n    };\n    SurveyElementErrors.prototype.componentWillUnmount = function () {\n    };\n    SurveyElementErrors.prototype.renderElement = function () {\n        var errors = [];\n        for (var i = 0; i < this.element.errors.length; i++) {\n            var key = \"error\" + i;\n            errors.push(this.creator.renderError(key, this.element.errors[i], this.cssClasses, this.element));\n        }\n        return (external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"div\", { role: \"alert\", \"aria-live\": \"polite\", className: this.element.cssError, id: this.id }, errors));\n    };\n    return SurveyElementErrors;\n}(ReactSurveyElement));\n\nvar reactquestion_SurveyQuestionAndErrorsWrapped = /** @class */ (function (_super) {\n    reactquestion_extends(SurveyQuestionAndErrorsWrapped, _super);\n    function SurveyQuestionAndErrorsWrapped(props) {\n        return _super.call(this, props) || this;\n    }\n    SurveyQuestionAndErrorsWrapped.prototype.getStateElement = function () {\n        return this.question;\n    };\n    Object.defineProperty(SurveyQuestionAndErrorsWrapped.prototype, \"question\", {\n        get: function () {\n            return this.getQuestion();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(SurveyQuestionAndErrorsWrapped.prototype, \"creator\", {\n        get: function () {\n            return this.props.creator;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    SurveyQuestionAndErrorsWrapped.prototype.getQuestion = function () {\n        return this.props.question;\n    };\n    Object.defineProperty(SurveyQuestionAndErrorsWrapped.prototype, \"itemCss\", {\n        get: function () {\n            return this.props.itemCss;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    SurveyQuestionAndErrorsWrapped.prototype.componentDidMount = function () {\n        _super.prototype.componentDidMount.call(this);\n        this.doAfterRender();\n    };\n    SurveyQuestionAndErrorsWrapped.prototype.componentDidUpdate = function (prevProps, prevState) {\n        _super.prototype.componentDidUpdate.call(this, prevProps, prevState);\n        this.doAfterRender();\n    };\n    SurveyQuestionAndErrorsWrapped.prototype.doAfterRender = function () { };\n    SurveyQuestionAndErrorsWrapped.prototype.canRender = function () {\n        return !!this.question;\n    };\n    SurveyQuestionAndErrorsWrapped.prototype.renderContent = function () {\n        var renderedQuestion = this.renderQuestion();\n        return (external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](external_root_React_commonjs2_react_commonjs_react_amd_react_[\"Fragment\"], null, renderedQuestion));\n    };\n    SurveyQuestionAndErrorsWrapped.prototype.getShowErrors = function () {\n        return this.question.isVisible;\n    };\n    SurveyQuestionAndErrorsWrapped.prototype.renderQuestion = function () {\n        return reactquestion_SurveyQuestion.renderQuestionBody(this.creator, this.question);\n    };\n    return SurveyQuestionAndErrorsWrapped;\n}(ReactSurveyElement));\n\nvar reactquestion_SurveyQuestionAndErrorsCell = /** @class */ (function (_super) {\n    reactquestion_extends(SurveyQuestionAndErrorsCell, _super);\n    function SurveyQuestionAndErrorsCell(props) {\n        var _this = _super.call(this, props) || this;\n        _this.cellRef = external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createRef\"]();\n        return _this;\n    }\n    SurveyQuestionAndErrorsCell.prototype.componentWillUnmount = function () {\n        _super.prototype.componentWillUnmount.call(this);\n        if (this.question) {\n            var el = this.cellRef.current;\n            if (!!el) {\n                el.removeAttribute(\"data-rendered\");\n            }\n        }\n    };\n    SurveyQuestionAndErrorsCell.prototype.renderCellContent = function () {\n        return (external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"div\", { className: this.props.cell.cellQuestionWrapperClassName }, this.renderQuestion()));\n    };\n    SurveyQuestionAndErrorsCell.prototype.renderElement = function () {\n        var style = this.getCellStyle();\n        var cell = this.props.cell;\n        var focusIn = function () { cell.focusIn(); };\n        return (external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"td\", { ref: this.cellRef, className: this.itemCss, colSpan: cell.colSpans, title: cell.getTitle(), style: style, onFocus: focusIn }, this.wrapCell(this.props.cell, this.renderCellContent())));\n    };\n    SurveyQuestionAndErrorsCell.prototype.getCellStyle = function () {\n        return null;\n    };\n    SurveyQuestionAndErrorsCell.prototype.getHeaderText = function () {\n        return \"\";\n    };\n    SurveyQuestionAndErrorsCell.prototype.wrapCell = function (cell, element) {\n        if (!cell) {\n            return element;\n        }\n        var survey = this.question.survey;\n        var wrapper = null;\n        if (survey) {\n            wrapper = reactsurveymodel_ReactSurveyElementsWrapper.wrapMatrixCell(survey, element, cell, this.props.reason);\n        }\n        return wrapper !== null && wrapper !== void 0 ? wrapper : element;\n    };\n    return SurveyQuestionAndErrorsCell;\n}(reactquestion_SurveyQuestionAndErrorsWrapped));\n\nvar reactquestion_SurveyQuestionErrorCell = /** @class */ (function (_super) {\n    reactquestion_extends(SurveyQuestionErrorCell, _super);\n    function SurveyQuestionErrorCell(props) {\n        var _this = _super.call(this, props) || this;\n        _this.state = {\n            changed: 0\n        };\n        if (_this.question) {\n            _this.registerCallback(_this.question);\n        }\n        return _this;\n    }\n    Object.defineProperty(SurveyQuestionErrorCell.prototype, \"question\", {\n        get: function () {\n            return this.props.question;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    SurveyQuestionErrorCell.prototype.update = function () {\n        this.setState({ changed: this.state.changed + 1 });\n    };\n    SurveyQuestionErrorCell.prototype.getQuestionPropertiesToTrack = function () {\n        return [\"errors\"];\n    };\n    SurveyQuestionErrorCell.prototype.registerCallback = function (question) {\n        var _this = this;\n        question.registerFunctionOnPropertiesValueChanged(this.getQuestionPropertiesToTrack(), function () {\n            _this.update();\n        }, \"__reactSubscription\");\n    };\n    SurveyQuestionErrorCell.prototype.unRegisterCallback = function (question) {\n        question.unRegisterFunctionOnPropertiesValueChanged(this.getQuestionPropertiesToTrack(), \"__reactSubscription\");\n    };\n    SurveyQuestionErrorCell.prototype.componentDidUpdate = function (prevProps) {\n        if (prevProps.question && prevProps.question !== this.question) {\n            this.unRegisterCallback(prevProps.cell);\n        }\n        if (this.question) {\n            this.registerCallback(this.question);\n        }\n    };\n    SurveyQuestionErrorCell.prototype.componentWillUnmount = function () {\n        if (this.question) {\n            this.unRegisterCallback(this.question);\n        }\n    };\n    SurveyQuestionErrorCell.prototype.render = function () {\n        return external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](reactquestion_SurveyElementErrors, { element: this.question, creator: this.props.creator, cssClasses: this.question.cssClasses });\n    };\n    return SurveyQuestionErrorCell;\n}(external_root_React_commonjs2_react_commonjs_react_amd_react_[\"Component\"]));\n\n\n// CONCATENATED MODULE: ./packages/survey-react-ui/src/page.tsx\nvar page_extends = ( false) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\n\n\n\nvar page_SurveyPage = /** @class */ (function (_super) {\n    page_extends(SurveyPage, _super);\n    function SurveyPage(props) {\n        return _super.call(this, props) || this;\n    }\n    SurveyPage.prototype.getPanelBase = function () {\n        return this.props.page;\n    };\n    Object.defineProperty(SurveyPage.prototype, \"page\", {\n        get: function () {\n            return this.panelBase;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    // shouldComponentUpdate(nextProps: any, nextState: any): boolean {\n    //   if(!super.shouldComponentUpdate(nextProps, nextState)) return false;\n    //   return true;\n    // }\n    SurveyPage.prototype.renderElement = function () {\n        var title = this.renderTitle();\n        var description = this.renderDescription();\n        var rows = this.renderRows(this.panelBase.cssClasses);\n        var errors = (external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](reactquestion_SurveyElementErrors, { element: this.panelBase, cssClasses: this.panelBase.cssClasses, creator: this.creator }));\n        return (external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"div\", { ref: this.rootRef, className: this.page.cssRoot },\n            title,\n            description,\n            errors,\n            rows));\n    };\n    SurveyPage.prototype.renderTitle = function () {\n        return external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](title_element_TitleElement, { element: this.page });\n    };\n    SurveyPage.prototype.renderDescription = function () {\n        if (!this.page._showDescription)\n            return null;\n        var text = reactquestion_element_SurveyElementBase.renderLocString(this.page.locDescription);\n        return (external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"div\", { className: this.panelBase.cssClasses.page.description }, text));\n    };\n    return SurveyPage;\n}(panel_base_SurveyPanelBase));\n\n\n// CONCATENATED MODULE: ./packages/survey-react-ui/src/components/survey-header/survey-header.tsx\nvar survey_header_extends = ( false) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\n\n\nvar survey_header_SurveyHeader = /** @class */ (function (_super) {\n    survey_header_extends(SurveyHeader, _super);\n    function SurveyHeader(props) {\n        var _this = _super.call(this, props) || this;\n        _this.state = { changed: 0 };\n        _this.rootRef = external_root_React_commonjs2_react_commonjs_react_amd_react_default.a.createRef();\n        return _this;\n    }\n    Object.defineProperty(SurveyHeader.prototype, \"survey\", {\n        get: function () {\n            return this.props.survey;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(SurveyHeader.prototype, \"css\", {\n        get: function () {\n            return this.survey.css;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    SurveyHeader.prototype.componentDidMount = function () {\n        var self = this;\n        this.survey.afterRenderHeader(this.rootRef.current);\n        this.survey.locLogo.onChanged = function () {\n            self.setState({ changed: self.state.changed + 1 });\n        };\n    };\n    SurveyHeader.prototype.componentWillUnmount = function () {\n        this.survey.locLogo.onChanged = function () { };\n    };\n    SurveyHeader.prototype.renderTitle = function () {\n        if (!this.survey.renderedHasTitle)\n            return null;\n        var description = reactquestion_element_SurveyElementBase.renderLocString(this.survey.locDescription);\n        return (external_root_React_commonjs2_react_commonjs_react_amd_react_default.a.createElement(\"div\", { className: this.css.headerText, style: { maxWidth: this.survey.titleMaxWidth } },\n            external_root_React_commonjs2_react_commonjs_react_amd_react_default.a.createElement(title_element_TitleElement, { element: this.survey }),\n            this.survey.renderedHasDescription ? external_root_React_commonjs2_react_commonjs_react_amd_react_default.a.createElement(\"div\", { className: this.css.description }, description) : null));\n    };\n    SurveyHeader.prototype.renderLogoImage = function (isRender) {\n        if (!isRender)\n            return null;\n        var componentName = this.survey.getElementWrapperComponentName(this.survey, \"logo-image\");\n        var componentData = this.survey.getElementWrapperComponentData(this.survey, \"logo-image\");\n        return ReactElementFactory.Instance.createElement(componentName, {\n            data: componentData,\n        });\n    };\n    SurveyHeader.prototype.render = function () {\n        if (!this.survey.renderedHasHeader)\n            return null;\n        return (external_root_React_commonjs2_react_commonjs_react_amd_react_default.a.createElement(\"div\", { className: this.css.header, ref: this.rootRef },\n            this.renderLogoImage(this.survey.isLogoBefore),\n            this.renderTitle(),\n            this.renderLogoImage(this.survey.isLogoAfter),\n            external_root_React_commonjs2_react_commonjs_react_amd_react_default.a.createElement(\"div\", { className: this.css.headerClose })));\n    };\n    return SurveyHeader;\n}(external_root_React_commonjs2_react_commonjs_react_amd_react_default.a.Component));\n\nReactElementFactory.Instance.registerElement(\"survey-header\", function (props) {\n    return external_root_React_commonjs2_react_commonjs_react_amd_react_default.a.createElement(survey_header_SurveyHeader, props);\n});\n\n// CONCATENATED MODULE: ./packages/survey-react-ui/src/components/brand-info.tsx\nvar brand_info_extends = ( false) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\nvar brand_info_BrandInfo = /** @class */ (function (_super) {\n    brand_info_extends(BrandInfo, _super);\n    function BrandInfo() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    BrandInfo.prototype.render = function () {\n        return (external_root_React_commonjs2_react_commonjs_react_amd_react_default.a.createElement(\"div\", { className: \"sv-brand-info\" },\n            external_root_React_commonjs2_react_commonjs_react_amd_react_default.a.createElement(\"a\", { className: \"sv-brand-info__logo\", href: \"https://surveyjs.io/?utm_source=built-in_links&utm_medium=online_survey_tool&utm_campaign=landing_page\" },\n                external_root_React_commonjs2_react_commonjs_react_amd_react_default.a.createElement(\"img\", { src: \"https://surveyjs.io/Content/Images/poweredby.svg\" })),\n            external_root_React_commonjs2_react_commonjs_react_amd_react_default.a.createElement(\"div\", { className: \"sv-brand-info__text\" },\n                \"Try and see how easy it is to \",\n                external_root_React_commonjs2_react_commonjs_react_amd_react_default.a.createElement(\"a\", { href: \"https://surveyjs.io/create-survey?utm_source=built-in_links&utm_medium=online_survey_tool&utm_campaign=create_survey\" }, \"create a survey\")),\n            external_root_React_commonjs2_react_commonjs_react_amd_react_default.a.createElement(\"div\", { className: \"sv-brand-info__terms\" },\n                external_root_React_commonjs2_react_commonjs_react_amd_react_default.a.createElement(\"a\", { href: \"https://surveyjs.io/TermsOfUse\" }, \"Terms of Use & Privacy Statement\"))));\n    };\n    return BrandInfo;\n}(external_root_React_commonjs2_react_commonjs_react_amd_react_default.a.Component));\n\n\n// CONCATENATED MODULE: ./packages/survey-react-ui/src/components/notifier.tsx\nvar notifier_extends = ( false) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\n\n\nvar notifier_NotifierComponent = /** @class */ (function (_super) {\n    notifier_extends(NotifierComponent, _super);\n    function NotifierComponent() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(NotifierComponent.prototype, \"notifier\", {\n        get: function () {\n            return this.props.notifier;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    NotifierComponent.prototype.getStateElement = function () {\n        return this.notifier;\n    };\n    NotifierComponent.prototype.renderElement = function () {\n        if (!this.notifier.isDisplayed)\n            return null;\n        var style = { visibility: this.notifier.active ? \"visible\" : \"hidden\" };\n        return (external_root_React_commonjs2_react_commonjs_react_amd_react_default.a.createElement(\"div\", { className: this.notifier.css, style: style, role: \"alert\", \"aria-live\": \"polite\" },\n            external_root_React_commonjs2_react_commonjs_react_amd_react_default.a.createElement(\"span\", null, this.notifier.message),\n            external_root_React_commonjs2_react_commonjs_react_amd_react_default.a.createElement(action_bar_SurveyActionBar, { model: this.notifier.actionBar })));\n    };\n    return NotifierComponent;\n}(reactquestion_element_SurveyElementBase));\n\nReactElementFactory.Instance.registerElement(\"sv-notifier\", function (props) {\n    return external_root_React_commonjs2_react_commonjs_react_amd_react_default.a.createElement(notifier_NotifierComponent, props);\n});\n\n// CONCATENATED MODULE: ./packages/survey-react-ui/src/components/components-container.tsx\nvar components_container_extends = ( false) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\nvar components_container_ComponentsContainer = /** @class */ (function (_super) {\n    components_container_extends(ComponentsContainer, _super);\n    function ComponentsContainer() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    ComponentsContainer.prototype.render = function () {\n        var _this = this;\n        var components = this.props.survey.getContainerContent(this.props.container);\n        var needRenderWrapper = this.props.needRenderWrapper === false ? false : true;\n        if (components.length == 0) {\n            return null;\n        }\n        if (!needRenderWrapper) {\n            return external_root_React_commonjs2_react_commonjs_react_amd_react_default.a.createElement(external_root_React_commonjs2_react_commonjs_react_amd_react_default.a.Fragment, null, components.map(function (component) {\n                return ReactElementFactory.Instance.createElement(component.component, { survey: _this.props.survey, model: component.data, container: _this.props.container, key: component.id });\n            }));\n        }\n        return external_root_React_commonjs2_react_commonjs_react_amd_react_default.a.createElement(\"div\", { className: \"sv-components-column\" + \" sv-components-container-\" + this.props.container }, components.map(function (component) {\n            return ReactElementFactory.Instance.createElement(component.component, { survey: _this.props.survey, model: component.data, container: _this.props.container, key: component.id });\n        }));\n    };\n    return ComponentsContainer;\n}(external_root_React_commonjs2_react_commonjs_react_amd_react_default.a.Component));\n\nReactElementFactory.Instance.registerElement(\"sv-components-container\", function (props) {\n    return external_root_React_commonjs2_react_commonjs_react_amd_react_default.a.createElement(components_container_ComponentsContainer, props);\n});\n\n// CONCATENATED MODULE: ./packages/survey-react-ui/src/svgbundle.tsx\nvar svgbundle_extends = ( false) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\nvar svgbundle_SvgBundleComponent = /** @class */ (function (_super) {\n    svgbundle_extends(SvgBundleComponent, _super);\n    function SvgBundleComponent(props) {\n        var _this = _super.call(this, props) || this;\n        _this.containerRef = external_root_React_commonjs2_react_commonjs_react_amd_react_default.a.createRef();\n        return _this;\n    }\n    SvgBundleComponent.prototype.componentDidMount = function () {\n        if (!!this.containerRef.current) {\n            this.containerRef.current.innerHTML = external_root_Survey_commonjs2_survey_core_commonjs_survey_core_amd_survey_core_[\"SvgRegistry\"].iconsRenderedHtml();\n        }\n    };\n    SvgBundleComponent.prototype.render = function () {\n        var svgStyle = {\n            display: \"none\"\n        };\n        return external_root_React_commonjs2_react_commonjs_react_amd_react_default.a.createElement(\"svg\", { style: svgStyle, id: \"sv-icon-holder-global-container\", ref: this.containerRef });\n    };\n    return SvgBundleComponent;\n}(external_root_React_commonjs2_react_commonjs_react_amd_react_default.a.Component));\n\n\n// CONCATENATED MODULE: ./packages/survey-react-ui/src/reactSurvey.tsx\nvar reactSurvey_extends = ( false) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = ( false) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\n\n\n\n\n\n\n\n\n\n\n\nvar reactSurvey_Survey = /** @class */ (function (_super) {\n    reactSurvey_extends(Survey, _super);\n    function Survey(props) {\n        var _this = _super.call(this, props) || this;\n        _this.previousJSON = {};\n        _this.isSurveyUpdated = false;\n        _this.createSurvey(props);\n        _this.updateSurvey(props, {});\n        _this.rootRef = external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createRef\"]();\n        _this.rootNodeId = props.id || null;\n        _this.rootNodeClassName = props.className || \"\";\n        return _this;\n    }\n    Object.defineProperty(Survey, \"cssType\", {\n        get: function () {\n            return external_root_Survey_commonjs2_survey_core_commonjs_survey_core_amd_survey_core_[\"surveyCss\"].currentType;\n        },\n        set: function (value) {\n            external_root_Survey_commonjs2_survey_core_commonjs_survey_core_amd_survey_core_[\"StylesManager\"].applyTheme(value);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Survey.prototype.getStateElement = function () {\n        return this.survey;\n    };\n    Survey.prototype.onSurveyUpdated = function () {\n        if (!!this.survey) {\n            var el = this.rootRef.current;\n            if (!!el)\n                this.survey.afterRenderSurvey(el);\n            this.survey.startTimerFromUI();\n        }\n    };\n    Survey.prototype.shouldComponentUpdate = function (nextProps, nextState) {\n        if (!_super.prototype.shouldComponentUpdate.call(this, nextProps, nextState))\n            return false;\n        if (this.isModelJSONChanged(nextProps)) {\n            this.destroySurvey();\n            this.createSurvey(nextProps);\n            this.updateSurvey(nextProps, {});\n            this.isSurveyUpdated = true;\n        }\n        return true;\n    };\n    Survey.prototype.componentDidUpdate = function (prevProps, prevState) {\n        _super.prototype.componentDidUpdate.call(this, prevProps, prevState);\n        this.updateSurvey(this.props, prevProps);\n        if (this.isSurveyUpdated) {\n            this.onSurveyUpdated();\n            this.isSurveyUpdated = false;\n        }\n    };\n    Survey.prototype.componentDidMount = function () {\n        _super.prototype.componentDidMount.call(this);\n        this.onSurveyUpdated();\n    };\n    Survey.prototype.destroySurvey = function () {\n        if (this.survey) {\n            this.survey.renderCallback = undefined;\n            this.survey.onPartialSend.clear();\n            this.survey.stopTimer();\n            this.survey.destroyResizeObserver();\n        }\n    };\n    Survey.prototype.componentWillUnmount = function () {\n        _super.prototype.componentWillUnmount.call(this);\n        this.destroySurvey();\n    };\n    Survey.prototype.doRender = function () {\n        var renderResult;\n        if (this.survey.state == \"completed\") {\n            renderResult = this.renderCompleted();\n        }\n        else if (this.survey.state == \"completedbefore\") {\n            renderResult = this.renderCompletedBefore();\n        }\n        else if (this.survey.state == \"loading\") {\n            renderResult = this.renderLoading();\n        }\n        else if (this.survey.state == \"empty\") {\n            renderResult = this.renderEmptySurvey();\n        }\n        else {\n            renderResult = this.renderSurvey();\n        }\n        var backgroundImage = !!this.survey.backgroundImage ? external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"div\", { className: this.css.rootBackgroundImage, style: this.survey.backgroundImageStyle }) : null;\n        var header = this.survey.headerView === \"basic\" ? external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](survey_header_SurveyHeader, { survey: this.survey }) : null;\n        var onSubmit = function (event) {\n            event.preventDefault();\n        };\n        var customHeader = external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"div\", { className: \"sv_custom_header\" });\n        if (this.survey.hasLogo) {\n            customHeader = null;\n        }\n        var rootCss = this.survey.getRootCss();\n        var cssClasses = this.rootNodeClassName ? this.rootNodeClassName + \" \" + rootCss : rootCss;\n        return (external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"div\", { id: this.rootNodeId, ref: this.rootRef, className: cssClasses, style: this.survey.themeVariables, lang: this.survey.locale || \"en\", dir: this.survey.localeDir },\n            this.survey.needRenderIcons ? external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](svgbundle_SvgBundleComponent, null) : null,\n            external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"div\", { className: this.survey.wrapperFormCss },\n                backgroundImage,\n                external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"form\", { onSubmit: onSubmit },\n                    customHeader,\n                    external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"div\", { className: this.css.container },\n                        header,\n                        external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](components_container_ComponentsContainer, { survey: this.survey, container: \"header\", needRenderWrapper: false }),\n                        renderResult,\n                        external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](components_container_ComponentsContainer, { survey: this.survey, container: \"footer\", needRenderWrapper: false }))),\n                external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](notifier_NotifierComponent, { notifier: this.survey.notifier }))));\n    };\n    Survey.prototype.renderElement = function () {\n        return this.doRender();\n    };\n    Object.defineProperty(Survey.prototype, \"css\", {\n        get: function () {\n            return this.survey.css;\n        },\n        set: function (value) {\n            this.survey.css = value;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Survey.prototype.renderCompleted = function () {\n        if (!this.survey.showCompletedPage)\n            return null;\n        var htmlValue = { __html: this.survey.processedCompletedHtml };\n        return (external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](external_root_React_commonjs2_react_commonjs_react_amd_react_[\"Fragment\"], null,\n            external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"div\", { dangerouslySetInnerHTML: htmlValue, className: this.survey.completedCss }),\n            external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](components_container_ComponentsContainer, { survey: this.survey, container: \"completePage\", needRenderWrapper: false })));\n    };\n    Survey.prototype.renderCompletedBefore = function () {\n        var htmlValue = { __html: this.survey.processedCompletedBeforeHtml };\n        return (external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"div\", { dangerouslySetInnerHTML: htmlValue, className: this.survey.completedBeforeCss }));\n    };\n    Survey.prototype.renderLoading = function () {\n        var htmlValue = { __html: this.survey.processedLoadingHtml };\n        return (external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"div\", { dangerouslySetInnerHTML: htmlValue, className: this.survey.loadingBodyCss }));\n    };\n    Survey.prototype.renderSurvey = function () {\n        var activePage = this.survey.activePage\n            ? this.renderPage(this.survey.activePage)\n            : null;\n        var isStaring = this.survey.isShowStartingPage;\n        var pageId = this.survey.activePage ? this.survey.activePage.id : \"\";\n        var className = this.survey.bodyCss;\n        var style = {};\n        if (!!this.survey.renderedWidth) {\n            style.maxWidth = this.survey.renderedWidth;\n        }\n        return (external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"div\", { className: this.survey.bodyContainerCss },\n            external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](components_container_ComponentsContainer, { survey: this.survey, container: \"left\" }),\n            external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"div\", { className: \"sv-components-column sv-components-column--expandable\" },\n                external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](components_container_ComponentsContainer, { survey: this.survey, container: \"center\" }),\n                external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"div\", { id: pageId, className: className, style: style },\n                    external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](components_container_ComponentsContainer, { survey: this.survey, container: \"contentTop\" }),\n                    activePage,\n                    external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](components_container_ComponentsContainer, { survey: this.survey, container: \"contentBottom\" }),\n                    this.survey.showBrandInfo ? external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](brand_info_BrandInfo, null) : null)),\n            external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](components_container_ComponentsContainer, { survey: this.survey, container: \"right\" })));\n    };\n    Survey.prototype.renderPage = function (page) {\n        return (external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](page_SurveyPage, { survey: this.survey, page: page, css: this.css, creator: this }));\n    };\n    Survey.prototype.renderEmptySurvey = function () {\n        return external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"div\", { className: this.css.bodyEmpty }, this.survey.emptySurveyText);\n    };\n    Survey.prototype.createSurvey = function (newProps) {\n        if (!newProps)\n            newProps = {};\n        this.previousJSON = {};\n        if (newProps) {\n            if (newProps.model) {\n                this.survey = newProps.model;\n            }\n            else {\n                if (newProps.json) {\n                    this.previousJSON = newProps.json;\n                    this.survey = new external_root_Survey_commonjs2_survey_core_commonjs_survey_core_amd_survey_core_[\"SurveyModel\"](newProps.json);\n                }\n            }\n        }\n        else {\n            this.survey = new external_root_Survey_commonjs2_survey_core_commonjs_survey_core_amd_survey_core_[\"SurveyModel\"]();\n        }\n        if (!!newProps.css) {\n            this.survey.css = this.css;\n        }\n        this.setSurveyEvents();\n    };\n    Survey.prototype.isModelJSONChanged = function (newProps) {\n        if (!!newProps[\"model\"]) {\n            return this.survey !== newProps[\"model\"];\n        }\n        if (!!newProps[\"json\"]) {\n            return !external_root_Survey_commonjs2_survey_core_commonjs_survey_core_amd_survey_core_[\"Helpers\"].isTwoValueEquals(newProps[\"json\"], this.previousJSON);\n        }\n        return false;\n    };\n    Survey.prototype.updateSurvey = function (newProps, oldProps) {\n        if (!newProps)\n            return;\n        oldProps = oldProps || {};\n        for (var key in newProps) {\n            if (key == \"model\" || key == \"children\" || key == \"json\") {\n                continue;\n            }\n            if (key == \"css\") {\n                this.survey.mergeValues(newProps.css, this.survey.getCss());\n                this.survey[\"updateNavigationCss\"]();\n                this.survey[\"updateElementCss\"]();\n                continue;\n            }\n            if (newProps[key] === oldProps[key])\n                continue;\n            if (key.indexOf(\"on\") == 0 && this.survey[key] && this.survey[key].add) {\n                if (!!oldProps[key]) {\n                    this.survey[key].remove(oldProps[key]);\n                }\n                this.survey[key].add(newProps[key]);\n            }\n            else {\n                this.survey[key] = newProps[key];\n            }\n        }\n    };\n    Survey.prototype.setSurveyEvents = function () {\n        var self = this;\n        this.survey.renderCallback = function () {\n            var counter = !!self.state && !!self.state.modelChanged ? self.state.modelChanged : 0;\n            self.setState({ modelChanged: counter + 1 });\n        };\n        this.survey.onPartialSend.add(function (sender) {\n            if (!!self.state) {\n                self.setState(self.state);\n            }\n        });\n    };\n    //ISurveyCreator\n    Survey.prototype.createQuestionElement = function (question) {\n        return ReactQuestionFactory.Instance.createQuestion(question.isDefaultRendering() ? question.getTemplate() : question.getComponentName(), {\n            question: question,\n            isDisplayMode: question.isInputReadOnly,\n            creator: this,\n        });\n    };\n    Survey.prototype.renderError = function (key, error, cssClasses, element) {\n        return ReactElementFactory.Instance.createElement(this.survey.questionErrorComponent, { key: key, error: error, cssClasses: cssClasses, element: element });\n    };\n    Survey.prototype.questionTitleLocation = function () {\n        return this.survey.questionTitleLocation;\n    };\n    Survey.prototype.questionErrorLocation = function () {\n        return this.survey.questionErrorLocation;\n    };\n    return Survey;\n}(reactquestion_element_SurveyElementBase));\n\nReactElementFactory.Instance.registerElement(\"survey\", function (props) {\n    return external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](reactSurvey_Survey, props);\n});\nfunction attachKey2click(element, viewModel, options) {\n    if (options === void 0) { options = { processEsc: true, disableTabStop: false }; }\n    if ((!!viewModel && viewModel.disableTabStop) || (!!options && options.disableTabStop)) {\n        return external_root_React_commonjs2_react_commonjs_react_amd_react_[\"cloneElement\"](element, { tabIndex: -1 });\n    }\n    options = __assign({}, options);\n    return external_root_React_commonjs2_react_commonjs_react_amd_react_[\"cloneElement\"](element, {\n        tabIndex: 0,\n        onKeyUp: function (evt) {\n            evt.preventDefault();\n            evt.stopPropagation();\n            Object(external_root_Survey_commonjs2_survey_core_commonjs_survey_core_amd_survey_core_[\"doKey2ClickUp\"])(evt, options);\n            return false;\n        },\n        onKeyDown: function (evt) { return Object(external_root_Survey_commonjs2_survey_core_commonjs_survey_core_amd_survey_core_[\"doKey2ClickDown\"])(evt, options); },\n        onBlur: function (evt) { return Object(external_root_Survey_commonjs2_survey_core_commonjs_survey_core_amd_survey_core_[\"doKey2ClickBlur\"])(evt); },\n    });\n}\n\n// CONCATENATED MODULE: ./packages/survey-react-ui/src/reactSurveyNavigationBase.tsx\nvar reactSurveyNavigationBase_extends = ( false) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\nvar SurveyNavigationBase = /** @class */ (function (_super) {\n    reactSurveyNavigationBase_extends(SurveyNavigationBase, _super);\n    function SurveyNavigationBase(props) {\n        var _this = _super.call(this, props) || this;\n        _this.updateStateFunction = null;\n        _this.state = { update: 0 };\n        return _this;\n    }\n    Object.defineProperty(SurveyNavigationBase.prototype, \"survey\", {\n        get: function () {\n            return this.props.survey;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(SurveyNavigationBase.prototype, \"css\", {\n        get: function () {\n            return this.props.css || this.survey.css;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    SurveyNavigationBase.prototype.componentDidMount = function () {\n        if (this.survey) {\n            var self = this;\n            this.updateStateFunction = function () {\n                self.setState({ update: self.state.update + 1 });\n            };\n            this.survey.onPageVisibleChanged.add(this.updateStateFunction);\n        }\n    };\n    SurveyNavigationBase.prototype.componentWillUnmount = function () {\n        if (this.survey && this.updateStateFunction) {\n            this.survey.onPageVisibleChanged.remove(this.updateStateFunction);\n            this.updateStateFunction = null;\n        }\n    };\n    return SurveyNavigationBase;\n}(external_root_React_commonjs2_react_commonjs_react_amd_react_[\"Component\"]));\n\n\n// CONCATENATED MODULE: ./packages/survey-react-ui/src/reacttimerpanel.tsx\nvar reacttimerpanel_extends = ( false) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\n\n\nvar reacttimerpanel_SurveyTimerPanel = /** @class */ (function (_super) {\n    reacttimerpanel_extends(SurveyTimerPanel, _super);\n    function SurveyTimerPanel(props) {\n        var _this = _super.call(this, props) || this;\n        _this.circleLength = 440;\n        return _this;\n    }\n    SurveyTimerPanel.prototype.getStateElement = function () {\n        return this.timerModel;\n    };\n    Object.defineProperty(SurveyTimerPanel.prototype, \"timerModel\", {\n        get: function () {\n            return this.props.model;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(SurveyTimerPanel.prototype, \"progress\", {\n        get: function () {\n            return -this.timerModel.progress * this.circleLength;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    SurveyTimerPanel.prototype.render = function () {\n        if (!this.timerModel.isRunning) {\n            return null;\n        }\n        var result = external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"div\", { className: this.timerModel.survey.getCss().timerRoot }, this.timerModel.text);\n        if (this.timerModel.showTimerAsClock) {\n            var style = { strokeDasharray: this.circleLength, strokeDashoffset: this.progress };\n            var progress = (this.timerModel.showProgress ? external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](svg_icon_SvgIcon, { className: this.timerModel.getProgressCss(), style: style, iconName: \"icon-timercircle\", size: \"auto\" }) : null);\n            result =\n                (external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"div\", { className: this.timerModel.rootCss },\n                    progress,\n                    external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"div\", { className: this.timerModel.textContainerCss },\n                        external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"span\", { className: this.timerModel.majorTextCss }, this.timerModel.clockMajorText),\n                        (this.timerModel.clockMinorText ? external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"span\", { className: this.timerModel.minorTextCss }, this.timerModel.clockMinorText) : null))));\n        }\n        return result;\n    };\n    return SurveyTimerPanel;\n}(ReactSurveyElement));\n\nReactElementFactory.Instance.registerElement(\"sv-timerpanel\", function (props) {\n    return external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](reacttimerpanel_SurveyTimerPanel, props);\n});\n\n// CONCATENATED MODULE: ./packages/survey-react-ui/src/panel.tsx\nvar panel_extends = ( false) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\n\n\n\n\n\n\n\nvar panel_SurveyPanel = /** @class */ (function (_super) {\n    panel_extends(SurveyPanel, _super);\n    function SurveyPanel(props) {\n        var _this = _super.call(this, props) || this;\n        _this.hasBeenExpanded = false;\n        return _this;\n    }\n    Object.defineProperty(SurveyPanel.prototype, \"panel\", {\n        get: function () {\n            return this.panelBase;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    SurveyPanel.prototype.renderElement = function () {\n        var _this = this;\n        var header = this.renderHeader();\n        var errors = (external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](reactquestion_SurveyElementErrors, { element: this.panelBase, cssClasses: this.panelBase.cssClasses, creator: this.creator }));\n        var style = {\n            paddingLeft: this.panel.innerPaddingLeft,\n            display: this.panel.renderedIsExpanded ? undefined : \"none\",\n        };\n        var content = null;\n        if (this.panel.renderedIsExpanded) {\n            // this.hasBeenExpanded = true;\n            var rows = this.renderRows(this.panelBase.cssClasses);\n            var className = this.panelBase.cssClasses.panel.content;\n            content = this.renderContent(style, rows, className);\n        }\n        var focusIn = function () {\n            if (_this.panelBase)\n                _this.panelBase.focusIn();\n        };\n        return (external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"div\", { ref: this.rootRef, className: this.panelBase.getContainerCss(), onFocus: focusIn, id: this.panelBase.id },\n            this.panel.showErrorsAbovePanel ? errors : null,\n            header,\n            this.panel.showErrorsAbovePanel ? null : errors,\n            content));\n    };\n    SurveyPanel.prototype.renderHeader = function () {\n        if (!this.panel.hasTitle && !this.panel.hasDescription) {\n            return null;\n        }\n        return external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](element_header_SurveyElementHeader, { element: this.panel });\n    };\n    SurveyPanel.prototype.wrapElement = function (element) {\n        var survey = this.panel.survey;\n        var wrapper = null;\n        if (survey) {\n            wrapper = reactsurveymodel_ReactSurveyElementsWrapper.wrapElement(survey, element, this.panel);\n        }\n        return wrapper !== null && wrapper !== void 0 ? wrapper : element;\n    };\n    SurveyPanel.prototype.renderContent = function (style, rows, className) {\n        var bottom = this.renderBottom();\n        return (external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"div\", { style: style, className: className, id: this.panel.contentId },\n            rows,\n            bottom));\n    };\n    SurveyPanel.prototype.renderTitle = function () {\n        if (!this.panelBase.title)\n            return null;\n        return external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](title_element_TitleElement, { element: this.panelBase });\n    };\n    SurveyPanel.prototype.renderDescription = function () {\n        if (!this.panelBase.description)\n            return null;\n        var text = reactquestion_element_SurveyElementBase.renderLocString(this.panelBase.locDescription);\n        return (external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"div\", { className: this.panel.cssClasses.panel.description }, text));\n    };\n    SurveyPanel.prototype.renderBottom = function () {\n        var footerToolbar = this.panel.getFooterToolbar();\n        if (!footerToolbar.hasActions)\n            return null;\n        return external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](action_bar_SurveyActionBar, { model: footerToolbar });\n    };\n    SurveyPanel.prototype.getIsVisible = function () {\n        return this.panelBase.getIsContentVisible();\n    };\n    return SurveyPanel;\n}(panel_base_SurveyPanelBase));\n\nReactElementFactory.Instance.registerElement(\"panel\", function (props) {\n    return external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](panel_SurveyPanel, props);\n});\n\n// CONCATENATED MODULE: ./packages/survey-react-ui/src/flow-panel.tsx\nvar flow_panel_extends = ( false) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\n\n\nvar flow_panel_SurveyFlowPanel = /** @class */ (function (_super) {\n    flow_panel_extends(SurveyFlowPanel, _super);\n    function SurveyFlowPanel(props) {\n        return _super.call(this, props) || this;\n    }\n    Object.defineProperty(SurveyFlowPanel.prototype, \"flowPanel\", {\n        get: function () {\n            return this.panel;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    SurveyFlowPanel.prototype.componentDidMount = function () {\n        _super.prototype.componentDidMount.call(this);\n        if (!!this.flowPanel) {\n            this.flowPanel.onCustomHtmlProducing = function () {\n                return \"\";\n            };\n            this.flowPanel.onGetHtmlForQuestion = this.renderQuestion;\n        }\n    };\n    SurveyFlowPanel.prototype.componentWillUnmount = function () {\n        _super.prototype.componentWillUnmount.call(this);\n        if (!!this.flowPanel) {\n            this.flowPanel.onCustomHtmlProducing = null;\n            this.flowPanel.onGetHtmlForQuestion = null;\n        }\n    };\n    SurveyFlowPanel.prototype.getQuestion = function (name) {\n        return this.flowPanel.getQuestionByName(name);\n    };\n    SurveyFlowPanel.prototype.renderQuestion = function (question) {\n        return \"<question>\" + question.name + \"</question>\";\n    };\n    SurveyFlowPanel.prototype.renderRows = function () {\n        var result = this.renderHtml();\n        if (!!result) {\n            return [result];\n        }\n        else {\n            return [];\n        }\n    };\n    SurveyFlowPanel.prototype.getNodeIndex = function () {\n        return this.renderedIndex++;\n    };\n    SurveyFlowPanel.prototype.renderHtml = function () {\n        if (!this.flowPanel)\n            return null;\n        var html = \"<span>\" + this.flowPanel.produceHtml() + \"</span>\";\n        if (!DOMParser) {\n            var htmlValue = { __html: html };\n            return external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"div\", { dangerouslySetInnerHTML: htmlValue });\n        }\n        var doc = new DOMParser().parseFromString(html, \"text/xml\");\n        this.renderedIndex = 0;\n        return this.renderParentNode(doc);\n    };\n    SurveyFlowPanel.prototype.renderNodes = function (domNodes) {\n        var nodes = [];\n        for (var i = 0; i < domNodes.length; i++) {\n            var node = this.renderNode(domNodes[i]);\n            if (!!node) {\n                nodes.push(node);\n            }\n        }\n        return nodes;\n    };\n    SurveyFlowPanel.prototype.getStyle = function (nodeType) {\n        var style = {};\n        if (nodeType.toLowerCase() === \"b\") {\n            style.fontWeight = \"bold\";\n        }\n        if (nodeType.toLowerCase() === \"i\") {\n            style.fontStyle = \"italic\";\n        }\n        if (nodeType.toLowerCase() === \"u\") {\n            style.textDecoration = \"underline\";\n        }\n        return style;\n    };\n    SurveyFlowPanel.prototype.renderParentNode = function (node) {\n        var nodeType = node.nodeName.toLowerCase();\n        var children = this.renderNodes(this.getChildDomNodes(node));\n        if (nodeType === \"div\")\n            return external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"div\", { key: this.getNodeIndex() }, children);\n        return (external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"span\", { key: this.getNodeIndex(), style: this.getStyle(nodeType) }, children));\n    };\n    SurveyFlowPanel.prototype.renderNode = function (node) {\n        if (!this.hasTextChildNodesOnly(node)) {\n            return this.renderParentNode(node);\n        }\n        var nodeType = node.nodeName.toLowerCase();\n        if (nodeType === \"question\") {\n            var question = this.flowPanel.getQuestionByName(node.textContent);\n            if (!question)\n                return null;\n            var questionBody = (external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](reactquestion_SurveyQuestion, { key: question.name, element: question, creator: this.creator, css: this.css }));\n            return external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"span\", { key: this.getNodeIndex() }, questionBody);\n        }\n        if (nodeType === \"div\") {\n            return external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"div\", { key: this.getNodeIndex() }, node.textContent);\n        }\n        return (external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"span\", { key: this.getNodeIndex(), style: this.getStyle(nodeType) }, node.textContent));\n    };\n    SurveyFlowPanel.prototype.getChildDomNodes = function (node) {\n        var domNodes = [];\n        for (var i = 0; i < node.childNodes.length; i++) {\n            domNodes.push(node.childNodes[i]);\n        }\n        return domNodes;\n    };\n    SurveyFlowPanel.prototype.hasTextChildNodesOnly = function (node) {\n        var nodes = node.childNodes;\n        for (var i = 0; i < nodes.length; i++) {\n            if (nodes[i].nodeName.toLowerCase() !== \"#text\")\n                return false;\n        }\n        return true;\n    };\n    SurveyFlowPanel.prototype.renderContent = function (style, rows) {\n        return external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"f-panel\", { style: style }, rows);\n    };\n    return SurveyFlowPanel;\n}(panel_SurveyPanel));\n\nReactElementFactory.Instance.registerElement(\"flowpanel\", function (props) {\n    return external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](flow_panel_SurveyFlowPanel, props);\n});\n\n// CONCATENATED MODULE: ./packages/survey-react-ui/src/reactquestion_checkbox.tsx\nvar reactquestion_checkbox_extends = ( false) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\n\n\n\n\nvar reactquestion_checkbox_SurveyQuestionCheckbox = /** @class */ (function (_super) {\n    reactquestion_checkbox_extends(SurveyQuestionCheckbox, _super);\n    function SurveyQuestionCheckbox(props) {\n        return _super.call(this, props) || this;\n    }\n    Object.defineProperty(SurveyQuestionCheckbox.prototype, \"question\", {\n        get: function () {\n            return this.questionBase;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    SurveyQuestionCheckbox.prototype.renderElement = function () {\n        var _this = this;\n        var cssClasses = this.question.cssClasses;\n        return (external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"fieldset\", { className: this.question.getSelectBaseRootCss(), ref: function (fieldset) { return (_this.setControl(fieldset)); }, role: this.question.a11y_input_ariaRole, \"aria-required\": this.question.a11y_input_ariaRequired, \"aria-label\": this.question.a11y_input_ariaLabel, \"aria-labelledby\": this.question.a11y_input_ariaLabelledBy, \"aria-describedby\": this.question.a11y_input_ariaDescribedBy, \"aria-invalid\": this.question.a11y_input_ariaInvalid, \"aria-errormessage\": this.question.a11y_input_ariaErrormessage },\n            external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"legend\", { className: \"sv-hidden\" }, this.question.locTitle.renderedHtml),\n            this.getHeader(),\n            this.question.hasColumns\n                ? this.getColumnedBody(cssClasses)\n                : this.getBody(cssClasses),\n            this.getFooter(),\n            this.question.isOtherSelected ? this.renderOther() : null));\n    };\n    SurveyQuestionCheckbox.prototype.getHeader = function () {\n        var _this = this;\n        if (this.question.hasHeadItems) {\n            return this.question.headItems.map(function (item, ii) {\n                return _this.renderItem(\"item_h\" + ii, item, false, _this.question.cssClasses);\n            });\n        }\n    };\n    SurveyQuestionCheckbox.prototype.getFooter = function () {\n        var _this = this;\n        if (this.question.hasFootItems) {\n            return this.question.footItems.map(function (item, ii) {\n                return _this.renderItem(\"item_f\" + ii, item, false, _this.question.cssClasses);\n            });\n        }\n    };\n    SurveyQuestionCheckbox.prototype.getColumnedBody = function (cssClasses) {\n        return (external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"div\", { className: cssClasses.rootMultiColumn }, this.getColumns(cssClasses)));\n    };\n    SurveyQuestionCheckbox.prototype.getColumns = function (cssClasses) {\n        var _this = this;\n        return this.question.columns.map(function (column, ci) {\n            var items = column.map(function (item, ii) {\n                return _this.renderItem(\"item\" + ii, item, ci === 0 && ii === 0, cssClasses, \"\" + ci + ii);\n            });\n            return (external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"div\", { key: \"column\" + ci + _this.question.getItemsColumnKey(column), className: _this.question.getColumnClass(), role: \"presentation\" }, items));\n        });\n    };\n    SurveyQuestionCheckbox.prototype.getBody = function (cssClasses) {\n        if (this.question.blockedRow) {\n            return external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"div\", { className: cssClasses.rootRow }, this.getItems(cssClasses, this.question.dataChoices));\n        }\n        else\n            return external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](external_root_React_commonjs2_react_commonjs_react_amd_react_[\"Fragment\"], null, this.getItems(cssClasses, this.question.bodyItems));\n    };\n    SurveyQuestionCheckbox.prototype.getItems = function (cssClasses, choices) {\n        var renderedItems = [];\n        for (var i = 0; i < choices.length; i++) {\n            var item = choices[i];\n            var key = \"item\" + i;\n            var renderedItem = this.renderItem(key, item, i == 0, cssClasses, \"\" + i);\n            if (!!renderedItem) {\n                renderedItems.push(renderedItem);\n            }\n        }\n        return renderedItems;\n    };\n    Object.defineProperty(SurveyQuestionCheckbox.prototype, \"textStyle\", {\n        get: function () {\n            return null;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    SurveyQuestionCheckbox.prototype.renderOther = function () {\n        var cssClasses = this.question.cssClasses;\n        return (external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"div\", { className: this.question.getCommentAreaCss(true) },\n            external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](SurveyQuestionOtherValueItem, { question: this.question, otherCss: cssClasses.other, cssClasses: cssClasses, isDisplayMode: this.isDisplayMode })));\n    };\n    SurveyQuestionCheckbox.prototype.renderItem = function (key, item, isFirst, cssClasses, index) {\n        var renderedItem = ReactElementFactory.Instance.createElement(this.question.itemComponent, {\n            key: key,\n            question: this.question,\n            cssClasses: cssClasses,\n            isDisplayMode: this.isDisplayMode,\n            item: item,\n            textStyle: this.textStyle,\n            index: index,\n            isFirst: isFirst,\n        });\n        var survey = this.question.survey;\n        var wrappedItem = null;\n        if (!!survey && !!renderedItem) {\n            wrappedItem = reactsurveymodel_ReactSurveyElementsWrapper.wrapItemValue(survey, renderedItem, this.question, item);\n        }\n        return wrappedItem !== null && wrappedItem !== void 0 ? wrappedItem : renderedItem;\n    };\n    return SurveyQuestionCheckbox;\n}(reactquestion_element_SurveyQuestionElementBase));\n\nvar reactquestion_checkbox_SurveyQuestionCheckboxItem = /** @class */ (function (_super) {\n    reactquestion_checkbox_extends(SurveyQuestionCheckboxItem, _super);\n    function SurveyQuestionCheckboxItem(props) {\n        var _this = _super.call(this, props) || this;\n        _this.handleOnChange = function (event) {\n            _this.question.clickItemHandler(_this.item, event.target.checked);\n        };\n        return _this;\n    }\n    SurveyQuestionCheckboxItem.prototype.getStateElement = function () {\n        return this.item;\n    };\n    Object.defineProperty(SurveyQuestionCheckboxItem.prototype, \"question\", {\n        get: function () {\n            return this.props.question;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(SurveyQuestionCheckboxItem.prototype, \"item\", {\n        get: function () {\n            return this.props.item;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(SurveyQuestionCheckboxItem.prototype, \"textStyle\", {\n        get: function () {\n            return this.props.textStyle;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(SurveyQuestionCheckboxItem.prototype, \"isFirst\", {\n        get: function () {\n            return this.props.isFirst;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(SurveyQuestionCheckboxItem.prototype, \"index\", {\n        get: function () {\n            return this.props.index;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(SurveyQuestionCheckboxItem.prototype, \"hideCaption\", {\n        get: function () {\n            return this.props.hideCaption === true;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    SurveyQuestionCheckboxItem.prototype.shouldComponentUpdate = function (nextProps, nextState) {\n        if (!_super.prototype.shouldComponentUpdate.call(this, nextProps, nextState))\n            return false;\n        if (!this.question)\n            return false;\n        return (!this.question.customWidget ||\n            !!this.question.customWidgetData.isNeedRender ||\n            !!this.question.customWidget.widgetJson.isDefaultRender ||\n            !!this.question.customWidget.widgetJson.render);\n    };\n    SurveyQuestionCheckboxItem.prototype.canRender = function () {\n        return !!this.item && !!this.question;\n    };\n    SurveyQuestionCheckboxItem.prototype.renderElement = function () {\n        var isChecked = this.question.isItemSelected(this.item);\n        return this.renderCheckbox(isChecked, null);\n    };\n    Object.defineProperty(SurveyQuestionCheckboxItem.prototype, \"inputStyle\", {\n        get: function () {\n            return null; //{ marginRight: \"3px\" };\n        },\n        enumerable: false,\n        configurable: true\n    });\n    SurveyQuestionCheckboxItem.prototype.renderCheckbox = function (isChecked, otherItem) {\n        var id = this.question.getItemId(this.item);\n        var itemClass = this.question.getItemClass(this.item);\n        var labelClass = this.question.getLabelClass(this.item);\n        var itemLabel = !this.hideCaption ? external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"span\", { className: this.cssClasses.controlLabel }, this.renderLocString(this.item.locText, this.textStyle)) : null;\n        return (external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"div\", { className: itemClass, role: \"presentation\" },\n            external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"label\", { className: labelClass },\n                external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"input\", { className: this.cssClasses.itemControl, type: \"checkbox\", name: this.question.name + this.item.id, value: this.item.value, id: id, style: this.inputStyle, disabled: !this.question.getItemEnabled(this.item), readOnly: this.question.isReadOnlyAttr, checked: isChecked, onChange: this.handleOnChange, required: this.question.hasRequiredError() }),\n                this.cssClasses.materialDecorator ?\n                    external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"span\", { className: this.cssClasses.materialDecorator }, this.question.itemSvgIcon ?\n                        external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"svg\", { className: this.cssClasses.itemDecorator },\n                            external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"use\", { xlinkHref: this.question.itemSvgIcon })) :\n                        null) :\n                    null,\n                itemLabel),\n            otherItem));\n    };\n    return SurveyQuestionCheckboxItem;\n}(ReactSurveyElement));\n\nReactElementFactory.Instance.registerElement(\"survey-checkbox-item\", function (props) {\n    return external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](reactquestion_checkbox_SurveyQuestionCheckboxItem, props);\n});\nReactQuestionFactory.Instance.registerQuestion(\"checkbox\", function (props) {\n    return external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](reactquestion_checkbox_SurveyQuestionCheckbox, props);\n});\n\n// CONCATENATED MODULE: ./packages/survey-react-ui/src/reactquestion_ranking.tsx\nvar reactquestion_ranking_extends = ( false) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\n\n\n\nvar reactquestion_ranking_SurveyQuestionRanking = /** @class */ (function (_super) {\n    reactquestion_ranking_extends(SurveyQuestionRanking, _super);\n    function SurveyQuestionRanking() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(SurveyQuestionRanking.prototype, \"question\", {\n        get: function () {\n            return this.questionBase;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    SurveyQuestionRanking.prototype.renderElement = function () {\n        var _this = this;\n        if (!this.question.selectToRankEnabled) {\n            return (external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"div\", { className: this.question.rootClass, ref: function (root) { return (_this.setControl(root)); } }, this.getItems()));\n        }\n        else {\n            var unrankedItem = true;\n            return (external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"div\", { className: this.question.rootClass, ref: function (root) { return (_this.setControl(root)); } },\n                external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"div\", { className: this.question.getContainerClasses(\"from\"), \"data-ranking\": \"from-container\" },\n                    this.getItems(this.question.renderedUnRankingChoices, unrankedItem),\n                    this.question.renderedUnRankingChoices.length === 0 ? external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"div\", { className: this.question.cssClasses.containerPlaceholder },\n                        \" \",\n                        this.renderLocString(this.question.locSelectToRankEmptyRankedAreaText),\n                        \" \") : null),\n                external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"div\", { className: this.question.cssClasses.containersDivider }),\n                external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"div\", { className: this.question.getContainerClasses(\"to\"), \"data-ranking\": \"to-container\" },\n                    this.getItems(),\n                    this.question.renderedRankingChoices.length === 0 ? external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"div\", { className: this.question.cssClasses.containerPlaceholder },\n                        \" \",\n                        this.renderLocString(this.question.locSelectToRankEmptyUnrankedAreaText),\n                        \" \") : null)));\n        }\n    };\n    SurveyQuestionRanking.prototype.getItems = function (choices, unrankedItem) {\n        var _this = this;\n        if (choices === void 0) { choices = this.question.renderedRankingChoices; }\n        var items = [];\n        var _loop_1 = function (i) {\n            var item = choices[i];\n            items.push(this_1.renderItem(item, i, function (event) {\n                _this.question.handleKeydown.call(_this.question, event, item);\n            }, function (event) {\n                event.persist();\n                //event.preventDefault();\n                _this.question.handlePointerDown.call(_this.question, event, item, event.currentTarget);\n            }, function (event) {\n                event.persist();\n                //event.preventDefault();\n                _this.question.handlePointerUp.call(_this.question, event, item, event.currentTarget);\n            }, this_1.question.cssClasses, this_1.question.getItemClass(item), this_1.question, unrankedItem));\n        };\n        var this_1 = this;\n        for (var i = 0; i < choices.length; i++) {\n            _loop_1(i);\n        }\n        return items;\n    };\n    SurveyQuestionRanking.prototype.renderItem = function (item, i, handleKeydown, handlePointerDown, handlePointerUp, cssClasses, itemClass, question, unrankedItem) {\n        var key = \"id-\" + item.renderedId;\n        var text = this.renderLocString(item.locText);\n        var index = i;\n        var indexText = this.question.getNumberByIndex(index);\n        var tabIndex = this.question.getItemTabIndex(item);\n        var renderedItem = (external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](reactquestion_ranking_SurveyQuestionRankingItem, { key: item.value, text: text, index: index, indexText: indexText, itemTabIndex: tabIndex, handleKeydown: handleKeydown, handlePointerDown: handlePointerDown, handlePointerUp: handlePointerUp, cssClasses: cssClasses, itemClass: itemClass, question: question, unrankedItem: unrankedItem, item: item }));\n        var survey = this.question.survey;\n        var wrappedItem = null;\n        if (!!survey) {\n            wrappedItem = reactsurveymodel_ReactSurveyElementsWrapper.wrapItemValue(survey, renderedItem, this.question, item);\n        }\n        return wrappedItem !== null && wrappedItem !== void 0 ? wrappedItem : renderedItem;\n    };\n    return SurveyQuestionRanking;\n}(reactquestion_element_SurveyQuestionElementBase));\n\nvar reactquestion_ranking_SurveyQuestionRankingItem = /** @class */ (function (_super) {\n    reactquestion_ranking_extends(SurveyQuestionRankingItem, _super);\n    function SurveyQuestionRankingItem() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(SurveyQuestionRankingItem.prototype, \"text\", {\n        get: function () {\n            return this.props.text;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(SurveyQuestionRankingItem.prototype, \"index\", {\n        get: function () {\n            return this.props.index;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(SurveyQuestionRankingItem.prototype, \"indexText\", {\n        get: function () {\n            return this.props.indexText;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(SurveyQuestionRankingItem.prototype, \"handleKeydown\", {\n        get: function () {\n            return this.props.handleKeydown;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(SurveyQuestionRankingItem.prototype, \"handlePointerDown\", {\n        get: function () {\n            return this.props.handlePointerDown;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(SurveyQuestionRankingItem.prototype, \"handlePointerUp\", {\n        get: function () {\n            return this.props.handlePointerUp;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(SurveyQuestionRankingItem.prototype, \"cssClasses\", {\n        get: function () {\n            return this.props.cssClasses;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(SurveyQuestionRankingItem.prototype, \"itemClass\", {\n        get: function () {\n            return this.props.itemClass;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(SurveyQuestionRankingItem.prototype, \"itemTabIndex\", {\n        get: function () {\n            return this.props.itemTabIndex;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(SurveyQuestionRankingItem.prototype, \"question\", {\n        get: function () {\n            return this.props.question;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(SurveyQuestionRankingItem.prototype, \"unrankedItem\", {\n        get: function () {\n            return this.props.unrankedItem;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(SurveyQuestionRankingItem.prototype, \"item\", {\n        get: function () {\n            return this.props.item;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    SurveyQuestionRankingItem.prototype.renderEmptyIcon = function () {\n        return (external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"svg\", null,\n            external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"use\", { xlinkHref: this.question.dashSvgIcon })));\n    };\n    SurveyQuestionRankingItem.prototype.renderElement = function () {\n        var itemContent = ReactElementFactory.Instance.createElement(this.question.itemComponent, { item: this.item, cssClasses: this.cssClasses });\n        return (external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"div\", { tabIndex: this.itemTabIndex, className: this.itemClass, onKeyDown: this.handleKeydown, onPointerDown: this.handlePointerDown, onPointerUp: this.handlePointerUp, \"data-sv-drop-target-ranking-item\": this.index },\n            external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"div\", { tabIndex: -1, style: { outline: \"none\" } },\n                external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"div\", { className: this.cssClasses.itemGhostNode }),\n                external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"div\", { className: this.cssClasses.itemContent },\n                    external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"div\", { className: this.cssClasses.itemIconContainer },\n                        external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"svg\", { className: this.question.getIconHoverCss() },\n                            external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"use\", { xlinkHref: this.question.dragDropSvgIcon })),\n                        external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"svg\", { className: this.question.getIconFocusCss() },\n                            external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"use\", { xlinkHref: this.question.arrowsSvgIcon }))),\n                    external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"div\", { className: this.question.getItemIndexClasses(this.item) }, (!this.unrankedItem && this.indexText) ? this.indexText : this.renderEmptyIcon()),\n                    itemContent))));\n    };\n    return SurveyQuestionRankingItem;\n}(ReactSurveyElement));\n\nvar reactquestion_ranking_SurveyQuestionRankingItemContent = /** @class */ (function (_super) {\n    reactquestion_ranking_extends(SurveyQuestionRankingItemContent, _super);\n    function SurveyQuestionRankingItemContent() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(SurveyQuestionRankingItemContent.prototype, \"item\", {\n        get: function () {\n            return this.props.item;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(SurveyQuestionRankingItemContent.prototype, \"cssClasses\", {\n        get: function () {\n            return this.props.cssClasses;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    SurveyQuestionRankingItemContent.prototype.renderElement = function () {\n        return external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"div\", { className: this.cssClasses.controlLabel }, reactquestion_element_SurveyElementBase.renderLocString(this.item.locText));\n    };\n    return SurveyQuestionRankingItemContent;\n}(ReactSurveyElement));\n\nReactElementFactory.Instance.registerElement(\"sv-ranking-item\", function (props) {\n    return external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](reactquestion_ranking_SurveyQuestionRankingItemContent, props);\n});\nReactQuestionFactory.Instance.registerQuestion(\"ranking\", function (props) {\n    return external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](reactquestion_ranking_SurveyQuestionRanking, props);\n});\n\n// CONCATENATED MODULE: ./packages/survey-react-ui/src/components/rating/rating-item.tsx\nvar rating_item_extends = ( false) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\n\nvar RatingItemBase = /** @class */ (function (_super) {\n    rating_item_extends(RatingItemBase, _super);\n    function RatingItemBase(props) {\n        var _this = _super.call(this, props) || this;\n        _this.handleOnMouseDown = _this.handleOnMouseDown.bind(_this);\n        return _this;\n    }\n    Object.defineProperty(RatingItemBase.prototype, \"question\", {\n        get: function () {\n            return this.props.question;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(RatingItemBase.prototype, \"item\", {\n        get: function () {\n            return this.props.item;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(RatingItemBase.prototype, \"index\", {\n        get: function () {\n            return this.props.index;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    RatingItemBase.prototype.getStateElement = function () {\n        return this.item;\n    };\n    RatingItemBase.prototype.handleOnMouseDown = function (event) {\n        this.question.onMouseDown();\n    };\n    return RatingItemBase;\n}(reactquestion_element_SurveyElementBase));\n\nvar rating_item_RatingItem = /** @class */ (function (_super) {\n    rating_item_extends(RatingItem, _super);\n    function RatingItem() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    RatingItem.prototype.render = function () {\n        var itemText = this.renderLocString(this.item.locText);\n        return (external_root_React_commonjs2_react_commonjs_react_amd_react_default.a.createElement(\"label\", { onMouseDown: this.handleOnMouseDown, className: this.question.getItemClassByText(this.item.itemValue, this.item.text) },\n            external_root_React_commonjs2_react_commonjs_react_amd_react_default.a.createElement(\"input\", { type: \"radio\", className: \"sv-visuallyhidden\", name: this.question.questionName, id: this.question.getInputId(this.index), value: this.item.value, disabled: this.question.isDisabledAttr, readOnly: this.question.isReadOnlyAttr, checked: this.question.value == this.item.value, onClick: this.props.handleOnClick, onChange: function () { }, \"aria-required\": this.question.ariaRequired, \"aria-label\": this.question.ariaLabel, \"aria-invalid\": this.question.ariaInvalid, \"aria-errormessage\": this.question.ariaErrormessage }),\n            external_root_React_commonjs2_react_commonjs_react_amd_react_default.a.createElement(\"span\", { className: this.question.cssClasses.itemText, \"data-text\": this.item.text }, itemText)));\n    };\n    RatingItem.prototype.componentDidMount = function () {\n        _super.prototype.componentDidMount.call(this);\n    };\n    return RatingItem;\n}(RatingItemBase));\n\nReactElementFactory.Instance.registerElement(\"sv-rating-item\", function (props) {\n    return external_root_React_commonjs2_react_commonjs_react_amd_react_default.a.createElement(rating_item_RatingItem, props);\n});\n\n// CONCATENATED MODULE: ./packages/survey-react-ui/src/components/rating/rating-item-star.tsx\nvar rating_item_star_extends = ( false) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\n\n\nvar rating_item_star_RatingItemStar = /** @class */ (function (_super) {\n    rating_item_star_extends(RatingItemStar, _super);\n    function RatingItemStar() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    RatingItemStar.prototype.render = function () {\n        var _this = this;\n        return (external_root_React_commonjs2_react_commonjs_react_amd_react_default.a.createElement(\"label\", { onMouseDown: this.handleOnMouseDown, className: this.question.getItemClass(this.item.itemValue), onMouseOver: function (e) { return _this.question.onItemMouseIn(_this.item); }, onMouseOut: function (e) { return _this.question.onItemMouseOut(_this.item); } },\n            external_root_React_commonjs2_react_commonjs_react_amd_react_default.a.createElement(\"input\", { type: \"radio\", className: \"sv-visuallyhidden\", name: this.question.questionName, id: this.question.getInputId(this.index), value: this.item.value, disabled: this.question.isDisabledAttr, readOnly: this.question.isReadOnlyAttr, checked: this.question.value == this.item.value, onClick: this.props.handleOnClick, onChange: function () { }, \"aria-required\": this.question.ariaRequired, \"aria-label\": this.question.ariaLabel, \"aria-invalid\": this.question.ariaInvalid, \"aria-errormessage\": this.question.ariaErrormessage }),\n            external_root_React_commonjs2_react_commonjs_react_amd_react_default.a.createElement(svg_icon_SvgIcon, { className: \"sv-star\", size: \"auto\", iconName: this.question.itemStarIcon, title: this.item.text }),\n            external_root_React_commonjs2_react_commonjs_react_amd_react_default.a.createElement(svg_icon_SvgIcon, { className: \"sv-star-2\", size: \"auto\", iconName: this.question.itemStarIconAlt, title: this.item.text })));\n    };\n    return RatingItemStar;\n}(RatingItemBase));\n\nReactElementFactory.Instance.registerElement(\"sv-rating-item-star\", function (props) {\n    return external_root_React_commonjs2_react_commonjs_react_amd_react_default.a.createElement(rating_item_star_RatingItemStar, props);\n});\n\n// CONCATENATED MODULE: ./packages/survey-react-ui/src/components/rating/rating-item-smiley.tsx\nvar rating_item_smiley_extends = ( false) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\n\n\nvar rating_item_smiley_RatingItemSmiley = /** @class */ (function (_super) {\n    rating_item_smiley_extends(RatingItemSmiley, _super);\n    function RatingItemSmiley() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    RatingItemSmiley.prototype.render = function () {\n        var _this = this;\n        return (external_root_React_commonjs2_react_commonjs_react_amd_react_default.a.createElement(\"label\", { onMouseDown: this.handleOnMouseDown, style: this.question.getItemStyle(this.item.itemValue, this.item.highlight), className: this.question.getItemClass(this.item.itemValue), onMouseOver: function (e) { return _this.question.onItemMouseIn(_this.item); }, onMouseOut: function (e) { return _this.question.onItemMouseOut(_this.item); } },\n            external_root_React_commonjs2_react_commonjs_react_amd_react_default.a.createElement(\"input\", { type: \"radio\", className: \"sv-visuallyhidden\", name: this.question.questionName, id: this.question.getInputId(this.index), value: this.item.value, disabled: this.question.isDisabledAttr, readOnly: this.question.isReadOnlyAttr, checked: this.question.value == this.item.value, onClick: this.props.handleOnClick, onChange: function () { }, \"aria-required\": this.question.ariaRequired, \"aria-label\": this.question.ariaLabel, \"aria-invalid\": this.question.ariaInvalid, \"aria-errormessage\": this.question.ariaErrormessage }),\n            external_root_React_commonjs2_react_commonjs_react_amd_react_default.a.createElement(svg_icon_SvgIcon, { size: \"auto\", iconName: this.question.getItemSmileyIconName(this.item.itemValue), title: this.item.text })));\n    };\n    return RatingItemSmiley;\n}(RatingItemBase));\n\nReactElementFactory.Instance.registerElement(\"sv-rating-item-smiley\", function (props) {\n    return external_root_React_commonjs2_react_commonjs_react_amd_react_default.a.createElement(rating_item_smiley_RatingItemSmiley, props);\n});\n\n// CONCATENATED MODULE: ./packages/survey-react-ui/src/components/rating/rating-dropdown-item.tsx\nvar rating_dropdown_item_extends = ( false) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\n\nvar rating_dropdown_item_RatingDropdownItem = /** @class */ (function (_super) {\n    rating_dropdown_item_extends(RatingDropdownItem, _super);\n    function RatingDropdownItem() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(RatingDropdownItem.prototype, \"item\", {\n        get: function () {\n            return this.props.item;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    RatingDropdownItem.prototype.getStateElement = function () {\n        return this.item;\n    };\n    RatingDropdownItem.prototype.render = function () {\n        if (!this.item)\n            return null;\n        var item = this.props.item;\n        var description = this.renderDescription(item);\n        return (external_root_React_commonjs2_react_commonjs_react_amd_react_default.a.createElement(\"div\", { className: \"sd-rating-dropdown-item\" },\n            external_root_React_commonjs2_react_commonjs_react_amd_react_default.a.createElement(\"span\", { className: \"sd-rating-dropdown-item_text\" }, item.title),\n            description));\n    };\n    RatingDropdownItem.prototype.renderDescription = function (item) {\n        if (!item.description)\n            return null;\n        return (external_root_React_commonjs2_react_commonjs_react_amd_react_default.a.createElement(\"div\", { className: \"sd-rating-dropdown-item_description\" }, this.renderLocString(item.description, undefined, \"locString\")));\n    };\n    return RatingDropdownItem;\n}(reactquestion_element_SurveyElementBase));\n\nReactElementFactory.Instance.registerElement(\"sv-rating-dropdown-item\", function (props) {\n    return external_root_React_commonjs2_react_commonjs_react_amd_react_default.a.createElement(rating_dropdown_item_RatingDropdownItem, props);\n});\n\n// CONCATENATED MODULE: ./packages/survey-react-ui/src/tagbox-filter.tsx\nvar tagbox_filter_extends = ( false) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\n\n\nvar tagbox_filter_TagboxFilterString = /** @class */ (function (_super) {\n    tagbox_filter_extends(TagboxFilterString, _super);\n    function TagboxFilterString(props) {\n        return _super.call(this, props) || this;\n    }\n    Object.defineProperty(TagboxFilterString.prototype, \"model\", {\n        get: function () {\n            return this.props.model;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(TagboxFilterString.prototype, \"question\", {\n        get: function () {\n            return this.props.question;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    TagboxFilterString.prototype.componentDidUpdate = function (prevProps, prevState) {\n        _super.prototype.componentDidUpdate.call(this, prevProps, prevState);\n        this.updateDomElement();\n    };\n    TagboxFilterString.prototype.componentDidMount = function () {\n        _super.prototype.componentDidMount.call(this);\n        this.updateDomElement();\n    };\n    TagboxFilterString.prototype.updateDomElement = function () {\n        if (!!this.inputElement) {\n            var control = this.inputElement;\n            var newValue = this.model.inputStringRendered;\n            if (!external_root_Survey_commonjs2_survey_core_commonjs_survey_core_amd_survey_core_[\"Helpers\"].isTwoValueEquals(newValue, control.value, false, true, false)) {\n                control.value = this.model.inputStringRendered;\n            }\n        }\n    };\n    TagboxFilterString.prototype.onChange = function (e) {\n        var root = external_root_Survey_commonjs2_survey_core_commonjs_survey_core_amd_survey_core_[\"settings\"].environment.root;\n        if (e.target === root.activeElement) {\n            this.model.inputStringRendered = e.target.value;\n        }\n    };\n    TagboxFilterString.prototype.keyhandler = function (e) {\n        this.model.inputKeyHandler(e);\n    };\n    TagboxFilterString.prototype.onBlur = function (e) {\n        this.model.onBlur(e);\n    };\n    TagboxFilterString.prototype.onFocus = function (e) {\n        this.model.onFocus(e);\n    };\n    TagboxFilterString.prototype.getStateElement = function () {\n        return this.model;\n    };\n    TagboxFilterString.prototype.render = function () {\n        var _this = this;\n        return (external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"div\", { className: this.question.cssClasses.hint },\n            this.model.showHintPrefix ?\n                (external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"div\", { className: this.question.cssClasses.hintPrefix },\n                    external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"span\", null, this.model.hintStringPrefix))) : null,\n            external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"div\", { className: this.question.cssClasses.hintSuffixWrapper },\n                this.model.showHintString ?\n                    (external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"div\", { className: this.question.cssClasses.hintSuffix },\n                        external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"span\", { style: { visibility: \"hidden\" }, \"data-bind\": \"text: model.filterString\" }, this.model.inputStringRendered),\n                        external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"span\", null, this.model.hintStringSuffix))) : null,\n                external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"input\", { type: \"text\", autoComplete: \"off\", id: this.question.getInputId(), inputMode: this.model.inputMode, ref: function (element) { return (_this.inputElement = element); }, className: this.question.cssClasses.filterStringInput, disabled: this.question.isInputReadOnly, readOnly: this.model.filterReadOnly ? true : undefined, size: !this.model.inputStringRendered ? 1 : undefined, role: this.model.filterStringEnabled ? this.question.ariaRole : undefined, \"aria-expanded\": this.question.ariaExpanded, \"aria-label\": this.question.a11y_input_ariaLabel, \"aria-labelledby\": this.question.a11y_input_ariaLabelledBy, \"aria-describedby\": this.question.a11y_input_ariaDescribedBy, \"aria-controls\": this.model.listElementId, \"aria-activedescendant\": this.model.ariaActivedescendant, placeholder: this.model.filterStringPlaceholder, onKeyDown: function (e) { _this.keyhandler(e); }, onChange: function (e) { _this.onChange(e); }, onBlur: function (e) { _this.onBlur(e); }, onFocus: function (e) { _this.onFocus(e); } }))));\n    };\n    return TagboxFilterString;\n}(reactquestion_element_SurveyElementBase));\n\nReactQuestionFactory.Instance.registerQuestion(\"sv-tagbox-filter\", function (props) {\n    return external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](tagbox_filter_TagboxFilterString, props);\n});\n\n// CONCATENATED MODULE: ./packages/survey-react-ui/src/dropdown-item.tsx\nvar dropdown_item_extends = ( false) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\nvar dropdown_item_SurveyQuestionOptionItem = /** @class */ (function (_super) {\n    dropdown_item_extends(SurveyQuestionOptionItem, _super);\n    function SurveyQuestionOptionItem(props) {\n        var _this = _super.call(this, props) || this;\n        _this.state = { changed: 0 };\n        _this.setupModel();\n        return _this;\n    }\n    SurveyQuestionOptionItem.prototype.componentDidUpdate = function (prevProps, prevState) {\n        _super.prototype.componentDidUpdate.call(this, prevProps, prevState);\n        this.setupModel();\n    };\n    SurveyQuestionOptionItem.prototype.componentWillUnmount = function () {\n        _super.prototype.componentWillUnmount.call(this);\n        if (!!this.item) {\n            this.item.locText.onChanged = function () { };\n        }\n    };\n    SurveyQuestionOptionItem.prototype.setupModel = function () {\n        if (!this.item.locText)\n            return;\n        var self = this;\n        this.item.locText.onChanged = function () {\n            self.setState({ changed: self.state.changed + 1 });\n        };\n    };\n    SurveyQuestionOptionItem.prototype.getStateElement = function () {\n        return this.item;\n    };\n    Object.defineProperty(SurveyQuestionOptionItem.prototype, \"item\", {\n        get: function () {\n            return this.props.item;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    SurveyQuestionOptionItem.prototype.canRender = function () {\n        return !!this.item;\n    };\n    SurveyQuestionOptionItem.prototype.renderElement = function () {\n        return (external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"option\", { value: this.item.value, disabled: !this.item.isEnabled }, this.item.text));\n    };\n    return SurveyQuestionOptionItem;\n}(ReactSurveyElement));\n\n\n// CONCATENATED MODULE: ./packages/survey-react-ui/src/dropdown-base.tsx\nvar dropdown_base_extends = ( false) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\n\n\n\n\n\nvar dropdown_base_SurveyQuestionDropdownBase = /** @class */ (function (_super) {\n    dropdown_base_extends(SurveyQuestionDropdownBase, _super);\n    function SurveyQuestionDropdownBase() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.click = function (event) {\n            var _a;\n            (_a = _this.question.dropdownListModel) === null || _a === void 0 ? void 0 : _a.onClick(event);\n        };\n        _this.chevronPointerDown = function (event) {\n            var _a;\n            (_a = _this.question.dropdownListModel) === null || _a === void 0 ? void 0 : _a.chevronPointerDown(event);\n        };\n        _this.clear = function (event) {\n            var _a;\n            (_a = _this.question.dropdownListModel) === null || _a === void 0 ? void 0 : _a.onClear(event);\n        };\n        _this.keyhandler = function (event) {\n            var _a;\n            (_a = _this.question.dropdownListModel) === null || _a === void 0 ? void 0 : _a.keyHandler(event);\n        };\n        _this.blur = function (event) {\n            _this.updateInputDomElement();\n            _this.question.onBlur(event);\n        };\n        _this.focus = function (event) {\n            _this.question.onFocus(event);\n        };\n        return _this;\n    }\n    SurveyQuestionDropdownBase.prototype.getStateElement = function () {\n        return this.question[\"dropdownListModel\"];\n    };\n    SurveyQuestionDropdownBase.prototype.setValueCore = function (newValue) {\n        this.questionBase.renderedValue = newValue;\n    };\n    SurveyQuestionDropdownBase.prototype.getValueCore = function () {\n        return this.questionBase.renderedValue;\n    };\n    SurveyQuestionDropdownBase.prototype.renderReadOnlyElement = function () {\n        return external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"div\", null, this.question.readOnlyText);\n    };\n    SurveyQuestionDropdownBase.prototype.renderSelect = function (cssClasses) {\n        var _a, _b;\n        var selectElement = null;\n        if (this.question.isReadOnly) {\n            var text = (this.question.selectedItemLocText) ? this.renderLocString(this.question.selectedItemLocText) : \"\";\n            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n            // @ts-ignore\n            selectElement = external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"div\", { id: this.question.inputId, \"aria-label\": this.question.a11y_input_ariaLabel, \"aria-labelledby\": this.question.a11y_input_ariaLabelledBy, \"aria-describedby\": this.question.a11y_input_ariaDescribedBy, tabIndex: this.question.isDisabledAttr ? undefined : 0, className: this.question.getControlClass() },\n                text,\n                this.renderReadOnlyElement());\n        }\n        else {\n            selectElement = external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](external_root_React_commonjs2_react_commonjs_react_amd_react_[\"Fragment\"], null,\n                this.renderInput(this.question[\"dropdownListModel\"]),\n                external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](popup_Popup, { model: (_b = (_a = this.question) === null || _a === void 0 ? void 0 : _a.dropdownListModel) === null || _b === void 0 ? void 0 : _b.popupModel }));\n        }\n        return (external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"div\", { className: cssClasses.selectWrapper, onClick: this.click },\n            selectElement,\n            this.createChevronButton()));\n    };\n    SurveyQuestionDropdownBase.prototype.renderValueElement = function (dropdownListModel) {\n        if (this.question.showInputFieldComponent) {\n            return ReactElementFactory.Instance.createElement(this.question.inputFieldComponentName, { item: dropdownListModel.getSelectedAction(), question: this.question });\n        }\n        else if (this.question.showSelectedItemLocText) {\n            return this.renderLocString(this.question.selectedItemLocText);\n        }\n        return null;\n    };\n    SurveyQuestionDropdownBase.prototype.renderInput = function (dropdownListModel) {\n        var _this = this;\n        var valueElement = this.renderValueElement(dropdownListModel);\n        var root = external_root_Survey_commonjs2_survey_core_commonjs_survey_core_amd_survey_core_[\"settings\"].environment.root;\n        var onInputChange = function (e) {\n            if (e.target === root.activeElement) {\n                dropdownListModel.inputStringRendered = e.target.value;\n            }\n        };\n        return (external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"div\", { id: this.question.inputId, className: this.question.getControlClass(), tabIndex: dropdownListModel.noTabIndex ? undefined : 0, \n            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n            // @ts-ignore\n            disabled: this.question.isDisabledAttr, required: this.question.isRequired, onKeyDown: this.keyhandler, onBlur: this.blur, onFocus: this.focus, role: this.question.ariaRole, \"aria-required\": this.question.ariaRequired, \"aria-label\": this.question.ariaLabel, \"aria-invalid\": this.question.ariaInvalid, \"aria-errormessage\": this.question.ariaErrormessage, \"aria-expanded\": this.question.ariaExpanded, \"aria-controls\": dropdownListModel.listElementId, \"aria-activedescendant\": dropdownListModel.ariaActivedescendant },\n            dropdownListModel.showHintPrefix ?\n                (external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"div\", { className: this.question.cssClasses.hintPrefix },\n                    external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"span\", null, dropdownListModel.hintStringPrefix))) : null,\n            external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"div\", { className: this.question.cssClasses.controlValue },\n                dropdownListModel.showHintString ?\n                    (external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"div\", { className: this.question.cssClasses.hintSuffix },\n                        external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"span\", { style: { visibility: \"hidden\" }, \"data-bind\": \"text: model.filterString\" }, dropdownListModel.inputStringRendered),\n                        external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"span\", null, dropdownListModel.hintStringSuffix))) : null,\n                valueElement,\n                external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"input\", { type: \"text\", autoComplete: \"off\", id: this.question.getInputId(), ref: function (element) { return (_this.inputElement = element); }, className: this.question.cssClasses.filterStringInput, role: dropdownListModel.filterStringEnabled ? this.question.ariaRole : undefined, \"aria-expanded\": this.question.ariaExpanded, \"aria-label\": this.question.a11y_input_ariaLabel, \"aria-labelledby\": this.question.a11y_input_ariaLabelledBy, \"aria-describedby\": this.question.a11y_input_ariaDescribedBy, \"aria-controls\": dropdownListModel.listElementId, \"aria-activedescendant\": dropdownListModel.ariaActivedescendant, placeholder: dropdownListModel.placeholderRendered, readOnly: dropdownListModel.filterReadOnly ? true : undefined, tabIndex: dropdownListModel.noTabIndex ? undefined : -1, disabled: this.question.isDisabledAttr, inputMode: dropdownListModel.inputMode, onChange: function (e) { onInputChange(e); }, onBlur: this.blur, onFocus: this.focus })),\n            this.createClearButton()));\n    };\n    SurveyQuestionDropdownBase.prototype.createClearButton = function () {\n        if (!this.question.allowClear || !this.question.cssClasses.cleanButtonIconId)\n            return null;\n        var style = { display: !this.question.showClearButton ? \"none\" : \"\" };\n        return (external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"div\", { className: this.question.cssClasses.cleanButton, style: style, onClick: this.clear, \"aria-hidden\": \"true\" },\n            external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](svg_icon_SvgIcon, { className: this.question.cssClasses.cleanButtonSvg, iconName: this.question.cssClasses.cleanButtonIconId, title: this.question.clearCaption, size: \"auto\" })));\n    };\n    SurveyQuestionDropdownBase.prototype.createChevronButton = function () {\n        if (!this.question.cssClasses.chevronButtonIconId)\n            return null;\n        return (external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"div\", { className: this.question.cssClasses.chevronButton, \"aria-hidden\": \"true\", onPointerDown: this.chevronPointerDown },\n            external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](svg_icon_SvgIcon, { className: this.question.cssClasses.chevronButtonSvg, iconName: this.question.cssClasses.chevronButtonIconId, size: \"auto\" })));\n    };\n    SurveyQuestionDropdownBase.prototype.renderOther = function (cssClasses) {\n        return (external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"div\", { className: this.question.getCommentAreaCss(true) },\n            external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](SurveyQuestionOtherValueItem, { question: this.question, otherCss: cssClasses.other, cssClasses: cssClasses, isDisplayMode: this.isDisplayMode, isOther: true })));\n    };\n    SurveyQuestionDropdownBase.prototype.componentDidUpdate = function (prevProps, prevState) {\n        _super.prototype.componentDidUpdate.call(this, prevProps, prevState);\n        this.updateInputDomElement();\n    };\n    SurveyQuestionDropdownBase.prototype.componentDidMount = function () {\n        _super.prototype.componentDidMount.call(this);\n        this.updateInputDomElement();\n    };\n    SurveyQuestionDropdownBase.prototype.updateInputDomElement = function () {\n        if (!!this.inputElement) {\n            var control = this.inputElement;\n            var newValue = this.question.dropdownListModel.inputStringRendered;\n            if (!external_root_Survey_commonjs2_survey_core_commonjs_survey_core_amd_survey_core_[\"Helpers\"].isTwoValueEquals(newValue, control.value, false, true, false)) {\n                control.value = this.question.dropdownListModel.inputStringRendered;\n            }\n        }\n    };\n    return SurveyQuestionDropdownBase;\n}(reactquestion_element_SurveyQuestionUncontrolledElement));\n\n\n// CONCATENATED MODULE: ./packages/survey-react-ui/src/reactquestion_dropdown.tsx\nvar reactquestion_dropdown_extends = ( false) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\n\nvar reactquestion_dropdown_SurveyQuestionDropdown = /** @class */ (function (_super) {\n    reactquestion_dropdown_extends(SurveyQuestionDropdown, _super);\n    function SurveyQuestionDropdown(props) {\n        return _super.call(this, props) || this;\n    }\n    SurveyQuestionDropdown.prototype.renderElement = function () {\n        var cssClasses = this.question.cssClasses;\n        var comment = this.question.isOtherSelected ? this.renderOther(cssClasses) : null;\n        var select = this.renderSelect(cssClasses);\n        return (external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"div\", { className: this.question.renderCssRoot },\n            select,\n            comment));\n    };\n    return SurveyQuestionDropdown;\n}(dropdown_base_SurveyQuestionDropdownBase));\n\nReactQuestionFactory.Instance.registerQuestion(\"dropdown\", function (props) {\n    return external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](reactquestion_dropdown_SurveyQuestionDropdown, props);\n});\n\n// CONCATENATED MODULE: ./packages/survey-react-ui/src/tagbox-item.tsx\nvar tagbox_item_extends = ( false) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\n\nvar tagbox_item_SurveyQuestionTagboxItem = /** @class */ (function (_super) {\n    tagbox_item_extends(SurveyQuestionTagboxItem, _super);\n    function SurveyQuestionTagboxItem(props) {\n        return _super.call(this, props) || this;\n    }\n    Object.defineProperty(SurveyQuestionTagboxItem.prototype, \"question\", {\n        get: function () {\n            return this.props.question;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(SurveyQuestionTagboxItem.prototype, \"item\", {\n        get: function () {\n            return this.props.item;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    SurveyQuestionTagboxItem.prototype.canRender = function () {\n        return !!this.item && !!this.question;\n    };\n    SurveyQuestionTagboxItem.prototype.renderElement = function () {\n        var _this = this;\n        var text = this.renderLocString(this.item.locText);\n        var removeItem = function (event) {\n            _this.question.dropdownListModel.deselectItem(_this.item.value);\n            event.stopPropagation();\n        };\n        return (external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"div\", { className: \"sv-tagbox__item\" },\n            external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"div\", { className: \"sv-tagbox__item-text\" }, text),\n            external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"div\", { className: this.question.cssClasses.cleanItemButton, onClick: removeItem },\n                external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](svg_icon_SvgIcon, { className: this.question.cssClasses.cleanItemButtonSvg, iconName: this.question.cssClasses.cleanItemButtonIconId, size: \"auto\" }))));\n    };\n    return SurveyQuestionTagboxItem;\n}(ReactSurveyElement));\n\n\n// CONCATENATED MODULE: ./packages/survey-react-ui/src/reactquestion_tagbox.tsx\nvar reactquestion_tagbox_extends = ( false) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\n\n\n\nvar reactquestion_tagbox_SurveyQuestionTagbox = /** @class */ (function (_super) {\n    reactquestion_tagbox_extends(SurveyQuestionTagbox, _super);\n    function SurveyQuestionTagbox(props) {\n        return _super.call(this, props) || this;\n    }\n    SurveyQuestionTagbox.prototype.renderItem = function (key, item) {\n        var renderedItem = (external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](tagbox_item_SurveyQuestionTagboxItem, { key: key, question: this.question, item: item }));\n        return renderedItem;\n    };\n    SurveyQuestionTagbox.prototype.renderInput = function (dropdownListModel) {\n        var _this = this;\n        var dropdownMultiSelectListModel = dropdownListModel;\n        var items = this.question.selectedChoices.map(function (choice, index) { return _this.renderItem(\"item\" + index, choice); });\n        return (external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"div\", { id: this.question.inputId, className: this.question.getControlClass(), tabIndex: dropdownListModel.noTabIndex ? undefined : 0, \n            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n            // @ts-ignore\n            disabled: this.question.isInputReadOnly, required: this.question.isRequired, onKeyDown: this.keyhandler, onBlur: this.blur, role: this.question.ariaRole, \"aria-required\": this.question.ariaRequired, \"aria-label\": this.question.ariaLabel, \"aria-invalid\": this.question.ariaInvalid, \"aria-errormessage\": this.question.ariaErrormessage, \"aria-expanded\": this.question.ariaExpanded, \"aria-controls\": dropdownListModel.listElementId, \"aria-activedescendant\": dropdownListModel.ariaActivedescendant },\n            external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"div\", { className: this.question.cssClasses.controlValue },\n                items,\n                external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](tagbox_filter_TagboxFilterString, { model: dropdownMultiSelectListModel, question: this.question })),\n            this.createClearButton()));\n    };\n    SurveyQuestionTagbox.prototype.renderElement = function () {\n        var cssClasses = this.question.cssClasses;\n        var comment = this.question.isOtherSelected ? this.renderOther(cssClasses) : null;\n        var select = this.renderSelect(cssClasses);\n        return (external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"div\", { className: this.question.renderCssRoot },\n            select,\n            comment));\n    };\n    SurveyQuestionTagbox.prototype.renderReadOnlyElement = function () {\n        if (this.question.locReadOnlyText) {\n            return this.renderLocString(this.question.locReadOnlyText);\n        }\n        else {\n            return null;\n        }\n    };\n    return SurveyQuestionTagbox;\n}(dropdown_base_SurveyQuestionDropdownBase));\n\nReactQuestionFactory.Instance.registerQuestion(\"tagbox\", function (props) {\n    return external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](reactquestion_tagbox_SurveyQuestionTagbox, props);\n});\n\n// CONCATENATED MODULE: ./packages/survey-react-ui/src/dropdown-select.tsx\nvar dropdown_select_extends = ( false) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\n\n\n\nvar dropdown_select_SurveyQuestionDropdownSelect = /** @class */ (function (_super) {\n    dropdown_select_extends(SurveyQuestionDropdownSelect, _super);\n    function SurveyQuestionDropdownSelect(props) {\n        return _super.call(this, props) || this;\n    }\n    SurveyQuestionDropdownSelect.prototype.renderSelect = function (cssClasses) {\n        var _this = this;\n        var click = function (event) {\n            _this.question.onClick(event);\n        };\n        var keyup = function (event) {\n            _this.question.onKeyUp(event);\n        };\n        var selectElement = this.isDisplayMode ? (\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore\n        external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"div\", { id: this.question.inputId, className: this.question.getControlClass(), disabled: true }, this.question.readOnlyText)) :\n            (external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"select\", { id: this.question.inputId, className: this.question.getControlClass(), ref: function (select) { return (_this.setControl(select)); }, autoComplete: this.question.autocomplete, onChange: this.updateValueOnEvent, onInput: this.updateValueOnEvent, onClick: click, onKeyUp: keyup, \"aria-required\": this.question.ariaRequired, \"aria-label\": this.question.ariaLabel, \"aria-invalid\": this.question.ariaInvalid, \"aria-errormessage\": this.question.ariaErrormessage, required: this.question.isRequired },\n                this.question.allowClear ? (external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"option\", { value: \"\" }, this.question.placeholder)) : null,\n                this.question.visibleChoices.map(function (item, i) { return external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](dropdown_item_SurveyQuestionOptionItem, { key: \"item\" + i, item: item }); })));\n        return (external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"div\", { className: cssClasses.selectWrapper },\n            selectElement,\n            this.createChevronButton()));\n    };\n    return SurveyQuestionDropdownSelect;\n}(reactquestion_dropdown_SurveyQuestionDropdown));\n\nReactQuestionFactory.Instance.registerQuestion(\"sv-dropdown-select\", function (props) {\n    return external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](dropdown_select_SurveyQuestionDropdownSelect, props);\n});\nexternal_root_Survey_commonjs2_survey_core_commonjs_survey_core_amd_survey_core_[\"RendererFactory\"].Instance.registerRenderer(\"dropdown\", \"select\", \"sv-dropdown-select\");\n\n// CONCATENATED MODULE: ./packages/survey-react-ui/src/reactquestion_matrix.tsx\nvar reactquestion_matrix_extends = ( false) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\n\n\n\nvar reactquestion_matrix_SurveyQuestionMatrix = /** @class */ (function (_super) {\n    reactquestion_matrix_extends(SurveyQuestionMatrix, _super);\n    function SurveyQuestionMatrix(props) {\n        var _this = _super.call(this, props) || this;\n        _this.state = { rowsChanged: 0 };\n        return _this;\n    }\n    Object.defineProperty(SurveyQuestionMatrix.prototype, \"question\", {\n        get: function () {\n            return this.questionBase;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    SurveyQuestionMatrix.prototype.componentDidMount = function () {\n        _super.prototype.componentDidMount.call(this);\n        if (this.question) {\n            var self = this;\n            this.question.visibleRowsChangedCallback = function () {\n                self.setState({ rowsChanged: self.state.rowsChanged + 1 });\n            };\n        }\n    };\n    SurveyQuestionMatrix.prototype.componentWillUnmount = function () {\n        _super.prototype.componentWillUnmount.call(this);\n        if (this.question) {\n            this.question.visibleRowsChangedCallback = null;\n        }\n    };\n    SurveyQuestionMatrix.prototype.renderElement = function () {\n        var _this = this;\n        var cssClasses = this.question.cssClasses;\n        var rowsTH = this.question.hasRows ? external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"td\", null) : null;\n        var headers = [];\n        for (var i = 0; i < this.question.visibleColumns.length; i++) {\n            var column = this.question.visibleColumns[i];\n            var key = \"column\" + i;\n            var columText = this.renderLocString(column.locText);\n            var style = {};\n            if (!!this.question.columnMinWidth) {\n                style.minWidth = this.question.columnMinWidth;\n                style.width = this.question.columnMinWidth;\n            }\n            headers.push(external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"th\", { className: this.question.cssClasses.headerCell, style: style, key: key }, this.wrapCell({ column: column }, columText, \"column-header\")));\n        }\n        var rows = [];\n        var visibleRows = this.question.visibleRows;\n        for (var i = 0; i < visibleRows.length; i++) {\n            var row = visibleRows[i];\n            var key = \"row-\" + row.name + \"-\" + i;\n            rows.push(external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](reactquestion_matrix_SurveyQuestionMatrixRow, { key: key, question: this.question, cssClasses: cssClasses, row: row, isFirst: i == 0 }));\n        }\n        var header = !this.question.showHeader ? null : (external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"thead\", null,\n            external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"tr\", null,\n                rowsTH,\n                headers)));\n        return (external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"div\", { className: cssClasses.tableWrapper, ref: function (root) { return (_this.setControl(root)); } },\n            external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"fieldset\", null,\n                external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"legend\", { className: \"sv-hidden\" }, this.question.locTitle.renderedHtml),\n                external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"table\", { className: this.question.getTableCss() },\n                    header,\n                    external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"tbody\", null, rows)))));\n    };\n    return SurveyQuestionMatrix;\n}(reactquestion_element_SurveyQuestionElementBase));\n\nvar reactquestion_matrix_SurveyQuestionMatrixRow = /** @class */ (function (_super) {\n    reactquestion_matrix_extends(SurveyQuestionMatrixRow, _super);\n    function SurveyQuestionMatrixRow(props) {\n        return _super.call(this, props) || this;\n    }\n    SurveyQuestionMatrixRow.prototype.getStateElement = function () {\n        if (!!this.row)\n            return this.row.item;\n        return _super.prototype.getStateElement.call(this);\n    };\n    Object.defineProperty(SurveyQuestionMatrixRow.prototype, \"question\", {\n        get: function () {\n            return this.props.question;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(SurveyQuestionMatrixRow.prototype, \"row\", {\n        get: function () {\n            return this.props.row;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    SurveyQuestionMatrixRow.prototype.wrapCell = function (cell, element, reason) {\n        if (!reason) {\n            return element;\n        }\n        var survey = this.question.survey;\n        var wrapper = null;\n        if (survey) {\n            wrapper = reactsurveymodel_ReactSurveyElementsWrapper.wrapMatrixCell(survey, element, cell, reason);\n        }\n        return wrapper !== null && wrapper !== void 0 ? wrapper : element;\n    };\n    SurveyQuestionMatrixRow.prototype.canRender = function () {\n        return !!this.row;\n    };\n    SurveyQuestionMatrixRow.prototype.renderElement = function () {\n        var rowsTD = null;\n        if (this.question.hasRows) {\n            var rowText = this.renderLocString(this.row.locText);\n            var style = {};\n            if (!!this.question.rowTitleWidth) {\n                style.minWidth = this.question.rowTitleWidth;\n                style.width = this.question.rowTitleWidth;\n            }\n            rowsTD = external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"td\", { style: style, className: this.row.rowTextClasses }, this.wrapCell({ row: this.row }, rowText, \"row-header\"));\n        }\n        var tds = this.generateTds();\n        return (external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"tr\", { className: this.row.rowClasses || undefined },\n            rowsTD,\n            tds));\n    };\n    SurveyQuestionMatrixRow.prototype.generateTds = function () {\n        var _this = this;\n        var tds = [];\n        var row = this.row;\n        var cellComponent = this.question.cellComponent;\n        var _loop_1 = function () {\n            var td = null;\n            var column = this_1.question.visibleColumns[i];\n            var key = \"value\" + i;\n            var itemClass = this_1.question.getItemClass(row, column);\n            if (this_1.question.hasCellText) {\n                var getHandler = function (column) { return function () { return _this.cellClick(row, column); }; };\n                td = (external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"td\", { key: key, className: itemClass, onClick: getHandler ? getHandler(column) : function () { } }, this_1.renderLocString(this_1.question.getCellDisplayLocText(row.name, column))));\n            }\n            else {\n                var renderedCell = ReactElementFactory.Instance.createElement(cellComponent, {\n                    question: this_1.question,\n                    row: this_1.row,\n                    column: column,\n                    columnIndex: i,\n                    cssClasses: this_1.cssClasses,\n                    cellChanged: function () { _this.cellClick(_this.row, column); }\n                });\n                td = (external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"td\", { key: key, \"data-responsive-title\": column.locText.renderedHtml, className: this_1.question.cssClasses.cell }, renderedCell));\n            }\n            tds.push(td);\n        };\n        var this_1 = this;\n        for (var i = 0; i < this.question.visibleColumns.length; i++) {\n            _loop_1();\n        }\n        return tds;\n    };\n    SurveyQuestionMatrixRow.prototype.cellClick = function (row, column) {\n        row.value = column.value;\n        this.setState({ value: this.row.value });\n    };\n    return SurveyQuestionMatrixRow;\n}(ReactSurveyElement));\n\nvar reactquestion_matrix_SurveyQuestionMatrixCell = /** @class */ (function (_super) {\n    reactquestion_matrix_extends(SurveyQuestionMatrixCell, _super);\n    function SurveyQuestionMatrixCell(props) {\n        var _this = _super.call(this, props) || this;\n        _this.handleOnMouseDown = _this.handleOnMouseDown.bind(_this);\n        _this.handleOnChange = _this.handleOnChange.bind(_this);\n        return _this;\n    }\n    SurveyQuestionMatrixCell.prototype.handleOnChange = function (event) {\n        if (!!this.props.cellChanged) {\n            this.props.cellChanged();\n        }\n    };\n    SurveyQuestionMatrixCell.prototype.handleOnMouseDown = function (event) {\n        this.question.onMouseDown();\n    };\n    Object.defineProperty(SurveyQuestionMatrixCell.prototype, \"question\", {\n        get: function () {\n            return this.props.question;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(SurveyQuestionMatrixCell.prototype, \"row\", {\n        get: function () {\n            return this.props.row;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(SurveyQuestionMatrixCell.prototype, \"column\", {\n        get: function () {\n            return this.props.column;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(SurveyQuestionMatrixCell.prototype, \"columnIndex\", {\n        get: function () {\n            return this.props.columnIndex;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    SurveyQuestionMatrixCell.prototype.canRender = function () {\n        return !!this.question && !!this.row;\n    };\n    SurveyQuestionMatrixCell.prototype.renderElement = function () {\n        var isChecked = this.row.value == this.column.value;\n        var inputId = this.question.inputId + \"_\" + this.row.name + \"_\" + this.columnIndex;\n        var itemClass = this.question.getItemClass(this.row, this.column);\n        var mobileSpan = this.question.isMobile ?\n            (external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"span\", { className: this.question.cssClasses.cellResponsiveTitle }, this.renderLocString(this.column.locText)))\n            : undefined;\n        return (external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"label\", { onMouseDown: this.handleOnMouseDown, className: itemClass },\n            this.renderInput(inputId, isChecked),\n            external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"span\", { className: this.question.cssClasses.materialDecorator }, this.question.itemSvgIcon ?\n                external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"svg\", { className: this.cssClasses.itemDecorator },\n                    external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"use\", { xlinkHref: this.question.itemSvgIcon })) :\n                null),\n            mobileSpan));\n    };\n    SurveyQuestionMatrixCell.prototype.renderInput = function (inputId, isChecked) {\n        return (external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"input\", { id: inputId, type: \"radio\", className: this.cssClasses.itemValue, name: this.row.fullName, value: this.column.value, disabled: this.row.isDisabledAttr, readOnly: this.row.isReadOnlyAttr, checked: isChecked, onChange: this.handleOnChange, \"aria-required\": this.question.a11y_input_ariaRequired, \"aria-label\": this.question.getCellAriaLabel(this.row.locText.renderedHtml, this.column.locText.renderedHtml), \"aria-invalid\": this.question.a11y_input_ariaInvalid, \"aria-errormessage\": this.question.a11y_input_ariaErrormessage }));\n    };\n    return SurveyQuestionMatrixCell;\n}(ReactSurveyElement));\n\nReactElementFactory.Instance.registerElement(\"survey-matrix-cell\", function (props) {\n    return external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](reactquestion_matrix_SurveyQuestionMatrixCell, props);\n});\nReactQuestionFactory.Instance.registerQuestion(\"matrix\", function (props) {\n    return external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](reactquestion_matrix_SurveyQuestionMatrix, props);\n});\n\n// CONCATENATED MODULE: ./packages/survey-react-ui/src/reactquestion_html.tsx\nvar reactquestion_html_extends = ( false) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\n\nvar reactquestion_html_SurveyQuestionHtml = /** @class */ (function (_super) {\n    reactquestion_html_extends(SurveyQuestionHtml, _super);\n    function SurveyQuestionHtml(props) {\n        return _super.call(this, props) || this;\n    }\n    Object.defineProperty(SurveyQuestionHtml.prototype, \"question\", {\n        get: function () {\n            return this.questionBase;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    SurveyQuestionHtml.prototype.componentDidMount = function () {\n        this.reactOnStrChanged();\n    };\n    SurveyQuestionHtml.prototype.componentWillUnmount = function () {\n        this.question.locHtml.onChanged = function () { };\n    };\n    SurveyQuestionHtml.prototype.componentDidUpdate = function (prevProps, prevState) {\n        this.reactOnStrChanged();\n    };\n    SurveyQuestionHtml.prototype.reactOnStrChanged = function () {\n        var _this = this;\n        this.question.locHtml.onChanged = function () {\n            _this.setState({ changed: !!_this.state && _this.state.changed ? _this.state.changed + 1 : 1 });\n        };\n    };\n    SurveyQuestionHtml.prototype.canRender = function () {\n        return _super.prototype.canRender.call(this) && !!this.question.html;\n    };\n    SurveyQuestionHtml.prototype.renderElement = function () {\n        var htmlValue = { __html: this.question.locHtml.renderedHtml };\n        return (external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"div\", { className: this.question.renderCssRoot, dangerouslySetInnerHTML: htmlValue }));\n    };\n    return SurveyQuestionHtml;\n}(reactquestion_element_SurveyQuestionElementBase));\n\nReactQuestionFactory.Instance.registerQuestion(\"html\", function (props) {\n    return external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](reactquestion_html_SurveyQuestionHtml, props);\n});\n\n// CONCATENATED MODULE: ./packages/survey-react-ui/src/components/loading-indicator.tsx\nvar loading_indicator_extends = ( false) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\nvar loading_indicator_LoadingIndicatorComponent = /** @class */ (function (_super) {\n    loading_indicator_extends(LoadingIndicatorComponent, _super);\n    function LoadingIndicatorComponent() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    LoadingIndicatorComponent.prototype.render = function () {\n        return (external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"div\", { className: \"sd-loading-indicator\" },\n            external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](svg_icon_SvgIcon, { iconName: \"icon-loading\", size: \"auto\" })));\n    };\n    return LoadingIndicatorComponent;\n}(external_root_React_commonjs2_react_commonjs_react_amd_react_[\"Component\"]));\n\n\n// CONCATENATED MODULE: ./packages/survey-react-ui/src/components/file/file-choose-button.tsx\nvar file_choose_button_extends = ( false) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\n\n\n\nvar file_choose_button_SurveyFileChooseButton = /** @class */ (function (_super) {\n    file_choose_button_extends(SurveyFileChooseButton, _super);\n    function SurveyFileChooseButton(props) {\n        return _super.call(this, props) || this;\n    }\n    Object.defineProperty(SurveyFileChooseButton.prototype, \"question\", {\n        get: function () {\n            return (this.props.item && this.props.item.data.question) || this.props.data.question;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    SurveyFileChooseButton.prototype.render = function () {\n        var _this = this;\n        return attachKey2click(external_root_React_commonjs2_react_commonjs_react_amd_react_default.a.createElement(\"label\", { tabIndex: 0, className: this.question.getChooseFileCss(), htmlFor: this.question.inputId, \"aria-label\": this.question.chooseButtonText, onClick: function (e) { return _this.question.chooseFile(e.nativeEvent); } },\n            (!!this.question.cssClasses.chooseFileIconId) ? external_root_React_commonjs2_react_commonjs_react_amd_react_default.a.createElement(svg_icon_SvgIcon, { title: this.question.chooseButtonText, iconName: this.question.cssClasses.chooseFileIconId, size: \"auto\" }) : null,\n            external_root_React_commonjs2_react_commonjs_react_amd_react_default.a.createElement(\"span\", null, this.question.chooseButtonText)));\n    };\n    return SurveyFileChooseButton;\n}(ReactSurveyElement));\n\nReactElementFactory.Instance.registerElement(\"sv-file-choose-btn\", function (props) {\n    return external_root_React_commonjs2_react_commonjs_react_amd_react_default.a.createElement(file_choose_button_SurveyFileChooseButton, props);\n});\n\n// CONCATENATED MODULE: ./packages/survey-react-ui/src/reactquestion_file.tsx\nvar reactquestion_file_extends = ( false) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\n\n\n\n\n\n\n\n// import { ReactElementFactory, SurveyFileChooseButton } from \"../entries/react-ui-model\";\nvar reactquestion_file_SurveyQuestionFile = /** @class */ (function (_super) {\n    reactquestion_file_extends(SurveyQuestionFile, _super);\n    function SurveyQuestionFile(props) {\n        return _super.call(this, props) || this;\n    }\n    Object.defineProperty(SurveyQuestionFile.prototype, \"question\", {\n        get: function () {\n            return this.questionBase;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    SurveyQuestionFile.prototype.renderElement = function () {\n        var _this = this;\n        var preview = this.question.allowShowPreview ? this.renderPreview() : null;\n        var loadingIndicator = this.question.showLoadingIndicator ? this.renderLoadingIndicator() : null;\n        var video = this.question.isPlayingVideo ? this.renderVideo() : null;\n        var fileDecorator = this.question.showFileDecorator ? this.renderFileDecorator() : null;\n        var clearButton = this.question.showRemoveButton ? this.renderClearButton(this.question.cssClasses.removeButton) : null;\n        var clearButtonBottom = this.question.showRemoveButtonBottom ? this.renderClearButton(this.question.cssClasses.removeButtonBottom) : null;\n        var fileNavigator = this.question.fileNavigatorVisible ? (external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](action_bar_SurveyActionBar, { model: this.question.fileNavigator })) : null;\n        var fileInput;\n        if (this.question.isReadOnlyAttr) {\n            fileInput = external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"input\", { readOnly: true, type: \"file\", className: !this.isDisplayMode ? this.question.cssClasses.fileInput : this.question.getReadOnlyFileCss(), id: this.question.inputId, ref: function (input) { return (_this.setControl(input)); }, style: !this.isDisplayMode ? {} : { color: \"transparent\" }, multiple: this.question.allowMultiple, placeholder: this.question.title, accept: this.question.acceptedTypes });\n        }\n        else if (this.question.isDisabledAttr) {\n            fileInput = external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"input\", { disabled: true, type: \"file\", className: !this.isDisplayMode ? this.question.cssClasses.fileInput : this.question.getReadOnlyFileCss(), id: this.question.inputId, ref: function (input) { return (_this.setControl(input)); }, style: !this.isDisplayMode ? {} : { color: \"transparent\" }, multiple: this.question.allowMultiple, placeholder: this.question.title, accept: this.question.acceptedTypes });\n        }\n        else if (this.question.hasFileUI) {\n            fileInput = external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"input\", { type: \"file\", disabled: this.isDisplayMode, tabIndex: -1, className: !this.isDisplayMode ? this.question.cssClasses.fileInput : this.question.getReadOnlyFileCss(), id: this.question.inputId, ref: function (input) { return (_this.setControl(input)); }, style: !this.isDisplayMode ? {} : { color: \"transparent\" }, \"aria-required\": this.question.ariaRequired, \"aria-label\": this.question.ariaLabel, \"aria-invalid\": this.question.ariaInvalid, \"aria-errormessage\": this.question.ariaErrormessage, multiple: this.question.allowMultiple, title: this.question.inputTitle, accept: this.question.acceptedTypes, capture: this.question.renderCapture });\n        }\n        else {\n            fileInput = null;\n        }\n        return (external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"div\", { className: this.question.fileRootCss, ref: function (el) { return (_this.setContent(el)); } },\n            fileInput,\n            external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"div\", { className: this.question.cssClasses.dragArea, onDrop: this.question.onDrop, onDragOver: this.question.onDragOver, onDragLeave: this.question.onDragLeave, onDragEnter: this.question.onDragEnter },\n                fileDecorator,\n                loadingIndicator,\n                video,\n                clearButton,\n                preview,\n                clearButtonBottom,\n                fileNavigator)));\n    };\n    SurveyQuestionFile.prototype.renderFileDecorator = function () {\n        var chooseButton = this.question.showChooseButton ? this.renderChooseButton() : null;\n        var actionsContainer = this.question.actionsContainerVisible ? external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](action_bar_SurveyActionBar, { model: this.question.actionsContainer }) : null;\n        var noFileChosen = this.question.isEmpty() ? (external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"span\", { className: this.question.cssClasses.noFileChosen }, this.question.noFileChosenCaption)) : null;\n        return (external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"div\", { className: this.question.getFileDecoratorCss() },\n            external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"span\", { className: this.question.cssClasses.dragAreaPlaceholder }, this.renderLocString(this.question.locRenderedPlaceholder)),\n            external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"div\", { className: this.question.cssClasses.wrapper },\n                chooseButton,\n                actionsContainer,\n                noFileChosen)));\n    };\n    SurveyQuestionFile.prototype.renderChooseButton = function () {\n        return external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](file_choose_button_SurveyFileChooseButton, { data: { question: this.question } });\n    };\n    SurveyQuestionFile.prototype.renderClearButton = function (className) {\n        return !this.question.isUploading ? (external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"button\", { type: \"button\", onClick: this.question.doClean, className: className },\n            external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"span\", null, this.question.clearButtonCaption),\n            (!!this.question.cssClasses.removeButtonIconId) ? external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](svg_icon_SvgIcon, { iconName: this.question.cssClasses.removeButtonIconId, size: \"auto\", title: this.question.clearButtonCaption }) : null)) : null;\n    };\n    SurveyQuestionFile.prototype.renderPreview = function () {\n        return ReactElementFactory.Instance.createElement(\"sv-file-preview\", { question: this.question });\n    };\n    SurveyQuestionFile.prototype.renderLoadingIndicator = function () {\n        return external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"div\", { className: this.question.cssClasses.loadingIndicator },\n            external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](loading_indicator_LoadingIndicatorComponent, null));\n    };\n    SurveyQuestionFile.prototype.renderVideo = function () {\n        return (external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"div\", { className: this.question.cssClasses.videoContainer },\n            external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](action_bar_item_SurveyAction, { item: this.question.changeCameraAction }),\n            external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](action_bar_item_SurveyAction, { item: this.question.closeCameraAction }),\n            external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"video\", { autoPlay: true, playsInline: true, id: this.question.videoId, className: this.question.cssClasses.video }),\n            external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](action_bar_item_SurveyAction, { item: this.question.takePictureAction })));\n    };\n    return SurveyQuestionFile;\n}(reactquestion_element_SurveyQuestionElementBase));\n\nReactQuestionFactory.Instance.registerQuestion(\"file\", function (props) {\n    return external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](reactquestion_file_SurveyQuestionFile, props);\n});\n\n// CONCATENATED MODULE: ./packages/survey-react-ui/src/components/file/file-preview.tsx\nvar file_preview_extends = ( false) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\n\n\nvar file_preview_SurveyFilePreview = /** @class */ (function (_super) {\n    file_preview_extends(SurveyFilePreview, _super);\n    function SurveyFilePreview() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(SurveyFilePreview.prototype, \"question\", {\n        get: function () {\n            return this.props.question;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    SurveyFilePreview.prototype.renderFileSign = function (className, val) {\n        var _this = this;\n        if (!className || !val.name)\n            return null;\n        return (external_root_React_commonjs2_react_commonjs_react_amd_react_default.a.createElement(\"div\", { className: className },\n            external_root_React_commonjs2_react_commonjs_react_amd_react_default.a.createElement(\"a\", { href: val.content, onClick: function (event) {\n                    _this.question.doDownloadFile(event, val);\n                }, title: val.name, download: val.name, style: { width: this.question.imageWidth } }, val.name)));\n    };\n    SurveyFilePreview.prototype.renderElement = function () {\n        var _this = this;\n        var previews = this.question.previewValue.map(function (val, index) {\n            if (!val)\n                return null;\n            return (external_root_React_commonjs2_react_commonjs_react_amd_react_default.a.createElement(\"span\", { key: _this.question.inputId + \"_\" + index, className: _this.question.cssClasses.previewItem, onClick: function (event) { return _this.question.doDownloadFileFromContainer(event); }, style: { display: _this.question.isPreviewVisible(index) ? undefined : \"none\" } },\n                _this.renderFileSign(_this.question.cssClasses.fileSign, val),\n                external_root_React_commonjs2_react_commonjs_react_amd_react_default.a.createElement(\"div\", { className: _this.question.getImageWrapperCss(val) },\n                    _this.question.canPreviewImage(val) ? (external_root_React_commonjs2_react_commonjs_react_amd_react_default.a.createElement(\"img\", { src: val.content, style: { height: _this.question.imageHeight, width: _this.question.imageWidth }, alt: \"File preview\" })) : (_this.question.cssClasses.defaultImage ? (external_root_React_commonjs2_react_commonjs_react_amd_react_default.a.createElement(svg_icon_SvgIcon, { iconName: _this.question.cssClasses.defaultImageIconId, size: \"auto\", className: _this.question.cssClasses.defaultImage })) : null),\n                    val.name && !_this.question.isReadOnly ? (external_root_React_commonjs2_react_commonjs_react_amd_react_default.a.createElement(\"div\", { className: _this.question.getRemoveButtonCss(), onClick: function (event) { return _this.question.doRemoveFile(val, event); } },\n                        external_root_React_commonjs2_react_commonjs_react_amd_react_default.a.createElement(\"span\", { className: _this.question.cssClasses.removeFile }, _this.question.removeFileCaption),\n                        (_this.question.cssClasses.removeFileSvgIconId) ?\n                            (external_root_React_commonjs2_react_commonjs_react_amd_react_default.a.createElement(svg_icon_SvgIcon, { title: _this.question.removeFileCaption, iconName: _this.question.cssClasses.removeFileSvgIconId, size: \"auto\", className: _this.question.cssClasses.removeFileSvg })) : null)) : null),\n                _this.renderFileSign(_this.question.cssClasses.fileSignBottom, val)));\n        });\n        return external_root_React_commonjs2_react_commonjs_react_amd_react_default.a.createElement(\"div\", { className: this.question.cssClasses.fileList || undefined }, previews);\n    };\n    SurveyFilePreview.prototype.canRender = function () {\n        return this.question.showPreviewContainer;\n    };\n    return SurveyFilePreview;\n}(reactquestion_element_SurveyElementBase));\n\nReactElementFactory.Instance.registerElement(\"sv-file-preview\", function (props) {\n    return external_root_React_commonjs2_react_commonjs_react_amd_react_default.a.createElement(file_preview_SurveyFilePreview, props);\n});\n\n// CONCATENATED MODULE: ./packages/survey-react-ui/src/reactquestion_multipletext.tsx\nvar reactquestion_multipletext_extends = ( false) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\n\n\n\n\nvar reactquestion_multipletext_SurveyQuestionMultipleText = /** @class */ (function (_super) {\n    reactquestion_multipletext_extends(SurveyQuestionMultipleText, _super);\n    function SurveyQuestionMultipleText(props) {\n        return _super.call(this, props) || this;\n    }\n    Object.defineProperty(SurveyQuestionMultipleText.prototype, \"question\", {\n        get: function () {\n            return this.questionBase;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    SurveyQuestionMultipleText.prototype.renderElement = function () {\n        var cssClasses = this.question.cssClasses;\n        var tableRows = this.question.getRows();\n        var rows = [];\n        for (var i = 0; i < tableRows.length; i++) {\n            if (tableRows[i].isVisible) {\n                rows.push(this.renderRow(i, tableRows[i].cells, cssClasses));\n            }\n        }\n        return (external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"table\", { className: this.question.getQuestionRootCss() },\n            external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"tbody\", null, rows)));\n    };\n    SurveyQuestionMultipleText.prototype.renderCell = function (cell, cssClasses, index) {\n        var cellContent;\n        var focusIn = function () { cell.item.focusIn(); };\n        if (cell.isErrorsCell) {\n            cellContent = external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](reactquestion_SurveyQuestionErrorCell, { question: cell.item.editor, creator: this.creator });\n        }\n        else {\n            cellContent = external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](reactquestion_multipletext_SurveyMultipleTextItem, { question: this.question, item: cell.item, creator: this.creator, cssClasses: cssClasses });\n        }\n        return (external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"td\", { key: \"item\" + index, className: cell.className, onFocus: focusIn }, cellContent));\n    };\n    SurveyQuestionMultipleText.prototype.renderRow = function (rowIndex, cells, cssClasses) {\n        var key = \"item\" + rowIndex;\n        var tds = [];\n        for (var i = 0; i < cells.length; i++) {\n            var cell = cells[i];\n            tds.push(this.renderCell(cell, cssClasses, i));\n        }\n        return (external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"tr\", { key: key, className: cssClasses.row }, tds));\n    };\n    return SurveyQuestionMultipleText;\n}(reactquestion_element_SurveyQuestionElementBase));\n\nvar reactquestion_multipletext_SurveyMultipleTextItem = /** @class */ (function (_super) {\n    reactquestion_multipletext_extends(SurveyMultipleTextItem, _super);\n    function SurveyMultipleTextItem() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(SurveyMultipleTextItem.prototype, \"question\", {\n        get: function () {\n            return this.props.question;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(SurveyMultipleTextItem.prototype, \"item\", {\n        get: function () {\n            return this.props.item;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    SurveyMultipleTextItem.prototype.getStateElements = function () {\n        return [this.item, this.item.editor];\n    };\n    Object.defineProperty(SurveyMultipleTextItem.prototype, \"creator\", {\n        get: function () {\n            return this.props.creator;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    SurveyMultipleTextItem.prototype.renderElement = function () {\n        var item = this.item;\n        var cssClasses = this.cssClasses;\n        var titleStyle = {};\n        if (!!this.question.itemTitleWidth) {\n            titleStyle.minWidth = this.question.itemTitleWidth;\n            titleStyle.width = this.question.itemTitleWidth;\n        }\n        return (external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"label\", { className: this.question.getItemLabelCss(item) },\n            external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"span\", { className: cssClasses.itemTitle, style: titleStyle },\n                external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](title_content_TitleContent, { element: item.editor, cssClasses: item.editor.cssClasses })),\n            external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](reactquestion_multipletext_SurveyMultipleTextItemEditor, { cssClasses: cssClasses, itemCss: this.question.getItemCss(), question: item.editor, creator: this.creator })));\n    };\n    return SurveyMultipleTextItem;\n}(ReactSurveyElement));\n\nvar reactquestion_multipletext_SurveyMultipleTextItemEditor = /** @class */ (function (_super) {\n    reactquestion_multipletext_extends(SurveyMultipleTextItemEditor, _super);\n    function SurveyMultipleTextItemEditor() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    SurveyMultipleTextItemEditor.prototype.renderElement = function () {\n        return external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"div\", { className: this.itemCss }, this.renderContent());\n    };\n    return SurveyMultipleTextItemEditor;\n}(reactquestion_SurveyQuestionAndErrorsWrapped));\n\nReactQuestionFactory.Instance.registerQuestion(\"multipletext\", function (props) {\n    return external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](reactquestion_multipletext_SurveyQuestionMultipleText, props);\n});\n\n// CONCATENATED MODULE: ./packages/survey-react-ui/src/reactquestion_radiogroup.tsx\nvar reactquestion_radiogroup_extends = ( false) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\n\n\n\n\nvar reactquestion_radiogroup_SurveyQuestionRadiogroup = /** @class */ (function (_super) {\n    reactquestion_radiogroup_extends(SurveyQuestionRadiogroup, _super);\n    function SurveyQuestionRadiogroup(props) {\n        return _super.call(this, props) || this;\n    }\n    Object.defineProperty(SurveyQuestionRadiogroup.prototype, \"question\", {\n        get: function () {\n            return this.questionBase;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    SurveyQuestionRadiogroup.prototype.renderElement = function () {\n        var _this = this;\n        var cssClasses = this.question.cssClasses;\n        var clearButton = null;\n        if (this.question.showClearButtonInContent) {\n            clearButton = (external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"div\", null,\n                external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"input\", { type: \"button\", className: this.question.cssClasses.clearButton, onClick: function () { return _this.question.clearValue(true); }, value: this.question.clearButtonCaption })));\n        }\n        return (external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"fieldset\", { className: this.question.getSelectBaseRootCss(), ref: function (fieldset) { return (_this.setControl(fieldset)); }, role: this.question.a11y_input_ariaRole, \"aria-required\": this.question.a11y_input_ariaRequired, \"aria-label\": this.question.a11y_input_ariaLabel, \"aria-labelledby\": this.question.a11y_input_ariaLabelledBy, \"aria-describedby\": this.question.a11y_input_ariaDescribedBy, \"aria-invalid\": this.question.a11y_input_ariaInvalid, \"aria-errormessage\": this.question.a11y_input_ariaErrormessage },\n            this.question.hasColumns\n                ? this.getColumnedBody(cssClasses)\n                : this.getBody(cssClasses),\n            this.getFooter(),\n            this.question.isOtherSelected ? this.renderOther(cssClasses) : null,\n            clearButton));\n    };\n    SurveyQuestionRadiogroup.prototype.getFooter = function () {\n        var _this = this;\n        if (this.question.hasFootItems) {\n            return this.question.footItems.map(function (item, ii) {\n                return _this.renderItem(\"item_f\" + ii, item, false, _this.question.cssClasses);\n            });\n        }\n    };\n    SurveyQuestionRadiogroup.prototype.getColumnedBody = function (cssClasses) {\n        return (external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"div\", { className: cssClasses.rootMultiColumn }, this.getColumns(cssClasses)));\n    };\n    SurveyQuestionRadiogroup.prototype.getColumns = function (cssClasses) {\n        var _this = this;\n        var value = this.getStateValue();\n        return this.question.columns.map(function (column, ci) {\n            var items = column.map(function (item, ii) {\n                return _this.renderItem(\"item\" + ci + ii, item, value, cssClasses, \"\" + ci + ii);\n            });\n            return (external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"div\", { key: \"column\" + ci + _this.question.getItemsColumnKey(column), className: _this.question.getColumnClass(), role: \"presentation\" }, items));\n        });\n    };\n    SurveyQuestionRadiogroup.prototype.getBody = function (cssClasses) {\n        if (this.question.blockedRow) {\n            return external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"div\", { className: cssClasses.rootRow }, this.getItems(cssClasses, this.question.dataChoices));\n        }\n        else\n            return external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](external_root_React_commonjs2_react_commonjs_react_amd_react_[\"Fragment\"], null, this.getItems(cssClasses, this.question.bodyItems));\n    };\n    SurveyQuestionRadiogroup.prototype.getItems = function (cssClasses, choices) {\n        var items = [];\n        var value = this.getStateValue();\n        for (var i = 0; i < choices.length; i++) {\n            var item = choices[i];\n            var renderedItem = this.renderItem(\"item\" + i, item, value, cssClasses, \"\" + i);\n            items.push(renderedItem);\n        }\n        return items;\n    };\n    Object.defineProperty(SurveyQuestionRadiogroup.prototype, \"textStyle\", {\n        get: function () {\n            return null; //{ display: \"inline\", position: \"static\" };\n        },\n        enumerable: false,\n        configurable: true\n    });\n    SurveyQuestionRadiogroup.prototype.renderOther = function (cssClasses) {\n        return (external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"div\", { className: this.question.getCommentAreaCss(true) },\n            external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](SurveyQuestionOtherValueItem, { question: this.question, otherCss: cssClasses.other, cssClasses: cssClasses, isDisplayMode: this.isDisplayMode })));\n    };\n    SurveyQuestionRadiogroup.prototype.renderItem = function (key, item, value, cssClasses, index) {\n        var renderedItem = ReactElementFactory.Instance.createElement(this.question.itemComponent, {\n            key: key,\n            question: this.question,\n            cssClasses: cssClasses,\n            isDisplayMode: this.isDisplayMode,\n            item: item,\n            textStyle: this.textStyle,\n            index: index,\n            isChecked: value === item.value,\n        });\n        var survey = this.question.survey;\n        var wrappedItem = null;\n        if (!!survey) {\n            wrappedItem = reactsurveymodel_ReactSurveyElementsWrapper.wrapItemValue(survey, renderedItem, this.question, item);\n        }\n        return wrappedItem !== null && wrappedItem !== void 0 ? wrappedItem : renderedItem;\n    };\n    SurveyQuestionRadiogroup.prototype.getStateValue = function () {\n        return !this.question.isEmpty() ? this.question.renderedValue : \"\";\n    };\n    return SurveyQuestionRadiogroup;\n}(reactquestion_element_SurveyQuestionElementBase));\n\nvar reactquestion_radiogroup_SurveyQuestionRadioItem = /** @class */ (function (_super) {\n    reactquestion_radiogroup_extends(SurveyQuestionRadioItem, _super);\n    function SurveyQuestionRadioItem(props) {\n        var _this = _super.call(this, props) || this;\n        _this.handleOnChange = _this.handleOnChange.bind(_this);\n        _this.handleOnMouseDown = _this.handleOnMouseDown.bind(_this);\n        return _this;\n    }\n    SurveyQuestionRadioItem.prototype.getStateElement = function () {\n        return this.item;\n    };\n    Object.defineProperty(SurveyQuestionRadioItem.prototype, \"question\", {\n        get: function () {\n            return this.props.question;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(SurveyQuestionRadioItem.prototype, \"item\", {\n        get: function () {\n            return this.props.item;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(SurveyQuestionRadioItem.prototype, \"textStyle\", {\n        get: function () {\n            return this.props.textStyle;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(SurveyQuestionRadioItem.prototype, \"index\", {\n        get: function () {\n            return this.props.index;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(SurveyQuestionRadioItem.prototype, \"isChecked\", {\n        get: function () {\n            return this.props.isChecked;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(SurveyQuestionRadioItem.prototype, \"hideCaption\", {\n        get: function () {\n            return this.props.hideCaption === true;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    SurveyQuestionRadioItem.prototype.shouldComponentUpdate = function (nextProps, nextState) {\n        if (!_super.prototype.shouldComponentUpdate.call(this, nextProps, nextState))\n            return false;\n        if (!this.question)\n            return false;\n        return (!this.question.customWidget ||\n            !!this.question.customWidgetData.isNeedRender ||\n            !!this.question.customWidget.widgetJson.isDefaultRender ||\n            !!this.question.customWidget.widgetJson.render);\n    };\n    SurveyQuestionRadioItem.prototype.handleOnChange = function (event) {\n        this.question.clickItemHandler(this.item);\n    };\n    SurveyQuestionRadioItem.prototype.handleOnMouseDown = function (event) {\n        this.question.onMouseDown();\n    };\n    SurveyQuestionRadioItem.prototype.canRender = function () {\n        return !!this.question && !!this.item;\n    };\n    SurveyQuestionRadioItem.prototype.renderElement = function () {\n        var itemClass = this.question.getItemClass(this.item);\n        var labelClass = this.question.getLabelClass(this.item);\n        var controlLabelClass = this.question.getControlLabelClass(this.item);\n        var itemLabel = !this.hideCaption ? external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"span\", { className: controlLabelClass }, this.renderLocString(this.item.locText, this.textStyle)) : null;\n        return (external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"div\", { className: itemClass, role: \"presentation\" },\n            external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"label\", { onMouseDown: this.handleOnMouseDown, className: labelClass },\n                external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"input\", { \"aria-errormessage\": this.question.ariaErrormessage, className: this.cssClasses.itemControl, id: this.question.getItemId(this.item), type: \"radio\", name: this.question.questionName, checked: this.isChecked, value: this.item.value, disabled: !this.question.getItemEnabled(this.item), readOnly: this.question.isReadOnlyAttr, onChange: this.handleOnChange }),\n                this.cssClasses.materialDecorator ?\n                    external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"span\", { className: this.cssClasses.materialDecorator }, this.question.itemSvgIcon ?\n                        external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"svg\", { className: this.cssClasses.itemDecorator },\n                            external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"use\", { xlinkHref: this.question.itemSvgIcon })) :\n                        null) :\n                    null,\n                itemLabel)));\n    };\n    return SurveyQuestionRadioItem;\n}(ReactSurveyElement));\n\nReactElementFactory.Instance.registerElement(\"survey-radiogroup-item\", function (props) {\n    return external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](reactquestion_radiogroup_SurveyQuestionRadioItem, props);\n});\nReactQuestionFactory.Instance.registerQuestion(\"radiogroup\", function (props) {\n    return external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](reactquestion_radiogroup_SurveyQuestionRadiogroup, props);\n});\n\n// CONCATENATED MODULE: ./packages/survey-react-ui/src/reactquestion_text.tsx\nvar reactquestion_text_extends = ( false) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\n\n\nvar reactquestion_text_SurveyQuestionText = /** @class */ (function (_super) {\n    reactquestion_text_extends(SurveyQuestionText, _super);\n    //controlRef: React.RefObject<HTMLInputElement>;\n    function SurveyQuestionText(props) {\n        return _super.call(this, props) || this;\n        //this.controlRef = React.createRef();\n    }\n    SurveyQuestionText.prototype.renderInput = function () {\n        var _this = this;\n        var inputClass = this.question.getControlClass();\n        var placeholder = this.question.renderedPlaceholder;\n        if (this.question.isReadOnlyRenderDiv()) {\n            return external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"div\", null, this.question.inputValue);\n        }\n        var counter = !!this.question.getMaxLength() ? (external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](character_counter_CharacterCounterComponent, { counter: this.question.characterCounter, remainingCharacterCounter: this.question.cssClasses.remainingCharacterCounter })) : null;\n        return (external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](external_root_React_commonjs2_react_commonjs_react_amd_react_[\"Fragment\"], null,\n            external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"input\", { id: this.question.inputId, \n                // disabled={this.isDisplayMode}\n                disabled: this.question.isDisabledAttr, readOnly: this.question.isReadOnlyAttr, className: inputClass, type: this.question.inputType, \n                //ref={this.controlRef}\n                ref: function (input) { return (_this.setControl(input)); }, style: this.question.inputStyle, maxLength: this.question.getMaxLength(), min: this.question.renderedMin, max: this.question.renderedMax, step: this.question.renderedStep, size: this.question.inputSize, placeholder: placeholder, list: this.question.dataListId, autoComplete: this.question.autocomplete, onBlur: function (event) { _this.question.onBlur(event); }, onFocus: function (event) { _this.question.onFocus(event); }, onChange: this.question.onChange, onKeyUp: this.question.onKeyUp, onKeyDown: this.question.onKeyDown, onCompositionUpdate: function (event) { return _this.question.onCompositionUpdate(event.nativeEvent); }, \"aria-required\": this.question.a11y_input_ariaRequired, \"aria-label\": this.question.a11y_input_ariaLabel, \"aria-labelledby\": this.question.a11y_input_ariaLabelledBy, \"aria-describedby\": this.question.a11y_input_ariaDescribedBy, \"aria-invalid\": this.question.a11y_input_ariaInvalid, \"aria-errormessage\": this.question.a11y_input_ariaErrormessage }),\n            counter));\n    };\n    SurveyQuestionText.prototype.renderElement = function () {\n        return (this.question.dataListId ?\n            external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"div\", null,\n                this.renderInput(),\n                this.renderDataList()) :\n            this.renderInput());\n    };\n    SurveyQuestionText.prototype.setValueCore = function (newValue) {\n        this.question.inputValue = newValue;\n    };\n    SurveyQuestionText.prototype.getValueCore = function () {\n        return this.question.inputValue;\n    };\n    SurveyQuestionText.prototype.renderDataList = function () {\n        if (!this.question.dataListId)\n            return null;\n        var items = this.question.dataList;\n        if (items.length == 0)\n            return null;\n        var options = [];\n        for (var i = 0; i < items.length; i++) {\n            options.push(external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"option\", { key: \"item\" + i, value: items[i] }));\n        }\n        return external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"datalist\", { id: this.question.dataListId }, options);\n    };\n    return SurveyQuestionText;\n}(reactquestion_element_SurveyQuestionUncontrolledElement));\n\nReactQuestionFactory.Instance.registerQuestion(\"text\", function (props) {\n    return external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](reactquestion_text_SurveyQuestionText, props);\n});\n\n// CONCATENATED MODULE: ./packages/survey-react-ui/src/boolean.tsx\nvar boolean_extends = ( false) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\n\nvar boolean_SurveyQuestionBoolean = /** @class */ (function (_super) {\n    boolean_extends(SurveyQuestionBoolean, _super);\n    function SurveyQuestionBoolean(props) {\n        var _this = _super.call(this, props) || this;\n        _this.handleOnChange = _this.handleOnChange.bind(_this);\n        _this.handleOnClick = _this.handleOnClick.bind(_this);\n        _this.handleOnLabelClick = _this.handleOnLabelClick.bind(_this);\n        _this.handleOnSwitchClick = _this.handleOnSwitchClick.bind(_this);\n        _this.handleOnKeyDown = _this.handleOnKeyDown.bind(_this);\n        _this.checkRef = external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createRef\"]();\n        return _this;\n    }\n    SurveyQuestionBoolean.prototype.getStateElement = function () {\n        return this.question;\n    };\n    Object.defineProperty(SurveyQuestionBoolean.prototype, \"question\", {\n        get: function () {\n            return this.questionBase;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /*\n    private get allowClick(): boolean {\n      return this.question.isIndeterminate && !this.isDisplayMode;\n    }\n    */\n    SurveyQuestionBoolean.prototype.doCheck = function (value) {\n        this.question.booleanValue = value;\n    };\n    SurveyQuestionBoolean.prototype.handleOnChange = function (event) {\n        this.doCheck(event.target.checked);\n    };\n    SurveyQuestionBoolean.prototype.handleOnClick = function (event) {\n        this.question.onLabelClick(event, true);\n    };\n    SurveyQuestionBoolean.prototype.handleOnSwitchClick = function (event) {\n        this.question.onSwitchClickModel(event.nativeEvent);\n    };\n    SurveyQuestionBoolean.prototype.handleOnLabelClick = function (event, value) {\n        this.question.onLabelClick(event, value);\n    };\n    SurveyQuestionBoolean.prototype.handleOnKeyDown = function (event) {\n        this.question.onKeyDownCore(event);\n    };\n    SurveyQuestionBoolean.prototype.updateDomElement = function () {\n        if (!this.question)\n            return;\n        var el = this.checkRef.current;\n        if (el) {\n            el.indeterminate = this.question.isIndeterminate;\n        }\n        this.setControl(el);\n        _super.prototype.updateDomElement.call(this);\n    };\n    SurveyQuestionBoolean.prototype.renderElement = function () {\n        var _this = this;\n        var cssClasses = this.question.cssClasses;\n        var itemClass = this.question.getItemCss();\n        return (external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"div\", { className: cssClasses.root, onKeyDown: this.handleOnKeyDown },\n            external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"label\", { className: itemClass, onClick: this.handleOnClick },\n                external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"input\", { ref: this.checkRef, type: \"checkbox\", name: this.question.name, value: this.question.booleanValue === null\n                        ? \"\"\n                        : this.question.booleanValue, id: this.question.inputId, className: cssClasses.control, disabled: this.question.isDisabledAttr, readOnly: this.question.isReadOnlyAttr, checked: this.question.booleanValue || false, onChange: this.handleOnChange, role: this.question.a11y_input_ariaRole, \"aria-required\": this.question.a11y_input_ariaRequired, \"aria-label\": this.question.a11y_input_ariaLabel, \"aria-labelledby\": this.question.a11y_input_ariaLabelledBy, \"aria-describedby\": this.question.a11y_input_ariaDescribedBy, \"aria-invalid\": this.question.a11y_input_ariaInvalid, \"aria-errormessage\": this.question.a11y_input_ariaErrormessage }),\n                external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"div\", { className: cssClasses.sliderGhost, onClick: function (event) { return _this.handleOnLabelClick(event, _this.question.swapOrder); } },\n                    external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"span\", { className: this.question.getLabelCss(this.question.swapOrder) }, this.renderLocString(this.question.locLabelLeft))),\n                external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"div\", { className: cssClasses.switch, onClick: this.handleOnSwitchClick },\n                    external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"span\", { className: cssClasses.slider }, this.question.isDeterminated && cssClasses.sliderText ?\n                        external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"span\", { className: cssClasses.sliderText }, this.renderLocString(this.question.getCheckedLabel()))\n                        : null)),\n                external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"div\", { className: cssClasses.sliderGhost, onClick: function (event) { return _this.handleOnLabelClick(event, !_this.question.swapOrder); } },\n                    external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"span\", { className: this.question.getLabelCss(!this.question.swapOrder) }, this.renderLocString(this.question.locLabelRight))))));\n    };\n    return SurveyQuestionBoolean;\n}(reactquestion_element_SurveyQuestionElementBase));\n\nReactQuestionFactory.Instance.registerQuestion(\"boolean\", function (props) {\n    return external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](boolean_SurveyQuestionBoolean, props);\n});\n\n// CONCATENATED MODULE: ./packages/survey-react-ui/src/boolean-checkbox.tsx\nvar boolean_checkbox_extends = ( false) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\n\n\n\n\nvar boolean_checkbox_SurveyQuestionBooleanCheckbox = /** @class */ (function (_super) {\n    boolean_checkbox_extends(SurveyQuestionBooleanCheckbox, _super);\n    function SurveyQuestionBooleanCheckbox(props) {\n        return _super.call(this, props) || this;\n    }\n    SurveyQuestionBooleanCheckbox.prototype.renderElement = function () {\n        var cssClasses = this.question.cssClasses;\n        var itemClass = this.question.getCheckboxItemCss();\n        var description = this.question.canRenderLabelDescription ?\n            reactquestion_element_SurveyElementBase.renderQuestionDescription(this.question) : null;\n        return (external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"div\", { className: cssClasses.rootCheckbox },\n            external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"div\", { className: itemClass },\n                external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"label\", { className: cssClasses.checkboxLabel },\n                    external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"input\", { ref: this.checkRef, type: \"checkbox\", name: this.question.name, value: this.question.booleanValue === null\n                            ? \"\"\n                            : this.question.booleanValue, id: this.question.inputId, className: cssClasses.controlCheckbox, disabled: this.question.isDisabledAttr, readOnly: this.question.isReadOnlyAttr, checked: this.question.booleanValue || false, onChange: this.handleOnChange, \"aria-required\": this.question.ariaRequired, \"aria-label\": this.question.ariaLabel, \"aria-invalid\": this.question.ariaInvalid, \"aria-errormessage\": this.question.ariaErrormessage }),\n                    external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"span\", { className: cssClasses.checkboxMaterialDecorator },\n                        this.question.svgIcon ?\n                            external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"svg\", { className: cssClasses.checkboxItemDecorator },\n                                external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"use\", { xlinkHref: this.question.svgIcon })) : null,\n                        external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"span\", { className: \"check\" })),\n                    this.question.isLabelRendered && (external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"span\", { className: cssClasses.checkboxControlLabel, id: this.question.labelRenderedAriaID },\n                        external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](title_actions_TitleActions, { element: this.question, cssClasses: this.question.cssClasses })))),\n                description)));\n    };\n    return SurveyQuestionBooleanCheckbox;\n}(boolean_SurveyQuestionBoolean));\n\nReactQuestionFactory.Instance.registerQuestion(\"sv-boolean-checkbox\", function (props) {\n    return external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](boolean_checkbox_SurveyQuestionBooleanCheckbox, props);\n});\nexternal_root_Survey_commonjs2_survey_core_commonjs_survey_core_amd_survey_core_[\"RendererFactory\"].Instance.registerRenderer(\"boolean\", \"checkbox\", \"sv-boolean-checkbox\");\n\n// CONCATENATED MODULE: ./packages/survey-react-ui/src/boolean-radio.tsx\nvar boolean_radio_extends = ( false) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\n\n\nvar boolean_radio_SurveyQuestionBooleanRadio = /** @class */ (function (_super) {\n    boolean_radio_extends(SurveyQuestionBooleanRadio, _super);\n    function SurveyQuestionBooleanRadio(props) {\n        var _this = _super.call(this, props) || this;\n        _this.handleOnChange = function (event) {\n            _this.question.booleanValue = event.nativeEvent.target.value == \"true\";\n        };\n        return _this;\n    }\n    SurveyQuestionBooleanRadio.prototype.renderRadioItem = function (value, locText) {\n        var cssClasses = this.question.cssClasses;\n        return (external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"div\", { role: \"presentation\", className: this.question.getRadioItemClass(cssClasses, value) },\n            external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"label\", { className: cssClasses.radioLabel },\n                external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"input\", { type: \"radio\", name: this.question.name, value: value, \"aria-errormessage\": this.question.ariaErrormessage, checked: value === this.question.booleanValueRendered, disabled: this.question.isDisabledAttr, readOnly: this.question.isReadOnlyAttr, className: cssClasses.itemRadioControl, onChange: this.handleOnChange }),\n                this.question.cssClasses.materialRadioDecorator ?\n                    (external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"span\", { className: cssClasses.materialRadioDecorator }, this.question.itemSvgIcon ?\n                        (external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"svg\", { className: cssClasses.itemRadioDecorator },\n                            external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"use\", { xlinkHref: this.question.itemSvgIcon }))) : null)) : null,\n                external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"span\", { className: cssClasses.radioControlLabel }, this.renderLocString(locText)))));\n    };\n    SurveyQuestionBooleanRadio.prototype.renderElement = function () {\n        var cssClasses = this.question.cssClasses;\n        return (external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"div\", { className: cssClasses.rootRadio },\n            external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"fieldset\", { role: \"presentation\", className: cssClasses.radioFieldset }, !this.question.swapOrder ?\n                (external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](external_root_React_commonjs2_react_commonjs_react_amd_react_[\"Fragment\"], null,\n                    this.renderRadioItem(false, this.question.locLabelFalse),\n                    this.renderRadioItem(true, this.question.locLabelTrue)))\n                :\n                    (external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](external_root_React_commonjs2_react_commonjs_react_amd_react_[\"Fragment\"], null,\n                        this.renderRadioItem(true, this.question.locLabelTrue),\n                        this.renderRadioItem(false, this.question.locLabelFalse))))));\n    };\n    return SurveyQuestionBooleanRadio;\n}(boolean_SurveyQuestionBoolean));\n\nReactQuestionFactory.Instance.registerQuestion(\"sv-boolean-radio\", function (props) {\n    return external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](boolean_radio_SurveyQuestionBooleanRadio, props);\n});\nexternal_root_Survey_commonjs2_survey_core_commonjs_survey_core_amd_survey_core_[\"RendererFactory\"].Instance.registerRenderer(\"boolean\", \"radio\", \"sv-boolean-radio\");\n\n// CONCATENATED MODULE: ./packages/survey-react-ui/src/reactquestion_empty.tsx\nvar reactquestion_empty_extends = ( false) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\n\nvar reactquestion_empty_SurveyQuestionEmpty = /** @class */ (function (_super) {\n    reactquestion_empty_extends(SurveyQuestionEmpty, _super);\n    function SurveyQuestionEmpty(props) {\n        var _this = _super.call(this, props) || this;\n        _this.state = { value: _this.question.value };\n        return _this;\n    }\n    Object.defineProperty(SurveyQuestionEmpty.prototype, \"question\", {\n        get: function () {\n            return this.questionBase;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    SurveyQuestionEmpty.prototype.renderElement = function () {\n        return external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"div\", null);\n    };\n    return SurveyQuestionEmpty;\n}(reactquestion_element_SurveyQuestionElementBase));\n\nReactQuestionFactory.Instance.registerQuestion(\"empty\", function (props) {\n    return external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](reactquestion_empty_SurveyQuestionEmpty, props);\n});\n\n// CONCATENATED MODULE: ./packages/survey-react-ui/src/components/matrix/row.tsx\nvar matrix_row_extends = ( false) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\n\nvar row_MatrixRow = /** @class */ (function (_super) {\n    matrix_row_extends(MatrixRow, _super);\n    function MatrixRow(props) {\n        var _this = _super.call(this, props) || this;\n        _this.root = external_root_React_commonjs2_react_commonjs_react_amd_react_default.a.createRef();\n        _this.onPointerDownHandler = function (event) {\n            _this.parentMatrix.onPointerDown(event.nativeEvent, _this.model.row);\n        };\n        return _this;\n    }\n    Object.defineProperty(MatrixRow.prototype, \"model\", {\n        get: function () {\n            return this.props.model;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(MatrixRow.prototype, \"parentMatrix\", {\n        get: function () {\n            return this.props.parentMatrix;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    MatrixRow.prototype.getStateElement = function () {\n        return this.model;\n    };\n    MatrixRow.prototype.componentDidMount = function () {\n        _super.prototype.componentDidMount.call(this);\n        if (this.root.current) {\n            this.model.setRootElement(this.root.current);\n        }\n    };\n    MatrixRow.prototype.componentWillUnmount = function () {\n        _super.prototype.componentWillUnmount.call(this);\n        this.model.setRootElement(undefined);\n    };\n    MatrixRow.prototype.shouldComponentUpdate = function (nextProps, nextState) {\n        if (!_super.prototype.shouldComponentUpdate.call(this, nextProps, nextState))\n            return false;\n        if (nextProps.model !== this.model) {\n            if (nextProps.element) {\n                nextProps.element.setRootElement(this.root.current);\n            }\n            if (this.model) {\n                this.model.setRootElement(undefined);\n            }\n        }\n        return true;\n    };\n    MatrixRow.prototype.render = function () {\n        var _this = this;\n        var model = this.model;\n        if (!model.visible)\n            return null;\n        return (external_root_React_commonjs2_react_commonjs_react_amd_react_default.a.createElement(\"tr\", { ref: this.root, className: model.className, \"data-sv-drop-target-matrix-row\": model.row && model.row.id, onPointerDown: function (event) { return _this.onPointerDownHandler(event); } }, this.props.children));\n    };\n    return MatrixRow;\n}(reactquestion_element_SurveyElementBase));\n\nReactElementFactory.Instance.registerElement(\"sv-matrix-row\", function (props) {\n    return external_root_React_commonjs2_react_commonjs_react_amd_react_default.a.createElement(row_MatrixRow, props);\n});\n\n// CONCATENATED MODULE: ./packages/survey-react-ui/src/components/matrix-actions/drag-drop-icon/drag-drop-icon.tsx\nvar drag_drop_icon_extends = ( false) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\n\nvar drag_drop_icon_SurveyQuestionMatrixDynamicDragDropIcon = /** @class */ (function (_super) {\n    drag_drop_icon_extends(SurveyQuestionMatrixDynamicDragDropIcon, _super);\n    function SurveyQuestionMatrixDynamicDragDropIcon() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(SurveyQuestionMatrixDynamicDragDropIcon.prototype, \"question\", {\n        get: function () {\n            return this.props.item.data.question;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    SurveyQuestionMatrixDynamicDragDropIcon.prototype.renderElement = function () {\n        if (this.question.iconDragElement) {\n            return (external_root_React_commonjs2_react_commonjs_react_amd_react_default.a.createElement(\"svg\", { className: this.question.cssClasses.dragElementDecorator },\n                external_root_React_commonjs2_react_commonjs_react_amd_react_default.a.createElement(\"use\", { xlinkHref: this.question.iconDragElement })));\n        }\n        else {\n            return (external_root_React_commonjs2_react_commonjs_react_amd_react_default.a.createElement(\"span\", { className: this.question.cssClasses.iconDrag }));\n        }\n    };\n    return SurveyQuestionMatrixDynamicDragDropIcon;\n}(ReactSurveyElement));\n\nReactElementFactory.Instance.registerElement(\"sv-matrix-drag-drop-icon\", function (props) {\n    return external_root_React_commonjs2_react_commonjs_react_amd_react_default.a.createElement(drag_drop_icon_SurveyQuestionMatrixDynamicDragDropIcon, props);\n});\n\n// CONCATENATED MODULE: ./packages/survey-react-ui/src/reactquestion_matrixdropdownbase.tsx\nvar reactquestion_matrixdropdownbase_extends = ( false) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\n\n\n\n\n\n\n\n\n\nvar reactquestion_matrixdropdownbase_SurveyQuestionMatrixTable = /** @class */ (function (_super) {\n    reactquestion_matrixdropdownbase_extends(SurveyQuestionMatrixTable, _super);\n    function SurveyQuestionMatrixTable() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(SurveyQuestionMatrixTable.prototype, \"question\", {\n        get: function () {\n            return this.props.question;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(SurveyQuestionMatrixTable.prototype, \"creator\", {\n        get: function () {\n            return this.props.creator;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(SurveyQuestionMatrixTable.prototype, \"table\", {\n        get: function () {\n            return this.question.renderedTable;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    SurveyQuestionMatrixTable.prototype.getStateElement = function () {\n        return this.table;\n    };\n    SurveyQuestionMatrixTable.prototype.wrapCell = function (cell, element, reason) {\n        return this.props.wrapCell(cell, element, reason);\n    };\n    SurveyQuestionMatrixTable.prototype.renderHeader = function () {\n        var table = this.question.renderedTable;\n        if (!table.showHeader)\n            return null;\n        var headers = [];\n        var cells = table.headerRow.cells;\n        for (var i = 0; i < cells.length; i++) {\n            var cell = cells[i];\n            var key = \"column\" + i;\n            var columnStyle = {};\n            if (!!cell.width) {\n                columnStyle.width = cell.width;\n            }\n            if (!!cell.minWidth) {\n                columnStyle.minWidth = cell.minWidth;\n            }\n            var cellContent = this.renderCellContent(cell, \"column-header\", {});\n            var header = cell.hasTitle ?\n                external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"th\", { className: cell.className, key: key, style: columnStyle },\n                    \" \",\n                    cellContent,\n                    \" \")\n                : external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"td\", { className: cell.className, key: key, style: columnStyle });\n            headers.push(header);\n        }\n        return (external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"thead\", null,\n            external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"tr\", null, headers)));\n    };\n    SurveyQuestionMatrixTable.prototype.renderFooter = function () {\n        var table = this.question.renderedTable;\n        if (!table.showFooter)\n            return null;\n        var row = this.renderRow(\"footer\", table.footerRow, this.question.cssClasses, \"row-footer\");\n        return external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"tfoot\", null, row);\n    };\n    SurveyQuestionMatrixTable.prototype.renderRows = function () {\n        var cssClasses = this.question.cssClasses;\n        var rows = [];\n        var renderedRows = this.question.renderedTable.renderedRows;\n        for (var i = 0; i < renderedRows.length; i++) {\n            rows.push(this.renderRow(renderedRows[i].id, renderedRows[i], cssClasses));\n        }\n        return external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"tbody\", null, rows);\n    };\n    SurveyQuestionMatrixTable.prototype.renderRow = function (keyValue, row, cssClasses, reason) {\n        var matrixrow = [];\n        var cells = row.cells;\n        for (var i = 0; i < cells.length; i++) {\n            matrixrow.push(this.renderCell(cells[i], i, cssClasses, reason));\n        }\n        var key = \"row\" + keyValue;\n        return (external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](external_root_React_commonjs2_react_commonjs_react_amd_react_[\"Fragment\"], { key: key }, (reason == \"row-footer\") ? external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"tr\", null, matrixrow) : external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](row_MatrixRow, { model: row, parentMatrix: this.question }, matrixrow)));\n    };\n    SurveyQuestionMatrixTable.prototype.renderCell = function (cell, index, cssClasses, reason) {\n        var key = \"cell\" + index;\n        if (cell.hasQuestion) {\n            return (external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](reactquestion_matrixdropdownbase_SurveyQuestionMatrixDropdownCell, { key: key, cssClasses: cssClasses, cell: cell, creator: this.creator, reason: reason }));\n        }\n        if (cell.isErrorsCell) {\n            if (cell.isErrorsCell) {\n                return (external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](reactquestion_matrixdropdownbase_SurveyQuestionMatrixDropdownErrorsCell, { cell: cell, key: key, keyValue: key, question: cell.question, creator: this.creator }));\n            }\n        }\n        var calcReason = reason;\n        if (!calcReason) {\n            calcReason = cell.hasTitle ? \"row-header\" : \"\";\n        }\n        var cellContent = this.renderCellContent(cell, calcReason, cssClasses);\n        var cellStyle = null;\n        if (!!cell.width || !!cell.minWidth) {\n            cellStyle = {};\n            if (!!cell.width)\n                cellStyle.width = cell.width;\n            if (!!cell.minWidth)\n                cellStyle.minWidth = cell.minWidth;\n        }\n        return (external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"td\", { className: cell.className, key: key, style: cellStyle, colSpan: cell.colSpans, title: cell.getTitle() }, cellContent));\n    };\n    SurveyQuestionMatrixTable.prototype.renderCellContent = function (cell, reason, cssClasses) {\n        var cellContent = null;\n        var cellStyle = null;\n        if (!!cell.width || !!cell.minWidth) {\n            cellStyle = {};\n            if (!!cell.width)\n                cellStyle.width = cell.width;\n            if (!!cell.minWidth)\n                cellStyle.minWidth = cell.minWidth;\n        }\n        if (cell.hasTitle) {\n            reason = \"row-header\";\n            var str = this.renderLocString(cell.locTitle);\n            var require_1 = !!cell.column ? external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](reactquestion_matrixdropdownbase_SurveyQuestionMatrixHeaderRequired, { column: cell.column, question: this.question }) : null;\n            cellContent = (external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](external_root_React_commonjs2_react_commonjs_react_amd_react_[\"Fragment\"], null,\n                str,\n                require_1));\n        }\n        if (cell.isDragHandlerCell) {\n            cellContent = (external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](external_root_React_commonjs2_react_commonjs_react_amd_react_[\"Fragment\"], null,\n                external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](drag_drop_icon_SurveyQuestionMatrixDynamicDragDropIcon, { item: { data: { row: cell.row, question: this.question } } })));\n        }\n        if (cell.isActionsCell) {\n            cellContent = (ReactElementFactory.Instance.createElement(\"sv-matrixdynamic-actions-cell\", {\n                question: this.question,\n                cssClasses: cssClasses, cell: cell,\n                model: cell.item.getData()\n            }));\n        }\n        if (cell.hasPanel) {\n            cellContent = (external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](panel_SurveyPanel, { key: cell.panel.id, element: cell.panel, survey: this.question.survey, cssClasses: cssClasses, isDisplayMode: this.isDisplayMode, creator: this.creator }));\n        }\n        if (!cellContent)\n            return null;\n        var readyCell = (external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](external_root_React_commonjs2_react_commonjs_react_amd_react_[\"Fragment\"], null, cellContent));\n        return this.wrapCell(cell, readyCell, reason);\n    };\n    SurveyQuestionMatrixTable.prototype.renderElement = function () {\n        var header = this.renderHeader();\n        var footers = this.renderFooter();\n        var rows = this.renderRows();\n        return (external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"table\", { className: this.question.getTableCss() },\n            header,\n            rows,\n            footers));\n    };\n    return SurveyQuestionMatrixTable;\n}(reactquestion_element_SurveyElementBase));\nvar reactquestion_matrixdropdownbase_SurveyQuestionMatrixDropdownBase = /** @class */ (function (_super) {\n    reactquestion_matrixdropdownbase_extends(SurveyQuestionMatrixDropdownBase, _super);\n    function SurveyQuestionMatrixDropdownBase(props) {\n        var _this = _super.call(this, props) || this;\n        //Create rendered table in contructor and not on rendering\n        var table = _this.question.renderedTable;\n        _this.state = _this.getState();\n        return _this;\n    }\n    Object.defineProperty(SurveyQuestionMatrixDropdownBase.prototype, \"question\", {\n        get: function () {\n            return this.questionBase;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    SurveyQuestionMatrixDropdownBase.prototype.getState = function (prevState) {\n        if (prevState === void 0) { prevState = null; }\n        return { rowCounter: !prevState ? 0 : prevState.rowCounter + 1 };\n    };\n    SurveyQuestionMatrixDropdownBase.prototype.updateStateOnCallback = function () {\n        if (this.isRendering)\n            return;\n        this.setState(this.getState(this.state));\n    };\n    SurveyQuestionMatrixDropdownBase.prototype.componentDidMount = function () {\n        var _this = this;\n        _super.prototype.componentDidMount.call(this);\n        this.question.onRenderedTableResetCallback = function () {\n            _this.updateStateOnCallback();\n        };\n    };\n    SurveyQuestionMatrixDropdownBase.prototype.componentWillUnmount = function () {\n        _super.prototype.componentWillUnmount.call(this);\n        this.question.onRenderedTableResetCallback = function () { };\n    };\n    SurveyQuestionMatrixDropdownBase.prototype.renderElement = function () {\n        return this.renderTableDiv();\n    };\n    SurveyQuestionMatrixDropdownBase.prototype.renderTableDiv = function () {\n        var _this = this;\n        var divStyle = this.question.showHorizontalScroll\n            ? { overflowX: \"scroll\" }\n            : {};\n        return (external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"div\", { style: divStyle, className: this.question.cssClasses.tableWrapper, ref: function (root) { return (_this.setControl(root)); } },\n            external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](reactquestion_matrixdropdownbase_SurveyQuestionMatrixTable, { question: this.question, creator: this.creator, wrapCell: function (cell, element, reason) { return _this.wrapCell(cell, element, reason); } })));\n    };\n    return SurveyQuestionMatrixDropdownBase;\n}(reactquestion_element_SurveyQuestionElementBase));\n\nvar reactquestion_matrixdropdownbase_SurveyQuestionMatrixActionsCell = /** @class */ (function (_super) {\n    reactquestion_matrixdropdownbase_extends(SurveyQuestionMatrixActionsCell, _super);\n    function SurveyQuestionMatrixActionsCell(props) {\n        return _super.call(this, props) || this;\n    }\n    Object.defineProperty(SurveyQuestionMatrixActionsCell.prototype, \"model\", {\n        get: function () {\n            return this.props.model;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    SurveyQuestionMatrixActionsCell.prototype.renderElement = function () {\n        return (external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](action_bar_SurveyActionBar, { model: this.model, handleClick: false }));\n    };\n    return SurveyQuestionMatrixActionsCell;\n}(ReactSurveyElement));\nvar reactquestion_matrixdropdownbase_SurveyQuestionMatrixDropdownErrorsCell = /** @class */ (function (_super) {\n    reactquestion_matrixdropdownbase_extends(SurveyQuestionMatrixDropdownErrorsCell, _super);\n    function SurveyQuestionMatrixDropdownErrorsCell(props) {\n        return _super.call(this, props) || this;\n    }\n    Object.defineProperty(SurveyQuestionMatrixDropdownErrorsCell.prototype, \"key\", {\n        get: function () {\n            return this.props.keyValue;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(SurveyQuestionMatrixDropdownErrorsCell.prototype, \"cell\", {\n        get: function () {\n            return this.props.cell;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    SurveyQuestionMatrixDropdownErrorsCell.prototype.render = function () {\n        if (!this.cell.isVisible)\n            return null;\n        return external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"td\", { className: this.cell.className, key: this.key, colSpan: this.cell.colSpans, title: this.cell.getTitle() }, _super.prototype.render.call(this));\n    };\n    SurveyQuestionMatrixDropdownErrorsCell.prototype.getQuestionPropertiesToTrack = function () {\n        return _super.prototype.getQuestionPropertiesToTrack.call(this).concat([\"visible\"]);\n    };\n    return SurveyQuestionMatrixDropdownErrorsCell;\n}(reactquestion_SurveyQuestionErrorCell));\nReactElementFactory.Instance.registerElement(\"sv-matrixdynamic-actions-cell\", function (props) {\n    return external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](reactquestion_matrixdropdownbase_SurveyQuestionMatrixActionsCell, props);\n});\nvar reactquestion_matrixdropdownbase_SurveyQuestionMatrixHeaderRequired = /** @class */ (function (_super) {\n    reactquestion_matrixdropdownbase_extends(SurveyQuestionMatrixHeaderRequired, _super);\n    function SurveyQuestionMatrixHeaderRequired(props) {\n        return _super.call(this, props) || this;\n    }\n    Object.defineProperty(SurveyQuestionMatrixHeaderRequired.prototype, \"column\", {\n        get: function () {\n            return this.props.column;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(SurveyQuestionMatrixHeaderRequired.prototype, \"question\", {\n        get: function () {\n            return this.props.question;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    SurveyQuestionMatrixHeaderRequired.prototype.getStateElement = function () {\n        return this.column;\n    };\n    SurveyQuestionMatrixHeaderRequired.prototype.renderElement = function () {\n        if (!this.column.isRenderedRequired)\n            return null;\n        return (external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](external_root_React_commonjs2_react_commonjs_react_amd_react_[\"Fragment\"], null,\n            external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"span\", null, \"\\u00A0\"),\n            external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"span\", { className: this.question.cssClasses.cellRequiredText }, this.column.requiredText)));\n    };\n    return SurveyQuestionMatrixHeaderRequired;\n}(ReactSurveyElement));\nvar reactquestion_matrixdropdownbase_SurveyQuestionMatrixDropdownCell = /** @class */ (function (_super) {\n    reactquestion_matrixdropdownbase_extends(SurveyQuestionMatrixDropdownCell, _super);\n    function SurveyQuestionMatrixDropdownCell(props) {\n        return _super.call(this, props) || this;\n    }\n    Object.defineProperty(SurveyQuestionMatrixDropdownCell.prototype, \"cell\", {\n        get: function () {\n            return this.props.cell;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(SurveyQuestionMatrixDropdownCell.prototype, \"itemCss\", {\n        get: function () {\n            return !!this.cell ? this.cell.className : \"\";\n        },\n        enumerable: false,\n        configurable: true\n    });\n    SurveyQuestionMatrixDropdownCell.prototype.getQuestion = function () {\n        var q = _super.prototype.getQuestion.call(this);\n        if (!!q)\n            return q;\n        return !!this.cell ? this.cell.question : null;\n    };\n    SurveyQuestionMatrixDropdownCell.prototype.doAfterRender = function () {\n        var el = this.cellRef.current;\n        if (el &&\n            this.cell &&\n            this.question &&\n            this.question.survey &&\n            el.getAttribute(\"data-rendered\") !== \"r\") {\n            el.setAttribute(\"data-rendered\", \"r\");\n            var options = {\n                cell: this.cell,\n                cellQuestion: this.question,\n                htmlElement: el,\n                row: this.cell.row,\n                column: this.cell.cell.column,\n            };\n            this.question.survey.matrixAfterCellRender(this.question, options);\n            this.question.afterRenderCore(el);\n        }\n    };\n    SurveyQuestionMatrixDropdownCell.prototype.getShowErrors = function () {\n        return (this.question.isVisible &&\n            (!this.cell.isChoice || this.cell.isFirstChoice));\n    };\n    SurveyQuestionMatrixDropdownCell.prototype.getCellStyle = function () {\n        var res = _super.prototype.getCellStyle.call(this);\n        if (!!this.cell.width || !!this.cell.minWidth) {\n            if (!res)\n                res = {};\n            if (!!this.cell.width)\n                res.width = this.cell.width;\n            if (!!this.cell.minWidth)\n                res.minWidth = this.cell.minWidth;\n        }\n        return res;\n    };\n    SurveyQuestionMatrixDropdownCell.prototype.getHeaderText = function () {\n        return this.cell.headers;\n    };\n    SurveyQuestionMatrixDropdownCell.prototype.renderElement = function () {\n        if (!this.cell.isVisible) {\n            return null;\n        }\n        return _super.prototype.renderElement.call(this);\n    };\n    SurveyQuestionMatrixDropdownCell.prototype.renderCellContent = function () {\n        var content = _super.prototype.renderCellContent.call(this);\n        var responsiveTitle = this.cell.showResponsiveTitle ? (external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"span\", { className: this.cell.responsiveTitleCss }, this.renderLocString(this.cell.responsiveLocTitle))) : null;\n        return external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](external_root_React_commonjs2_react_commonjs_react_amd_react_[\"Fragment\"], null,\n            responsiveTitle,\n            content);\n    };\n    SurveyQuestionMatrixDropdownCell.prototype.renderQuestion = function () {\n        if (!this.question.isVisible)\n            return external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](external_root_React_commonjs2_react_commonjs_react_amd_react_[\"Fragment\"], null);\n        if (!this.cell.isChoice)\n            return reactquestion_SurveyQuestion.renderQuestionBody(this.creator, this.question);\n        if (this.cell.isOtherChoice)\n            return this.renderOtherComment();\n        if (this.cell.isCheckbox)\n            return this.renderCellCheckboxButton();\n        return this.renderCellRadiogroupButton();\n    };\n    SurveyQuestionMatrixDropdownCell.prototype.renderOtherComment = function () {\n        var question = this.cell.question;\n        var cssClasses = question.cssClasses || {};\n        return external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](SurveyQuestionOtherValueItem, { question: question, cssClasses: cssClasses, otherCss: cssClasses.other, isDisplayMode: question.isInputReadOnly });\n    };\n    SurveyQuestionMatrixDropdownCell.prototype.renderCellCheckboxButton = function () {\n        var key = this.cell.question.id + \"item\" + this.cell.choiceIndex;\n        return (external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](reactquestion_checkbox_SurveyQuestionCheckboxItem, { key: key, question: this.cell.question, cssClasses: this.cell.question.cssClasses, isDisplayMode: this.cell.question.isInputReadOnly, item: this.cell.item, isFirst: this.cell.isFirstChoice, index: this.cell.choiceIndex.toString(), hideCaption: true }));\n    };\n    SurveyQuestionMatrixDropdownCell.prototype.renderCellRadiogroupButton = function () {\n        var key = this.cell.question.id + \"item\" + this.cell.choiceIndex;\n        return (external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](reactquestion_radiogroup_SurveyQuestionRadioItem, { key: key, question: this.cell.question, cssClasses: this.cell.question.cssClasses, isDisplayMode: this.cell.question.isInputReadOnly, item: this.cell.item, index: this.cell.choiceIndex.toString(), isChecked: this.cell.question.value === this.cell.item.value, isDisabled: this.cell.question.isReadOnly || !this.cell.item.isEnabled, hideCaption: true }));\n    };\n    return SurveyQuestionMatrixDropdownCell;\n}(reactquestion_SurveyQuestionAndErrorsCell));\n\n\n// CONCATENATED MODULE: ./packages/survey-react-ui/src/reactquestion_matrixdropdown.tsx\nvar reactquestion_matrixdropdown_extends = ( false) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\n\nvar SurveyQuestionMatrixDropdown = /** @class */ (function (_super) {\n    reactquestion_matrixdropdown_extends(SurveyQuestionMatrixDropdown, _super);\n    function SurveyQuestionMatrixDropdown(props) {\n        return _super.call(this, props) || this;\n    }\n    return SurveyQuestionMatrixDropdown;\n}(reactquestion_matrixdropdownbase_SurveyQuestionMatrixDropdownBase));\n\nReactQuestionFactory.Instance.registerQuestion(\"matrixdropdown\", function (props) {\n    return external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](SurveyQuestionMatrixDropdown, props);\n});\n\n// CONCATENATED MODULE: ./packages/survey-react-ui/src/reactquestion_matrixdynamic.tsx\nvar reactquestion_matrixdynamic_extends = ( false) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\n\n\n\nvar reactquestion_matrixdynamic_SurveyQuestionMatrixDynamic = /** @class */ (function (_super) {\n    reactquestion_matrixdynamic_extends(SurveyQuestionMatrixDynamic, _super);\n    function SurveyQuestionMatrixDynamic(props) {\n        var _this = _super.call(this, props) || this;\n        _this.handleOnRowAddClick = _this.handleOnRowAddClick.bind(_this);\n        return _this;\n    }\n    Object.defineProperty(SurveyQuestionMatrixDynamic.prototype, \"matrix\", {\n        get: function () {\n            return this.questionBase;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    SurveyQuestionMatrixDynamic.prototype.handleOnRowAddClick = function (event) {\n        this.matrix.addRowUI();\n    };\n    SurveyQuestionMatrixDynamic.prototype.renderElement = function () {\n        var cssClasses = this.question.cssClasses;\n        var showTable = this.question.renderedTable.showTable;\n        var mainDiv = showTable\n            ? this.renderTableDiv()\n            : this.renderNoRowsContent(cssClasses);\n        return (external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"div\", null,\n            this.renderAddRowButtonOnTop(cssClasses),\n            mainDiv,\n            this.renderAddRowButtonOnBottom(cssClasses)));\n    };\n    SurveyQuestionMatrixDynamic.prototype.renderAddRowButtonOnTop = function (cssClasses) {\n        if (!this.matrix.renderedTable.showAddRowOnTop)\n            return null;\n        return this.renderAddRowButton(cssClasses);\n    };\n    SurveyQuestionMatrixDynamic.prototype.renderAddRowButtonOnBottom = function (cssClasses) {\n        if (!this.matrix.renderedTable.showAddRowOnBottom)\n            return null;\n        return this.renderAddRowButton(cssClasses);\n    };\n    SurveyQuestionMatrixDynamic.prototype.renderNoRowsContent = function (cssClasses) {\n        var text = this.renderLocString(this.matrix.locEmptyRowsText);\n        var textDiv = external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"div\", { className: cssClasses.emptyRowsText }, text);\n        var btn = this.matrix.renderedTable.showAddRow ? this.renderAddRowButton(cssClasses, true) : undefined;\n        return (external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"div\", { className: cssClasses.emptyRowsSection },\n            textDiv,\n            btn));\n    };\n    SurveyQuestionMatrixDynamic.prototype.renderAddRowButton = function (cssClasses, isEmptySection) {\n        if (isEmptySection === void 0) { isEmptySection = false; }\n        return ReactElementFactory.Instance.createElement(\"sv-matrixdynamic-add-btn\", {\n            question: this.question,\n            cssClasses: cssClasses, isEmptySection: isEmptySection\n        });\n    };\n    return SurveyQuestionMatrixDynamic;\n}(reactquestion_matrixdropdownbase_SurveyQuestionMatrixDropdownBase));\n\nReactQuestionFactory.Instance.registerQuestion(\"matrixdynamic\", function (props) {\n    return external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](reactquestion_matrixdynamic_SurveyQuestionMatrixDynamic, props);\n});\nvar reactquestion_matrixdynamic_SurveyQuestionMatrixDynamicAddButton = /** @class */ (function (_super) {\n    reactquestion_matrixdynamic_extends(SurveyQuestionMatrixDynamicAddButton, _super);\n    function SurveyQuestionMatrixDynamicAddButton(props) {\n        var _this = _super.call(this, props) || this;\n        _this.handleOnRowAddClick = _this.handleOnRowAddClick.bind(_this);\n        return _this;\n    }\n    Object.defineProperty(SurveyQuestionMatrixDynamicAddButton.prototype, \"matrix\", {\n        get: function () {\n            return this.props.question;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    SurveyQuestionMatrixDynamicAddButton.prototype.handleOnRowAddClick = function (event) {\n        this.matrix.addRowUI();\n    };\n    SurveyQuestionMatrixDynamicAddButton.prototype.renderElement = function () {\n        var addRowText = this.renderLocString(this.matrix.locAddRowText);\n        var addButton = (external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"button\", { className: this.matrix.getAddRowButtonCss(this.props.isEmptySection), type: \"button\", disabled: this.matrix.isInputReadOnly, onClick: this.matrix.isDesignMode ? undefined : this.handleOnRowAddClick },\n            addRowText,\n            external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"span\", { className: this.props.cssClasses.iconAdd })));\n        return (this.props.isEmptySection ? addButton : external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"div\", { className: this.props.cssClasses.footer }, addButton));\n    };\n    return SurveyQuestionMatrixDynamicAddButton;\n}(ReactSurveyElement));\n\nReactElementFactory.Instance.registerElement(\"sv-matrixdynamic-add-btn\", function (props) {\n    return external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](reactquestion_matrixdynamic_SurveyQuestionMatrixDynamicAddButton, props);\n});\n\n// CONCATENATED MODULE: ./packages/survey-react-ui/src/components/paneldynamic-actions/paneldynamic-add-btn.tsx\nvar paneldynamic_add_btn_extends = ( false) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\n\nvar SurveyQuestionPanelDynamicAction = /** @class */ (function (_super) {\n    paneldynamic_add_btn_extends(SurveyQuestionPanelDynamicAction, _super);\n    function SurveyQuestionPanelDynamicAction(props) {\n        return _super.call(this, props) || this;\n    }\n    Object.defineProperty(SurveyQuestionPanelDynamicAction.prototype, \"data\", {\n        get: function () {\n            return (this.props.item && this.props.item.data) || this.props.data;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(SurveyQuestionPanelDynamicAction.prototype, \"question\", {\n        get: function () {\n            return (this.props.item && this.props.item.data.question) || this.props.data.question;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    return SurveyQuestionPanelDynamicAction;\n}(ReactSurveyElement));\n\nvar paneldynamic_add_btn_SurveyQuestionPanelDynamicAddButton = /** @class */ (function (_super) {\n    paneldynamic_add_btn_extends(SurveyQuestionPanelDynamicAddButton, _super);\n    function SurveyQuestionPanelDynamicAddButton() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.handleClick = function (event) {\n            _this.question.addPanelUI();\n        };\n        return _this;\n    }\n    SurveyQuestionPanelDynamicAddButton.prototype.renderElement = function () {\n        if (!this.question.canAddPanel)\n            return null;\n        var btnText = this.renderLocString(this.question.locPanelAddText);\n        return (external_root_React_commonjs2_react_commonjs_react_amd_react_default.a.createElement(\"button\", { type: \"button\", className: this.question.getAddButtonCss(), onClick: this.handleClick },\n            external_root_React_commonjs2_react_commonjs_react_amd_react_default.a.createElement(\"span\", { className: this.question.cssClasses.buttonAddText }, btnText)));\n    };\n    return SurveyQuestionPanelDynamicAddButton;\n}(SurveyQuestionPanelDynamicAction));\n\nReactElementFactory.Instance.registerElement(\"sv-paneldynamic-add-btn\", function (props) {\n    return external_root_React_commonjs2_react_commonjs_react_amd_react_default.a.createElement(paneldynamic_add_btn_SurveyQuestionPanelDynamicAddButton, props);\n});\n\n// CONCATENATED MODULE: ./packages/survey-react-ui/src/components/paneldynamic-actions/paneldynamic-next-btn.tsx\nvar paneldynamic_next_btn_extends = ( false) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\n\n\nvar paneldynamic_next_btn_SurveyQuestionPanelDynamicNextButton = /** @class */ (function (_super) {\n    paneldynamic_next_btn_extends(SurveyQuestionPanelDynamicNextButton, _super);\n    function SurveyQuestionPanelDynamicNextButton() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.handleClick = function (event) {\n            _this.question.goToNextPanel();\n        };\n        return _this;\n    }\n    SurveyQuestionPanelDynamicNextButton.prototype.renderElement = function () {\n        return (external_root_React_commonjs2_react_commonjs_react_amd_react_default.a.createElement(\"div\", { title: this.question.panelNextText, onClick: this.handleClick, className: this.question.getNextButtonCss() },\n            external_root_React_commonjs2_react_commonjs_react_amd_react_default.a.createElement(svg_icon_SvgIcon, { iconName: this.question.cssClasses.progressBtnIcon, size: \"auto\" })));\n    };\n    return SurveyQuestionPanelDynamicNextButton;\n}(SurveyQuestionPanelDynamicAction));\n\nReactElementFactory.Instance.registerElement(\"sv-paneldynamic-next-btn\", function (props) {\n    return external_root_React_commonjs2_react_commonjs_react_amd_react_default.a.createElement(paneldynamic_next_btn_SurveyQuestionPanelDynamicNextButton, props);\n});\n\n// CONCATENATED MODULE: ./packages/survey-react-ui/src/components/paneldynamic-actions/paneldynamic-prev-btn.tsx\nvar paneldynamic_prev_btn_extends = ( false) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\n\n\nvar paneldynamic_prev_btn_SurveyQuestionPanelDynamicPrevButton = /** @class */ (function (_super) {\n    paneldynamic_prev_btn_extends(SurveyQuestionPanelDynamicPrevButton, _super);\n    function SurveyQuestionPanelDynamicPrevButton() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.handleClick = function (event) {\n            _this.question.goToPrevPanel();\n        };\n        return _this;\n    }\n    SurveyQuestionPanelDynamicPrevButton.prototype.renderElement = function () {\n        return (external_root_React_commonjs2_react_commonjs_react_amd_react_default.a.createElement(\"div\", { title: this.question.panelPrevText, onClick: this.handleClick, className: this.question.getPrevButtonCss() },\n            external_root_React_commonjs2_react_commonjs_react_amd_react_default.a.createElement(svg_icon_SvgIcon, { iconName: this.question.cssClasses.progressBtnIcon, size: \"auto\" })));\n    };\n    return SurveyQuestionPanelDynamicPrevButton;\n}(SurveyQuestionPanelDynamicAction));\n\nReactElementFactory.Instance.registerElement(\"sv-paneldynamic-prev-btn\", function (props) {\n    return external_root_React_commonjs2_react_commonjs_react_amd_react_default.a.createElement(paneldynamic_prev_btn_SurveyQuestionPanelDynamicPrevButton, props);\n});\n\n// CONCATENATED MODULE: ./packages/survey-react-ui/src/components/paneldynamic-actions/paneldynamic-progress-text.tsx\nvar paneldynamic_progress_text_extends = ( false) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\n\nvar paneldynamic_progress_text_SurveyQuestionPanelDynamicProgressText = /** @class */ (function (_super) {\n    paneldynamic_progress_text_extends(SurveyQuestionPanelDynamicProgressText, _super);\n    function SurveyQuestionPanelDynamicProgressText() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    SurveyQuestionPanelDynamicProgressText.prototype.renderElement = function () {\n        return (external_root_React_commonjs2_react_commonjs_react_amd_react_default.a.createElement(\"div\", { className: this.question.cssClasses.progressText }, this.question.progressText));\n    };\n    return SurveyQuestionPanelDynamicProgressText;\n}(SurveyQuestionPanelDynamicAction));\n\nReactElementFactory.Instance.registerElement(\"sv-paneldynamic-progress-text\", function (props) {\n    return external_root_React_commonjs2_react_commonjs_react_amd_react_default.a.createElement(paneldynamic_progress_text_SurveyQuestionPanelDynamicProgressText, props);\n});\n\n// CONCATENATED MODULE: ./packages/survey-react-ui/src/reactquestion_paneldynamic.tsx\nvar reactquestion_paneldynamic_extends = ( false) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\n\n\n\n\n\n\n\nvar reactquestion_paneldynamic_SurveyQuestionPanelDynamic = /** @class */ (function (_super) {\n    reactquestion_paneldynamic_extends(SurveyQuestionPanelDynamic, _super);\n    function SurveyQuestionPanelDynamic(props) {\n        return _super.call(this, props) || this;\n    }\n    Object.defineProperty(SurveyQuestionPanelDynamic.prototype, \"question\", {\n        get: function () {\n            return this.questionBase;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    SurveyQuestionPanelDynamic.prototype.componentDidMount = function () {\n        _super.prototype.componentDidMount.call(this);\n        this.setState({ panelCounter: 0 });\n        var self = this;\n        this.question.panelCountChangedCallback = function () {\n            self.updateQuestionRendering();\n        };\n        this.question.currentIndexChangedCallback = function () {\n            self.updateQuestionRendering();\n        };\n        this.question.renderModeChangedCallback = function () {\n            self.updateQuestionRendering();\n        };\n    };\n    SurveyQuestionPanelDynamic.prototype.componentWillUnmount = function () {\n        _super.prototype.componentWillUnmount.call(this);\n        this.question.panelCountChangedCallback = function () { };\n        this.question.currentIndexChangedCallback = function () { };\n        this.question.renderModeChangedCallback = function () { };\n    };\n    SurveyQuestionPanelDynamic.prototype.updateQuestionRendering = function () {\n        this.setState({\n            panelCounter: this.state ? this.state.panelCounter + 1 : 1,\n        });\n    };\n    SurveyQuestionPanelDynamic.prototype.renderElement = function () {\n        var _this = this;\n        var panels = [];\n        this.question.renderedPanels.forEach(function (panel, index) {\n            panels.push(external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](reactquestion_paneldynamic_SurveyQuestionPanelDynamicItem, { key: panel.id, element: panel, question: _this.question, index: index, cssClasses: _this.question.cssClasses, isDisplayMode: _this.isDisplayMode, creator: _this.creator }));\n        });\n        var btnAdd = this.question.isRenderModeList && this.question[\"showLegacyNavigation\"]\n            ? this.renderAddRowButton()\n            : null;\n        var navTop = this.question.isProgressTopShowing\n            ? this.renderNavigator()\n            : null;\n        var navBottom = this.question.isProgressBottomShowing\n            ? this.renderNavigator()\n            : null;\n        var navV2 = this.renderNavigatorV2();\n        var noEntriesPlaceholder = this.renderPlaceholder();\n        return (external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"div\", { className: this.question.cssClasses.root },\n            noEntriesPlaceholder,\n            navTop,\n            external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"div\", { className: this.question.cssClasses.panelsContainer }, panels),\n            navBottom,\n            btnAdd,\n            navV2));\n    };\n    SurveyQuestionPanelDynamic.prototype.renderNavigator = function () {\n        if (!this.question[\"showLegacyNavigation\"]) {\n            if (this.question.isRangeShowing && this.question.isProgressTopShowing) {\n                return this.renderRange();\n            }\n            else {\n                return null;\n            }\n        }\n        var range = this.question.isRangeShowing ? this.renderRange() : null;\n        var btnPrev = this.rendrerPrevButton();\n        var btnNext = this.rendrerNextButton();\n        var btnAdd = this.renderAddRowButton();\n        var progressClass = this.question.isProgressTopShowing\n            ? this.question.cssClasses.progressTop\n            : this.question.cssClasses.progressBottom;\n        return (external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"div\", { className: progressClass },\n            external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"div\", { style: { clear: \"both\" } },\n                external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"div\", { className: this.question.cssClasses.progressContainer },\n                    btnPrev,\n                    range,\n                    btnNext),\n                btnAdd,\n                this.renderProgressText())));\n    };\n    SurveyQuestionPanelDynamic.prototype.renderProgressText = function () {\n        return (external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](paneldynamic_progress_text_SurveyQuestionPanelDynamicProgressText, { data: { question: this.question } }));\n    };\n    SurveyQuestionPanelDynamic.prototype.rendrerPrevButton = function () {\n        return (external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](paneldynamic_prev_btn_SurveyQuestionPanelDynamicPrevButton, { data: { question: this.question } }));\n    };\n    SurveyQuestionPanelDynamic.prototype.rendrerNextButton = function () {\n        return (external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](paneldynamic_next_btn_SurveyQuestionPanelDynamicNextButton, { data: { question: this.question } }));\n    };\n    SurveyQuestionPanelDynamic.prototype.renderRange = function () {\n        return (external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"div\", { className: this.question.cssClasses.progress },\n            external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"div\", { className: this.question.cssClasses.progressBar, style: { width: this.question.progress }, role: \"progressbar\" })));\n    };\n    SurveyQuestionPanelDynamic.prototype.renderAddRowButton = function () {\n        return ReactElementFactory.Instance.createElement(\"sv-paneldynamic-add-btn\", {\n            data: { question: this.question }\n        });\n    };\n    SurveyQuestionPanelDynamic.prototype.renderNavigatorV2 = function () {\n        if (!this.question.showNavigation)\n            return null;\n        var range = this.question.isRangeShowing && this.question.isProgressBottomShowing ? this.renderRange() : null;\n        return (external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"div\", { className: this.question.cssClasses.footer },\n            external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"hr\", { className: this.question.cssClasses.separator }),\n            range,\n            this.question.footerToolbar.visibleActions.length ? (external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"div\", { className: this.question.cssClasses.footerButtonsContainer },\n                external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](action_bar_SurveyActionBar, { model: this.question.footerToolbar }))) : null));\n    };\n    SurveyQuestionPanelDynamic.prototype.renderPlaceholder = function () {\n        if (this.question.getShowNoEntriesPlaceholder()) {\n            return (external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"div\", { className: this.question.cssClasses.noEntriesPlaceholder },\n                external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"span\", null, this.renderLocString(this.question.locNoEntriesText)),\n                this.renderAddRowButton()));\n        }\n        return null;\n    };\n    return SurveyQuestionPanelDynamic;\n}(reactquestion_element_SurveyQuestionElementBase));\n\nvar reactquestion_paneldynamic_SurveyQuestionPanelDynamicItem = /** @class */ (function (_super) {\n    reactquestion_paneldynamic_extends(SurveyQuestionPanelDynamicItem, _super);\n    function SurveyQuestionPanelDynamicItem() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(SurveyQuestionPanelDynamicItem.prototype, \"question\", {\n        get: function () {\n            return this.props.question;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(SurveyQuestionPanelDynamicItem.prototype, \"index\", {\n        get: function () {\n            return this.props.index;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    SurveyQuestionPanelDynamicItem.prototype.getSurvey = function () {\n        return !!this.question ? this.question.survey : null;\n    };\n    SurveyQuestionPanelDynamicItem.prototype.getCss = function () {\n        var survey = this.getSurvey();\n        return !!survey ? survey.getCss() : {};\n    };\n    SurveyQuestionPanelDynamicItem.prototype.render = function () {\n        var panel = _super.prototype.render.call(this);\n        var removeButton = this.renderButton();\n        var separator = this.question.showSeparator(this.index) ?\n            (external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"hr\", { className: this.question.cssClasses.separator })) : null;\n        return (external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](external_root_React_commonjs2_react_commonjs_react_amd_react_[\"Fragment\"], null,\n            external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"div\", { className: this.question.getPanelWrapperCss(this.panel) },\n                panel,\n                removeButton),\n            separator));\n    };\n    SurveyQuestionPanelDynamicItem.prototype.renderButton = function () {\n        if (this.question.panelRemoveButtonLocation !== \"right\" ||\n            !this.question.canRemovePanel ||\n            (this.question.isRenderModeList && this.panel.isCollapsed)) {\n            return null;\n        }\n        return ReactElementFactory.Instance.createElement(\"sv-paneldynamic-remove-btn\", {\n            data: { question: this.question, panel: this.panel }\n        });\n    };\n    return SurveyQuestionPanelDynamicItem;\n}(panel_SurveyPanel));\n\nReactQuestionFactory.Instance.registerQuestion(\"paneldynamic\", function (props) {\n    return external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](reactquestion_paneldynamic_SurveyQuestionPanelDynamic, props);\n});\n\n// CONCATENATED MODULE: ./packages/survey-react-ui/src/progress.tsx\nvar progress_extends = ( false) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\n\n\nvar progress_SurveyProgress = /** @class */ (function (_super) {\n    progress_extends(SurveyProgress, _super);\n    function SurveyProgress(props) {\n        return _super.call(this, props) || this;\n    }\n    Object.defineProperty(SurveyProgress.prototype, \"isTop\", {\n        get: function () {\n            return this.props.isTop;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(SurveyProgress.prototype, \"progress\", {\n        get: function () {\n            return this.survey.progressValue;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(SurveyProgress.prototype, \"progressText\", {\n        get: function () {\n            return this.survey.progressText;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    SurveyProgress.prototype.render = function () {\n        var progressStyle = {\n            width: this.progress + \"%\",\n        };\n        return (external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"div\", { className: this.survey.getProgressCssClasses(this.props.container) },\n            external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"div\", { style: progressStyle, className: this.css.progressBar, role: \"progressbar\", \"aria-valuemin\": 0, \"aria-valuemax\": 100, \"aria-label\": \"progress\" },\n                external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"span\", { className: external_root_Survey_commonjs2_survey_core_commonjs_survey_core_amd_survey_core_[\"SurveyProgressModel\"].getProgressTextInBarCss(this.css) }, this.progressText)),\n            external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"span\", { className: external_root_Survey_commonjs2_survey_core_commonjs_survey_core_amd_survey_core_[\"SurveyProgressModel\"].getProgressTextUnderBarCss(this.css) }, this.progressText)));\n    };\n    return SurveyProgress;\n}(SurveyNavigationBase));\n\nReactElementFactory.Instance.registerElement(\"sv-progress-pages\", function (props) {\n    return external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](progress_SurveyProgress, props);\n});\nReactElementFactory.Instance.registerElement(\"sv-progress-questions\", function (props) {\n    return external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](progress_SurveyProgress, props);\n});\nReactElementFactory.Instance.registerElement(\"sv-progress-correctquestions\", function (props) {\n    return external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](progress_SurveyProgress, props);\n});\nReactElementFactory.Instance.registerElement(\"sv-progress-requiredquestions\", function (props) {\n    return external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](progress_SurveyProgress, props);\n});\n\n// CONCATENATED MODULE: ./packages/survey-react-ui/src/progressButtons.tsx\nvar progressButtons_extends = ( false) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\n\n\n\nvar progressButtons_SurveyProgressButtons = /** @class */ (function (_super) {\n    progressButtons_extends(SurveyProgressButtons, _super);\n    function SurveyProgressButtons(props) {\n        var _this = _super.call(this, props) || this;\n        _this.listContainerRef = external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createRef\"]();\n        return _this;\n    }\n    Object.defineProperty(SurveyProgressButtons.prototype, \"model\", {\n        get: function () {\n            return this.props.model;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(SurveyProgressButtons.prototype, \"container\", {\n        get: function () {\n            return this.props.container;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    SurveyProgressButtons.prototype.onResize = function (canShowItemTitles) {\n        this.setState({ canShowItemTitles: canShowItemTitles });\n        this.setState({ canShowHeader: !canShowItemTitles });\n    };\n    SurveyProgressButtons.prototype.onUpdateScroller = function (hasScroller) {\n        this.setState({ hasScroller: hasScroller });\n    };\n    SurveyProgressButtons.prototype.onUpdateSettings = function () {\n        this.setState({ canShowItemTitles: this.model.showItemTitles });\n        this.setState({ canShowFooter: !this.model.showItemTitles });\n    };\n    SurveyProgressButtons.prototype.render = function () {\n        var _this = this;\n        return (external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"div\", { className: this.model.getRootCss(this.props.container), style: { \"maxWidth\": this.model.progressWidth }, role: \"progressbar\", \"aria-valuemin\": 0, \"aria-valuemax\": 100, \"aria-label\": \"progress\" },\n            this.state.canShowHeader ? external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"div\", { className: this.css.progressButtonsHeader },\n                external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"div\", { className: this.css.progressButtonsPageTitle, title: this.model.headerText }, this.model.headerText)) : null,\n            external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"div\", { className: this.css.progressButtonsContainer },\n                external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"div\", { className: this.model.getScrollButtonCss(this.state.hasScroller, true), role: \"button\", onClick: function () {\n                        return _this.clickScrollButton(_this.listContainerRef.current, true);\n                    } }),\n                external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"div\", { className: this.css.progressButtonsListContainer, ref: this.listContainerRef },\n                    external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"ul\", { className: this.css.progressButtonsList }, this.getListElements())),\n                external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"div\", { className: this.model.getScrollButtonCss(this.state.hasScroller, false), role: \"button\", onClick: function () {\n                        return _this.clickScrollButton(_this.listContainerRef.current, false);\n                    } })),\n            this.state.canShowFooter ? external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"div\", { className: this.css.progressButtonsFooter },\n                external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"div\", { className: this.css.progressButtonsPageTitle, title: this.model.footerText }, this.model.footerText)) : null));\n    };\n    SurveyProgressButtons.prototype.getListElements = function () {\n        var _this = this;\n        var buttons = [];\n        this.survey.visiblePages.forEach(function (page, index) {\n            buttons.push(_this.renderListElement(page, index));\n        });\n        return buttons;\n    };\n    SurveyProgressButtons.prototype.renderListElement = function (page, index) {\n        var _this = this;\n        var text = reactquestion_element_SurveyElementBase.renderLocString(page.locNavigationTitle);\n        return (external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"li\", { key: \"listelement\" + index, className: this.model.getListElementCss(index), onClick: this.model.isListElementClickable(index)\n                ? function () { return _this.model.clickListElement(page); }\n                : undefined, \"data-page-number\": this.model.getItemNumber(page) },\n            external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"div\", { className: this.css.progressButtonsConnector }),\n            this.state.canShowItemTitles ? external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](external_root_React_commonjs2_react_commonjs_react_amd_react_[\"Fragment\"], null,\n                external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"div\", { className: this.css.progressButtonsPageTitle, title: page.renderedNavigationTitle }, text),\n                external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"div\", { className: this.css.progressButtonsPageDescription, title: page.navigationDescription }, page.navigationDescription)) : null,\n            external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"div\", { className: this.css.progressButtonsButton },\n                external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"div\", { className: this.css.progressButtonsButtonBackground }),\n                external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"div\", { className: this.css.progressButtonsButtonContent }),\n                external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"span\", null, this.model.getItemNumber(page)))));\n    };\n    SurveyProgressButtons.prototype.clickScrollButton = function (listContainerElement, isLeftScroll) {\n        if (!!listContainerElement) {\n            listContainerElement.scrollLeft += (isLeftScroll ? -1 : 1) * 70;\n        }\n    };\n    SurveyProgressButtons.prototype.componentDidMount = function () {\n        var _this = this;\n        _super.prototype.componentDidMount.call(this);\n        setTimeout(function () {\n            _this.respManager = new external_root_Survey_commonjs2_survey_core_commonjs_survey_core_amd_survey_core_[\"ProgressButtonsResponsivityManager\"](_this.model, _this.listContainerRef.current, _this);\n        }, 10);\n    };\n    SurveyProgressButtons.prototype.componentWillUnmount = function () {\n        if (!!this.respManager) {\n            this.respManager.dispose();\n        }\n        _super.prototype.componentWillUnmount.call(this);\n    };\n    return SurveyProgressButtons;\n}(SurveyNavigationBase));\n\nReactElementFactory.Instance.registerElement(\"sv-progress-buttons\", function (props) {\n    return external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](progressButtons_SurveyProgressButtons, props);\n});\n\n// CONCATENATED MODULE: ./packages/survey-react-ui/src/components/list/list-item.tsx\nvar list_item_extends = ( false) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\n\n\nvar list_item_ListItem = /** @class */ (function (_super) {\n    list_item_extends(ListItem, _super);\n    function ListItem() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.handleKeydown = function (event) {\n            _this.model.onKeyDown(event);\n        };\n        return _this;\n    }\n    Object.defineProperty(ListItem.prototype, \"model\", {\n        get: function () {\n            return this.props.model;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(ListItem.prototype, \"item\", {\n        get: function () {\n            return this.props.item;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    ListItem.prototype.getStateElement = function () {\n        return this.item;\n    };\n    ListItem.prototype.render = function () {\n        var _this = this;\n        if (!this.item)\n            return null;\n        var contentWrapStyle = {\n            paddingInlineStart: this.model.getItemIndent(this.item)\n        };\n        var className = this.model.getItemClass(this.item);\n        var itemContent = this.item.component || \"sv-list-item-content\";\n        var newElement = ReactElementFactory.Instance.createElement(itemContent, { item: this.item, key: this.item.id, model: this.model });\n        var contentWrap = external_root_React_commonjs2_react_commonjs_react_amd_react_default.a.createElement(\"div\", { style: contentWrapStyle, className: this.model.cssClasses.itemBody, title: this.item.locTitle.calculatedText, onMouseOver: function (event) { _this.model.onItemHover(_this.item); }, onMouseLeave: function (event) { _this.model.onItemLeave(_this.item); } }, newElement);\n        var separator = this.item.needSeparator ? external_root_React_commonjs2_react_commonjs_react_amd_react_default.a.createElement(\"div\", { className: this.model.cssClasses.itemSeparator }) : null;\n        var isVisible = this.model.isItemVisible(this.item);\n        var style = {\n            display: isVisible ? null : \"none\"\n        };\n        return attachKey2click(external_root_React_commonjs2_react_commonjs_react_amd_react_default.a.createElement(\"li\", { className: className, role: \"option\", style: style, id: this.item.elementId, \"aria-selected\": this.model.isItemSelected(this.item), onClick: function (event) {\n                _this.model.onItemClick(_this.item);\n                event.stopPropagation();\n            }, onPointerDown: function (event) { return _this.model.onPointerDown(event, _this.item); } },\n            separator,\n            contentWrap), this.item);\n    };\n    ListItem.prototype.componentDidMount = function () {\n        _super.prototype.componentDidMount.call(this);\n        this.model.onLastItemRended(this.item);\n    };\n    return ListItem;\n}(reactquestion_element_SurveyElementBase));\n\nReactElementFactory.Instance.registerElement(\"sv-list-item\", function (props) {\n    return external_root_React_commonjs2_react_commonjs_react_amd_react_default.a.createElement(list_item_ListItem, props);\n});\n\n// CONCATENATED MODULE: ./packages/survey-react-ui/src/components/list/list.tsx\nvar list_extends = ( false) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\n\n\n\n\nvar list_List = /** @class */ (function (_super) {\n    list_extends(List, _super);\n    function List(props) {\n        var _this = _super.call(this, props) || this;\n        _this.handleKeydown = function (event) {\n            _this.model.onKeyDown(event);\n        };\n        _this.handleMouseMove = function (event) {\n            _this.model.onMouseMove(event);\n        };\n        _this.state = {\n            filterString: _this.model.filterString || \"\"\n        };\n        _this.listContainerRef = external_root_React_commonjs2_react_commonjs_react_amd_react_default.a.createRef();\n        return _this;\n    }\n    Object.defineProperty(List.prototype, \"model\", {\n        get: function () {\n            return this.props.model;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    List.prototype.getStateElement = function () {\n        return this.model;\n    };\n    List.prototype.componentDidMount = function () {\n        _super.prototype.componentDidMount.call(this);\n        if (!!this.listContainerRef && !!this.listContainerRef.current) {\n            this.model.initListContainerHtmlElement(this.listContainerRef.current);\n        }\n    };\n    List.prototype.componentDidUpdate = function (prevProps, prevState) {\n        var _a;\n        _super.prototype.componentDidUpdate.call(this, prevProps, prevState);\n        if (this.model !== prevProps.model) {\n            if (this.model && !!((_a = this.listContainerRef) === null || _a === void 0 ? void 0 : _a.current)) {\n                this.model.initListContainerHtmlElement(this.listContainerRef.current);\n            }\n            if (prevProps.model) {\n                prevProps.model.initListContainerHtmlElement(undefined);\n            }\n        }\n    };\n    List.prototype.componentWillUnmount = function () {\n        _super.prototype.componentWillUnmount.call(this);\n        if (!!this.model) {\n            this.model.initListContainerHtmlElement(undefined);\n        }\n    };\n    List.prototype.renderElement = function () {\n        return (external_root_React_commonjs2_react_commonjs_react_amd_react_default.a.createElement(\"div\", { className: this.model.cssClasses.root, ref: this.listContainerRef },\n            this.searchElementContent(),\n            this.emptyContent(),\n            this.renderList()));\n    };\n    List.prototype.renderList = function () {\n        if (!this.model.renderElements)\n            return null;\n        var items = this.renderItems();\n        var ulStyle = { display: this.model.isEmpty ? \"none\" : null };\n        return (external_root_React_commonjs2_react_commonjs_react_amd_react_default.a.createElement(\"ul\", { className: this.model.getListClass(), style: ulStyle, role: \"listbox\", id: this.model.elementId, onMouseDown: function (e) {\n                e.preventDefault();\n            }, onKeyDown: this.handleKeydown, onMouseMove: this.handleMouseMove }, items));\n    };\n    List.prototype.renderItems = function () {\n        var _this = this;\n        if (!this.model) {\n            return null;\n        }\n        var items = this.model.renderedActions;\n        if (!items) {\n            return null;\n        }\n        return items.map(function (item, itemIndex) {\n            return (external_root_React_commonjs2_react_commonjs_react_amd_react_default.a.createElement(list_item_ListItem, { model: _this.model, item: item, key: \"item\" + itemIndex }));\n        });\n    };\n    List.prototype.searchElementContent = function () {\n        var _this = this;\n        if (!this.model.showFilter)\n            return null;\n        else {\n            var onChange = function (e) {\n                var root = external_root_Survey_commonjs2_survey_core_commonjs_survey_core_amd_survey_core_[\"settings\"].environment.root;\n                if (e.target === root.activeElement) {\n                    _this.model.filterString = e.target.value;\n                }\n            };\n            var onKeyUp = function (e) {\n                _this.model.goToItems(e);\n            };\n            var clearButton = this.model.showSearchClearButton && !!this.model.filterString ?\n                external_root_React_commonjs2_react_commonjs_react_amd_react_default.a.createElement(\"button\", { className: this.model.cssClasses.searchClearButtonIcon, onClick: function (event) { _this.model.onClickSearchClearButton(event); } },\n                    external_root_React_commonjs2_react_commonjs_react_amd_react_default.a.createElement(svg_icon_SvgIcon, { iconName: \"icon-searchclear\", size: \"auto\" })) : null;\n            return (external_root_React_commonjs2_react_commonjs_react_amd_react_default.a.createElement(\"div\", { className: this.model.cssClasses.filter },\n                external_root_React_commonjs2_react_commonjs_react_amd_react_default.a.createElement(\"div\", { className: this.model.cssClasses.filterIcon },\n                    external_root_React_commonjs2_react_commonjs_react_amd_react_default.a.createElement(svg_icon_SvgIcon, { iconName: \"icon-search\", size: \"auto\" })),\n                external_root_React_commonjs2_react_commonjs_react_amd_react_default.a.createElement(\"input\", { type: \"text\", className: this.model.cssClasses.filterInput, \"aria-label\": this.model.filterStringPlaceholder, placeholder: this.model.filterStringPlaceholder, value: this.state.filterString, onKeyUp: onKeyUp, onChange: onChange }),\n                clearButton));\n        }\n    };\n    List.prototype.emptyContent = function () {\n        var style = { display: this.model.isEmpty ? null : \"none\" };\n        return (external_root_React_commonjs2_react_commonjs_react_amd_react_default.a.createElement(\"div\", { className: this.model.cssClasses.emptyContainer, style: style },\n            external_root_React_commonjs2_react_commonjs_react_amd_react_default.a.createElement(\"div\", { className: this.model.cssClasses.emptyText, \"aria-label\": this.model.emptyMessage }, this.model.emptyMessage)));\n    };\n    return List;\n}(reactquestion_element_SurveyElementBase));\n\nReactElementFactory.Instance.registerElement(\"sv-list\", function (props) {\n    return external_root_React_commonjs2_react_commonjs_react_amd_react_default.a.createElement(list_List, props);\n});\n\n// CONCATENATED MODULE: ./packages/survey-react-ui/src/progressToc.tsx\nvar progressToc_extends = ( false) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\n\n\n\n\nvar progressToc_SurveyProgressToc = /** @class */ (function (_super) {\n    progressToc_extends(SurveyProgressToc, _super);\n    function SurveyProgressToc() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    SurveyProgressToc.prototype.render = function () {\n        var tocModel = this.props.model;\n        var content;\n        if (tocModel.isMobile) {\n            content = external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"div\", { onClick: tocModel.togglePopup },\n                external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](svg_icon_SvgIcon, { iconName: tocModel.icon, size: 24 }),\n                external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](popup_Popup, { model: tocModel.popupModel }));\n        }\n        else {\n            content = external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](list_List, { model: tocModel.listModel });\n        }\n        return (external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"div\", { className: tocModel.containerCss }, content));\n    };\n    return SurveyProgressToc;\n}(SurveyNavigationBase));\n\nReactElementFactory.Instance.registerElement(\"sv-navigation-toc\", function (props) {\n    return external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](progressToc_SurveyProgressToc, props);\n});\n\n// CONCATENATED MODULE: ./packages/survey-react-ui/src/reactquestion_rating.tsx\nvar reactquestion_rating_extends = ( false) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\n\n\nvar reactquestion_rating_SurveyQuestionRating = /** @class */ (function (_super) {\n    reactquestion_rating_extends(SurveyQuestionRating, _super);\n    function SurveyQuestionRating(props) {\n        var _this = _super.call(this, props) || this;\n        _this.handleOnClick = _this.handleOnClick.bind(_this);\n        return _this;\n    }\n    Object.defineProperty(SurveyQuestionRating.prototype, \"question\", {\n        get: function () {\n            return this.questionBase;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    SurveyQuestionRating.prototype.handleOnClick = function (event) {\n        this.question.setValueFromClick(event.target.value);\n        this.setState({ value: this.question.value });\n    };\n    SurveyQuestionRating.prototype.renderItem = function (item, index) {\n        var renderedItem = ReactElementFactory.Instance.createElement(this.question.itemComponent, {\n            question: this.question,\n            item: item,\n            index: index,\n            key: \"value\" + index,\n            handleOnClick: this.handleOnClick,\n            isDisplayMode: this.isDisplayMode\n        });\n        return renderedItem;\n    };\n    SurveyQuestionRating.prototype.renderElement = function () {\n        var _this = this;\n        var cssClasses = this.question.cssClasses;\n        var minText = this.question.minRateDescription\n            ? this.renderLocString(this.question.locMinRateDescription)\n            : null;\n        var maxText = this.question.maxRateDescription\n            ? this.renderLocString(this.question.locMaxRateDescription)\n            : null;\n        return (external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"div\", { className: this.question.ratingRootCss, ref: function (div) { return (_this.setControl(div)); } },\n            external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"fieldset\", { role: \"radiogroup\" },\n                external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"legend\", { role: \"presentation\", className: \"sv-hidden\" }),\n                !!this.question.hasMinLabel ? external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"span\", { className: cssClasses.minText }, minText) : null,\n                this.question.renderedRateItems.map(function (item, index) { return _this.renderItem(item, index); }),\n                !!this.question.hasMaxLabel ? external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"span\", { className: cssClasses.maxText }, maxText) : null)));\n    };\n    return SurveyQuestionRating;\n}(reactquestion_element_SurveyQuestionElementBase));\n\nReactQuestionFactory.Instance.registerQuestion(\"rating\", function (props) {\n    return external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](reactquestion_rating_SurveyQuestionRating, props);\n});\n\n// CONCATENATED MODULE: ./packages/survey-react-ui/src/rating-dropdown.tsx\nvar rating_dropdown_extends = ( false) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\n\n\n\nvar rating_dropdown_SurveyQuestionRatingDropdown = /** @class */ (function (_super) {\n    rating_dropdown_extends(SurveyQuestionRatingDropdown, _super);\n    function SurveyQuestionRatingDropdown(props) {\n        return _super.call(this, props) || this;\n    }\n    SurveyQuestionRatingDropdown.prototype.renderElement = function () {\n        var cssClasses = this.question.cssClasses;\n        var select = this.renderSelect(cssClasses);\n        return (external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"div\", { className: this.question.cssClasses.rootDropdown }, select));\n    };\n    return SurveyQuestionRatingDropdown;\n}(dropdown_base_SurveyQuestionDropdownBase));\n\nReactQuestionFactory.Instance.registerQuestion(\"sv-rating-dropdown\", function (props) {\n    return external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](rating_dropdown_SurveyQuestionRatingDropdown, props);\n});\nexternal_root_Survey_commonjs2_survey_core_commonjs_survey_core_amd_survey_core_[\"RendererFactory\"].Instance.registerRenderer(\"rating\", \"dropdown\", \"sv-rating-dropdown\");\n\n// CONCATENATED MODULE: ./packages/survey-react-ui/src/reactquestion_expression.tsx\nvar reactquestion_expression_extends = ( false) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\n\nvar reactquestion_expression_SurveyQuestionExpression = /** @class */ (function (_super) {\n    reactquestion_expression_extends(SurveyQuestionExpression, _super);\n    function SurveyQuestionExpression(props) {\n        return _super.call(this, props) || this;\n    }\n    Object.defineProperty(SurveyQuestionExpression.prototype, \"question\", {\n        get: function () {\n            return this.questionBase;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    SurveyQuestionExpression.prototype.renderElement = function () {\n        var _this = this;\n        var cssClasses = this.question.cssClasses;\n        return (external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"div\", { id: this.question.inputId, className: cssClasses.root, ref: function (div) { return (_this.setControl(div)); } }, this.question.formatedValue));\n    };\n    return SurveyQuestionExpression;\n}(reactquestion_element_SurveyQuestionElementBase));\n\nReactQuestionFactory.Instance.registerQuestion(\"expression\", function (props) {\n    return external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](reactquestion_expression_SurveyQuestionExpression, props);\n});\n\n// CONCATENATED MODULE: ./packages/survey-react-ui/src/react-popup-survey.tsx\nvar react_popup_survey_extends = ( false) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\n\n\nvar react_popup_survey_PopupSurvey = /** @class */ (function (_super) {\n    react_popup_survey_extends(PopupSurvey, _super);\n    function PopupSurvey(props) {\n        var _this = _super.call(this, props) || this;\n        _this.handleOnExpanded = _this.handleOnExpanded.bind(_this);\n        return _this;\n    }\n    PopupSurvey.prototype.getStateElements = function () {\n        return [this.popup, this.popup.survey];\n    };\n    PopupSurvey.prototype.handleOnExpanded = function (event) {\n        this.popup.changeExpandCollapse();\n    };\n    PopupSurvey.prototype.canRender = function () {\n        return _super.prototype.canRender.call(this) && this.popup.isShowing;\n    };\n    PopupSurvey.prototype.renderElement = function () {\n        var _this = this;\n        var header = this.renderWindowHeader();\n        var body = this.renderBody();\n        var style = {};\n        if (!!this.popup.renderedWidth) {\n            style.width = this.popup.renderedWidth;\n            style.maxWidth = this.popup.renderedWidth;\n        }\n        return (external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"div\", { className: this.popup.cssRoot, style: style, onScroll: function () { return _this.popup.onScroll(); } },\n            external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"div\", { className: this.popup.cssRootContent },\n                header,\n                body)));\n    };\n    PopupSurvey.prototype.renderWindowHeader = function () {\n        var popup = this.popup;\n        var headerCss = popup.cssHeaderRoot;\n        var titleCollapsed = null;\n        var expandCollapseIcon;\n        var closeButton = null;\n        var allowFullScreenButon = null;\n        if (popup.isCollapsed) {\n            headerCss += \" \" + popup.cssRootCollapsedMod;\n            titleCollapsed = this.renderTitleCollapsed(popup);\n            expandCollapseIcon = this.renderExpandIcon();\n        }\n        else {\n            expandCollapseIcon = this.renderCollapseIcon();\n        }\n        if (popup.allowClose) {\n            closeButton = this.renderCloseButton(this.popup);\n        }\n        if (popup.allowFullScreen) {\n            allowFullScreenButon = this.renderAllowFullScreenButon(this.popup);\n        }\n        return (external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"div\", { className: popup.cssHeaderRoot },\n            titleCollapsed,\n            external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"div\", { className: popup.cssHeaderButtonsContainer },\n                allowFullScreenButon,\n                external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"div\", { className: popup.cssHeaderCollapseButton, onClick: this.handleOnExpanded }, expandCollapseIcon),\n                closeButton)));\n    };\n    PopupSurvey.prototype.renderTitleCollapsed = function (popup) {\n        if (!popup.locTitle)\n            return null;\n        return external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"div\", { className: popup.cssHeaderTitleCollapsed }, popup.locTitle.renderedHtml);\n    };\n    PopupSurvey.prototype.renderExpandIcon = function () {\n        return external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](svg_icon_SvgIcon, { iconName: \"icon-restore_16x16\", size: 16 });\n    };\n    PopupSurvey.prototype.renderCollapseIcon = function () {\n        return external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](svg_icon_SvgIcon, { iconName: \"icon-minimize_16x16\", size: 16 });\n    };\n    PopupSurvey.prototype.renderCloseButton = function (popup) {\n        var _this = this;\n        return (external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"div\", { className: popup.cssHeaderCloseButton, onClick: function () {\n                popup.hide();\n                if (typeof _this.props.onClose == \"function\") {\n                    _this.props.onClose();\n                }\n            } },\n            external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](svg_icon_SvgIcon, { iconName: \"icon-close_16x16\", size: 16 })));\n    };\n    PopupSurvey.prototype.renderAllowFullScreenButon = function (popup) {\n        var Icon;\n        if (popup.isFullScreen) {\n            Icon = external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](svg_icon_SvgIcon, { iconName: \"icon-back-to-panel_16x16\", size: 16 });\n        }\n        else {\n            Icon = external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](svg_icon_SvgIcon, { iconName: \"icon-full-screen_16x16\", size: 16 });\n        }\n        return (external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"div\", { className: popup.cssHeaderFullScreenButton, onClick: function () { popup.toggleFullScreen(); } }, Icon));\n    };\n    PopupSurvey.prototype.renderBody = function () {\n        return external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"div\", { className: this.popup.cssBody }, this.doRender());\n    };\n    PopupSurvey.prototype.createSurvey = function (newProps) {\n        if (!newProps)\n            newProps = {};\n        _super.prototype.createSurvey.call(this, newProps);\n        this.popup = new external_root_Survey_commonjs2_survey_core_commonjs_survey_core_amd_survey_core_[\"PopupSurveyModel\"](null, this.survey);\n        if (newProps.closeOnCompleteTimeout) {\n            this.popup.closeOnCompleteTimeout = newProps.closeOnCompleteTimeout;\n        }\n        this.popup.allowClose = newProps.allowClose;\n        this.popup.allowFullScreen = newProps.allowFullScreen;\n        this.popup.isShowing = true;\n        if (!this.popup.isExpanded && (newProps.expanded || newProps.isExpanded))\n            this.popup.expand();\n    };\n    return PopupSurvey;\n}(reactSurvey_Survey));\n\n/**\n * Obsolete. Please use PopupSurvey\n */\nvar SurveyWindow = /** @class */ (function (_super) {\n    react_popup_survey_extends(SurveyWindow, _super);\n    function SurveyWindow() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return SurveyWindow;\n}(react_popup_survey_PopupSurvey));\n\n\n// CONCATENATED MODULE: ./packages/survey-react-ui/src/imagepicker.tsx\nvar imagepicker_extends = ( false) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\n\n\n\nvar imagepicker_SurveyQuestionImagePicker = /** @class */ (function (_super) {\n    imagepicker_extends(SurveyQuestionImagePicker, _super);\n    function SurveyQuestionImagePicker(props) {\n        return _super.call(this, props) || this;\n    }\n    Object.defineProperty(SurveyQuestionImagePicker.prototype, \"question\", {\n        get: function () {\n            return this.questionBase;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    SurveyQuestionImagePicker.prototype.renderElement = function () {\n        var cssClasses = this.question.cssClasses;\n        return (external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"fieldset\", { className: this.question.getSelectBaseRootCss() },\n            external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"legend\", { className: \"sv-hidden\" }, this.question.locTitle.renderedHtml),\n            this.question.hasColumns ? this.getColumns(cssClasses) : this.getItems(cssClasses)));\n    };\n    SurveyQuestionImagePicker.prototype.getColumns = function (cssClasses) {\n        var _this = this;\n        return this.question.columns.map(function (column, ci) {\n            var items = column.map(function (item, ii) {\n                return _this.renderItem(\"item\" + ii, item, cssClasses);\n            });\n            return (external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"div\", { key: \"column\" + ci + _this.question.getItemsColumnKey(column), className: _this.question.getColumnClass(), role: \"presentation\" }, items));\n        });\n    };\n    SurveyQuestionImagePicker.prototype.getItems = function (cssClasses) {\n        var items = [];\n        for (var i = 0; i < this.question.visibleChoices.length; i++) {\n            var item = this.question.visibleChoices[i];\n            var key = \"item\" + i;\n            items.push(this.renderItem(key, item, cssClasses));\n        }\n        return items;\n    };\n    Object.defineProperty(SurveyQuestionImagePicker.prototype, \"textStyle\", {\n        get: function () {\n            return { marginLeft: \"3px\", display: \"inline\", position: \"static\" };\n        },\n        enumerable: false,\n        configurable: true\n    });\n    SurveyQuestionImagePicker.prototype.renderItem = function (key, item, cssClasses) {\n        var renderedItem = external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](imagepicker_SurveyQuestionImagePickerItem, { key: key, question: this.question, item: item, cssClasses: cssClasses });\n        var survey = this.question.survey;\n        var wrappedItem = null;\n        if (!!survey) {\n            wrappedItem = reactsurveymodel_ReactSurveyElementsWrapper.wrapItemValue(survey, renderedItem, this.question, item);\n        }\n        return wrappedItem !== null && wrappedItem !== void 0 ? wrappedItem : renderedItem;\n    };\n    return SurveyQuestionImagePicker;\n}(reactquestion_element_SurveyQuestionElementBase));\n\nvar imagepicker_SurveyQuestionImagePickerItem = /** @class */ (function (_super) {\n    imagepicker_extends(SurveyQuestionImagePickerItem, _super);\n    function SurveyQuestionImagePickerItem(props) {\n        var _this = _super.call(this, props) || this;\n        _this.handleOnChange = _this.handleOnChange.bind(_this);\n        return _this;\n    }\n    SurveyQuestionImagePickerItem.prototype.getStateElement = function () {\n        return this.item;\n    };\n    SurveyQuestionImagePickerItem.prototype.componentDidMount = function () {\n        _super.prototype.componentDidMount.call(this);\n        this.reactOnStrChanged();\n    };\n    SurveyQuestionImagePickerItem.prototype.componentWillUnmount = function () {\n        _super.prototype.componentWillUnmount.call(this);\n        this.item.locImageLink.onChanged = function () { };\n    };\n    SurveyQuestionImagePickerItem.prototype.componentDidUpdate = function (prevProps, prevState) {\n        _super.prototype.componentDidUpdate.call(this, prevProps, prevState);\n        this.reactOnStrChanged();\n    };\n    SurveyQuestionImagePickerItem.prototype.reactOnStrChanged = function () {\n        var _this = this;\n        this.item.locImageLink.onChanged = function () {\n            _this.setState({ locImageLinkchanged: !!_this.state && _this.state.locImageLink ? _this.state.locImageLink + 1 : 1 });\n        };\n    };\n    Object.defineProperty(SurveyQuestionImagePickerItem.prototype, \"cssClasses\", {\n        get: function () {\n            return this.props.cssClasses;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(SurveyQuestionImagePickerItem.prototype, \"item\", {\n        get: function () {\n            return this.props.item;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(SurveyQuestionImagePickerItem.prototype, \"question\", {\n        get: function () {\n            return this.props.question;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    SurveyQuestionImagePickerItem.prototype.handleOnChange = function (event) {\n        if (this.question.isReadOnlyAttr)\n            return;\n        if (this.question.multiSelect) {\n            if (event.target.checked) {\n                this.question.value = this.question.value.concat(event.target.value);\n            }\n            else {\n                var currValue = this.question.value;\n                currValue.splice(this.question.value.indexOf(event.target.value), 1);\n                this.question.value = currValue;\n            }\n        }\n        else {\n            this.question.value = event.target.value;\n        }\n        this.setState({ value: this.question.value });\n    };\n    SurveyQuestionImagePickerItem.prototype.renderElement = function () {\n        var _this = this;\n        var item = this.item;\n        var question = this.question;\n        var cssClasses = this.cssClasses;\n        var isChecked = question.isItemSelected(item);\n        var itemClass = question.getItemClass(item);\n        var text = null;\n        if (question.showLabel) {\n            text = (external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"span\", { className: question.cssClasses.itemText }, item.text ? reactquestion_element_SurveyElementBase.renderLocString(item.locText) : item.value));\n        }\n        var style = { objectFit: this.question.imageFit };\n        var control = null;\n        if (item.locImageLink.renderedHtml && this.question.contentMode === \"image\") {\n            control = (external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"img\", { className: cssClasses.image, src: item.locImageLink.renderedHtml, width: this.question.renderedImageWidth, height: this.question.renderedImageHeight, alt: item.locText.renderedHtml, style: style, onLoad: function (event) { _this.question[\"onContentLoaded\"](item, event.nativeEvent); }, onError: function (event) { item.onErrorHandler(item, event.nativeEvent); } }));\n        }\n        if (item.locImageLink.renderedHtml && this.question.contentMode === \"video\") {\n            control = (external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"video\", { controls: true, className: cssClasses.image, src: item.locImageLink.renderedHtml, width: this.question.renderedImageWidth, height: this.question.renderedImageHeight, style: style, onLoadedMetadata: function (event) { _this.question[\"onContentLoaded\"](item, event.nativeEvent); }, onError: function (event) { item.onErrorHandler(item, event.nativeEvent); } }));\n        }\n        if (!item.locImageLink.renderedHtml || item.contentNotLoaded) {\n            var style_1 = {\n                width: this.question.renderedImageWidth,\n                height: this.question.renderedImageHeight,\n                objectFit: this.question.imageFit\n            };\n            control = (external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"div\", { className: cssClasses.itemNoImage, style: style_1 }, cssClasses.itemNoImageSvgIcon ?\n                external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](svg_icon_SvgIcon, { className: cssClasses.itemNoImageSvgIcon, iconName: this.question.cssClasses.itemNoImageSvgIconId, size: 48 }) :\n                null));\n        }\n        var renderedItem = (external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"div\", { className: itemClass },\n            external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"label\", { className: cssClasses.label },\n                external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"input\", { className: cssClasses.itemControl, id: this.question.getItemId(item), type: this.question.inputType, name: this.question.questionName, checked: isChecked, value: item.value, disabled: !this.question.getItemEnabled(item), readOnly: this.question.isReadOnlyAttr, onChange: this.handleOnChange, \"aria-required\": this.question.ariaRequired, \"aria-label\": this.question.ariaLabel, \"aria-invalid\": this.question.ariaInvalid, \"aria-errormessage\": this.question.ariaErrormessage }),\n                external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"div\", { className: this.question.cssClasses.itemDecorator },\n                    external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"div\", { className: this.question.cssClasses.imageContainer },\n                        !!this.question.cssClasses.checkedItemDecorator ?\n                            external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"span\", { className: this.question.cssClasses.checkedItemDecorator }, !!this.question.cssClasses.checkedItemSvgIconId ? external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](svg_icon_SvgIcon, { size: \"auto\", className: this.question.cssClasses.checkedItemSvgIcon, iconName: this.question.cssClasses.checkedItemSvgIconId }) : null) : null,\n                        control),\n                    text))));\n        return renderedItem;\n    };\n    return SurveyQuestionImagePickerItem;\n}(ReactSurveyElement));\n\nReactQuestionFactory.Instance.registerQuestion(\"imagepicker\", function (props) {\n    return external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](imagepicker_SurveyQuestionImagePicker, props);\n});\n\n// CONCATENATED MODULE: ./packages/survey-react-ui/src/image.tsx\nvar image_extends = ( false) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\n\n\nvar image_SurveyQuestionImage = /** @class */ (function (_super) {\n    image_extends(SurveyQuestionImage, _super);\n    function SurveyQuestionImage(props) {\n        return _super.call(this, props) || this;\n    }\n    SurveyQuestionImage.prototype.componentDidMount = function () {\n        var _this = this;\n        _super.prototype.componentDidMount.call(this);\n        this.question.locImageLink.onChanged = function () {\n            _this.forceUpdate();\n        };\n    };\n    SurveyQuestionImage.prototype.componentWillUnmount = function () {\n        _super.prototype.componentWillUnmount.call(this);\n        this.question.locImageLink.onChanged = function () { };\n    };\n    Object.defineProperty(SurveyQuestionImage.prototype, \"question\", {\n        get: function () {\n            return this.questionBase;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    SurveyQuestionImage.prototype.renderElement = function () {\n        var _this = this;\n        var cssClasses = this.question.getImageCss();\n        var style = { objectFit: this.question.imageFit, width: this.question.renderedStyleWidth, height: this.question.renderedStyleHeight };\n        if (!this.question.imageLink || this.question.contentNotLoaded) {\n            style[\"display\"] = \"none\";\n        }\n        var control = null;\n        if (this.question.renderedMode === \"image\") {\n            control = (external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"img\", { className: cssClasses, src: this.question.locImageLink.renderedHtml, alt: this.question.altText || this.question.title, width: this.question.renderedWidth, height: this.question.renderedHeight, \n                //alt={item.text || item.value}\n                style: style, onLoad: function (event) { _this.question.onLoadHandler(); }, onError: function (event) { _this.question.onErrorHandler(); } }));\n        }\n        if (this.question.renderedMode === \"video\") {\n            control = (external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"video\", { controls: true, className: cssClasses, src: this.question.locImageLink.renderedHtml, width: this.question.renderedWidth, height: this.question.renderedHeight, style: style, onLoadedMetadata: function (event) { _this.question.onLoadHandler(); }, onError: function (event) { _this.question.onErrorHandler(); } }));\n        }\n        if (this.question.renderedMode === \"youtube\") {\n            control = (external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"iframe\", { className: cssClasses, src: this.question.locImageLink.renderedHtml, width: this.question.renderedWidth, height: this.question.renderedHeight, style: style }));\n        }\n        var noImage = null;\n        if (!this.question.imageLink || this.question.contentNotLoaded) {\n            noImage = (external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"div\", { className: this.question.cssClasses.noImage },\n                external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](svg_icon_SvgIcon, { iconName: this.question.cssClasses.noImageSvgIconId, size: 48 })));\n        }\n        return external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"div\", { className: this.question.cssClasses.root },\n            control,\n            noImage);\n    };\n    return SurveyQuestionImage;\n}(reactquestion_element_SurveyQuestionElementBase));\n\nReactQuestionFactory.Instance.registerQuestion(\"image\", function (props) {\n    return external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](image_SurveyQuestionImage, props);\n});\n\n// CONCATENATED MODULE: ./packages/survey-react-ui/src/signaturepad.tsx\nvar signaturepad_extends = ( false) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\n\n\n\nvar signaturepad_SurveyQuestionSignaturePad = /** @class */ (function (_super) {\n    signaturepad_extends(SurveyQuestionSignaturePad, _super);\n    function SurveyQuestionSignaturePad(props) {\n        var _this = _super.call(this, props) || this;\n        _this.state = { value: _this.question.value };\n        return _this;\n    }\n    Object.defineProperty(SurveyQuestionSignaturePad.prototype, \"question\", {\n        get: function () {\n            return this.questionBase;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    SurveyQuestionSignaturePad.prototype.renderElement = function () {\n        var _this = this;\n        var cssClasses = this.question.cssClasses;\n        var loadingIndicator = this.question.showLoadingIndicator ? this.renderLoadingIndicator() : null;\n        var clearButton = this.renderCleanButton();\n        return (external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"div\", { className: cssClasses.root, ref: function (root) { return (_this.setControl(root)); }, style: { width: this.question.renderedCanvasWidth } },\n            external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"div\", { className: cssClasses.placeholder, style: { display: this.question.needShowPlaceholder() ? \"\" : \"none\" } }, this.renderLocString(this.question.locRenderedPlaceholder)),\n            external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"div\", null,\n                this.renderBackgroundImage(),\n                external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"canvas\", { tabIndex: -1, className: this.question.cssClasses.canvas, onBlur: function (event) { _this.question.onBlur(event); } })),\n            clearButton,\n            loadingIndicator));\n    };\n    SurveyQuestionSignaturePad.prototype.renderBackgroundImage = function () {\n        if (!this.question.backgroundImage)\n            return null;\n        return external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"img\", { className: this.question.cssClasses.backgroundImage, src: this.question.backgroundImage, style: { width: this.question.renderedCanvasWidth } });\n    };\n    SurveyQuestionSignaturePad.prototype.renderLoadingIndicator = function () {\n        return external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"div\", { className: this.question.cssClasses.loadingIndicator },\n            external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](loading_indicator_LoadingIndicatorComponent, null));\n    };\n    SurveyQuestionSignaturePad.prototype.renderCleanButton = function () {\n        var _this = this;\n        if (!this.question.canShowClearButton)\n            return null;\n        var cssClasses = this.question.cssClasses;\n        return external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"div\", { className: cssClasses.controls },\n            external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"button\", { type: \"button\", className: cssClasses.clearButton, title: this.question.clearButtonCaption, onClick: function () { return _this.question.clearValue(true); } }, this.question.cssClasses.clearButtonIconId ? external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](svg_icon_SvgIcon, { iconName: this.question.cssClasses.clearButtonIconId, size: \"auto\" }) : external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](\"span\", null, \"\\u2716\")));\n    };\n    return SurveyQuestionSignaturePad;\n}(reactquestion_element_SurveyQuestionElementBase));\n\nReactQuestionFactory.Instance.registerQuestion(\"signaturepad\", function (props) {\n    return external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](signaturepad_SurveyQuestionSignaturePad, props);\n});\n\n// CONCATENATED MODULE: ./packages/survey-react-ui/src/reactquestion_buttongroup.tsx\nvar reactquestion_buttongroup_extends = ( false) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\n\n\n\nvar reactquestion_buttongroup_SurveyQuestionButtonGroup = /** @class */ (function (_super) {\n    reactquestion_buttongroup_extends(SurveyQuestionButtonGroup, _super);\n    function SurveyQuestionButtonGroup(props) {\n        return _super.call(this, props) || this;\n    }\n    Object.defineProperty(SurveyQuestionButtonGroup.prototype, \"question\", {\n        get: function () {\n            return this.questionBase;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    SurveyQuestionButtonGroup.prototype.getStateElement = function () {\n        return this.question;\n    };\n    SurveyQuestionButtonGroup.prototype.renderElement = function () {\n        var items = this.renderItems();\n        return external_root_React_commonjs2_react_commonjs_react_amd_react_default.a.createElement(\"div\", { className: this.question.cssClasses.root }, items);\n    };\n    SurveyQuestionButtonGroup.prototype.renderItems = function () {\n        var _this = this;\n        return this.question.visibleChoices.map(function (item, index) {\n            return (external_root_React_commonjs2_react_commonjs_react_amd_react_default.a.createElement(reactquestion_buttongroup_SurveyButtonGroupItem, { key: _this.question.inputId + \"_\" + index, item: item, question: _this.question, index: index }));\n        });\n    };\n    return SurveyQuestionButtonGroup;\n}(reactquestion_element_SurveyQuestionElementBase));\n\nvar reactquestion_buttongroup_SurveyButtonGroupItem = /** @class */ (function (_super) {\n    reactquestion_buttongroup_extends(SurveyButtonGroupItem, _super);\n    function SurveyButtonGroupItem(props) {\n        return _super.call(this, props) || this;\n    }\n    Object.defineProperty(SurveyButtonGroupItem.prototype, \"index\", {\n        get: function () {\n            return this.props.index;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(SurveyButtonGroupItem.prototype, \"question\", {\n        get: function () {\n            return this.props.question;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(SurveyButtonGroupItem.prototype, \"item\", {\n        get: function () {\n            return this.props.item;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    SurveyButtonGroupItem.prototype.getStateElement = function () {\n        return this.item;\n    };\n    SurveyButtonGroupItem.prototype.renderElement = function () {\n        this.model = new external_root_Survey_commonjs2_survey_core_commonjs_survey_core_amd_survey_core_[\"ButtonGroupItemModel\"](this.question, this.item, this.index);\n        var icon = this.renderIcon();\n        var input = this.renderInput();\n        var caption = this.renderCaption();\n        return (external_root_React_commonjs2_react_commonjs_react_amd_react_default.a.createElement(\"label\", { role: \"radio\", className: this.model.css.label, title: this.model.caption.renderedHtml },\n            input,\n            external_root_React_commonjs2_react_commonjs_react_amd_react_default.a.createElement(\"div\", { className: this.model.css.decorator },\n                icon,\n                caption)));\n    };\n    SurveyButtonGroupItem.prototype.renderIcon = function () {\n        if (!!this.model.iconName) {\n            return (external_root_React_commonjs2_react_commonjs_react_amd_react_default.a.createElement(svg_icon_SvgIcon, { className: this.model.css.icon, iconName: this.model.iconName, size: this.model.iconSize || 24 }));\n        }\n        return null;\n    };\n    SurveyButtonGroupItem.prototype.renderInput = function () {\n        var _this = this;\n        return (external_root_React_commonjs2_react_commonjs_react_amd_react_default.a.createElement(\"input\", { className: this.model.css.control, id: this.model.id, type: \"radio\", name: this.model.name, checked: this.model.selected, value: this.model.value, disabled: this.model.readOnly, onChange: function () {\n                _this.model.onChange();\n            }, \"aria-required\": this.model.isRequired, \"aria-label\": this.model.caption.renderedHtml, \"aria-invalid\": this.model.hasErrors, \"aria-errormessage\": this.model.describedBy, role: \"radio\" }));\n    };\n    SurveyButtonGroupItem.prototype.renderCaption = function () {\n        if (!this.model.showCaption)\n            return null;\n        var caption = this.renderLocString(this.model.caption);\n        return (external_root_React_commonjs2_react_commonjs_react_amd_react_default.a.createElement(\"span\", { className: this.model.css.caption, title: this.model.caption.renderedHtml }, caption));\n    };\n    return SurveyButtonGroupItem;\n}(reactquestion_element_SurveyElementBase));\n\n// ReactQuestionFactory.Instance.registerQuestion(\"buttongroup\", props => {\n//   return React.createElement(SurveyQuestionButtonGroup, props);\n// });\n\n// CONCATENATED MODULE: ./packages/survey-react-ui/src/reactquestion_custom.tsx\nvar reactquestion_custom_extends = ( false) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\n\n\n\nvar reactquestion_custom_SurveyQuestionCustom = /** @class */ (function (_super) {\n    reactquestion_custom_extends(SurveyQuestionCustom, _super);\n    function SurveyQuestionCustom(props) {\n        return _super.call(this, props) || this;\n    }\n    SurveyQuestionCustom.prototype.getStateElements = function () {\n        var res = _super.prototype.getStateElements.call(this);\n        if (!!this.question.contentQuestion) {\n            res.push(this.question.contentQuestion);\n        }\n        return res;\n    };\n    SurveyQuestionCustom.prototype.renderElement = function () {\n        return reactquestion_SurveyQuestion.renderQuestionBody(this.creator, this.question.contentQuestion);\n    };\n    return SurveyQuestionCustom;\n}(reactquestion_element_SurveyQuestionUncontrolledElement));\n\nvar reactquestion_custom_SurveyQuestionComposite = /** @class */ (function (_super) {\n    reactquestion_custom_extends(SurveyQuestionComposite, _super);\n    function SurveyQuestionComposite(props) {\n        return _super.call(this, props) || this;\n    }\n    SurveyQuestionComposite.prototype.canRender = function () {\n        return !!this.question.contentPanel;\n    };\n    SurveyQuestionComposite.prototype.renderElement = function () {\n        return (external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](panel_SurveyPanel, { element: this.question.contentPanel, creator: this.creator, survey: this.question.survey }));\n    };\n    return SurveyQuestionComposite;\n}(reactquestion_element_SurveyQuestionUncontrolledElement));\n\nReactQuestionFactory.Instance.registerQuestion(\"custom\", function (props) {\n    return external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](reactquestion_custom_SurveyQuestionCustom, props);\n});\nReactQuestionFactory.Instance.registerQuestion(\"composite\", function (props) {\n    return external_root_React_commonjs2_react_commonjs_react_amd_react_[\"createElement\"](reactquestion_custom_SurveyQuestionComposite, props);\n});\n\n// CONCATENATED MODULE: ./packages/survey-react-ui/src/components/list/list-item-content.tsx\nvar list_item_content_extends = ( false) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\n\n\nvar list_item_content_ListItemContent = /** @class */ (function (_super) {\n    list_item_content_extends(ListItemContent, _super);\n    function ListItemContent() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(ListItemContent.prototype, \"model\", {\n        get: function () {\n            return this.props.model;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(ListItemContent.prototype, \"item\", {\n        get: function () {\n            return this.props.item;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    ListItemContent.prototype.getStateElement = function () {\n        return this.item;\n    };\n    ListItemContent.prototype.render = function () {\n        if (!this.item)\n            return null;\n        var content = [];\n        var text = this.renderLocString(this.item.locTitle, undefined, \"locString\");\n        if (this.item.iconName) {\n            var icon = external_root_React_commonjs2_react_commonjs_react_amd_react_default.a.createElement(svg_icon_SvgIcon, { key: \"icon\", className: this.model.cssClasses.itemIcon, iconName: this.item.iconName, size: this.item.iconSize, \"aria-label\": this.item.title });\n            content.push(icon);\n            content.push(external_root_React_commonjs2_react_commonjs_react_amd_react_default.a.createElement(\"span\", { key: \"text\" }, text));\n        }\n        else {\n            content.push(text);\n        }\n        if (this.item.markerIconName) {\n            var icon = external_root_React_commonjs2_react_commonjs_react_amd_react_default.a.createElement(svg_icon_SvgIcon, { key: \"marker\", className: this.item.cssClasses.itemMarkerIcon, iconName: this.item.markerIconName, size: this.item.markerIconSize });\n            content.push(icon);\n        }\n        return external_root_React_commonjs2_react_commonjs_react_amd_react_default.a.createElement(external_root_React_commonjs2_react_commonjs_react_amd_react_default.a.Fragment, null, content);\n    };\n    return ListItemContent;\n}(reactquestion_element_SurveyElementBase));\n\nReactElementFactory.Instance.registerElement(\"sv-list-item-content\", function (props) {\n    return external_root_React_commonjs2_react_commonjs_react_amd_react_default.a.createElement(list_item_content_ListItemContent, props);\n});\n\n// CONCATENATED MODULE: ./packages/survey-react-ui/src/components/list/list-item-group.tsx\nvar list_item_group_extends = ( false) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\n\n\nvar list_item_group_ListItemGroup = /** @class */ (function (_super) {\n    list_item_group_extends(ListItemGroup, _super);\n    function ListItemGroup() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(ListItemGroup.prototype, \"model\", {\n        get: function () {\n            return this.props.model;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(ListItemGroup.prototype, \"item\", {\n        get: function () {\n            return this.props.item;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    ListItemGroup.prototype.getStateElement = function () {\n        return this.item;\n    };\n    ListItemGroup.prototype.render = function () {\n        var _a;\n        if (!this.item)\n            return null;\n        var newElement = ReactElementFactory.Instance.createElement(\"sv-list-item-content\", { item: this.item, key: \"content\" + this.item.id, model: this.model });\n        return external_root_React_commonjs2_react_commonjs_react_amd_react_default.a.createElement(external_root_React_commonjs2_react_commonjs_react_amd_react_default.a.Fragment, null,\n            newElement,\n            external_root_React_commonjs2_react_commonjs_react_amd_react_default.a.createElement(popup_Popup, { model: (_a = this.item) === null || _a === void 0 ? void 0 : _a.popupModel }));\n    };\n    return ListItemGroup;\n}(reactquestion_element_SurveyElementBase));\n\nReactElementFactory.Instance.registerElement(\"sv-list-item-group\", function (props) {\n    return external_root_React_commonjs2_react_commonjs_react_amd_react_default.a.createElement(list_item_group_ListItemGroup, props);\n});\n\n// CONCATENATED MODULE: ./packages/survey-react-ui/src/components/survey-header/logo-image.tsx\nvar logo_image_extends = ( false) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\nvar logo_image_LogoImage = /** @class */ (function (_super) {\n    logo_image_extends(LogoImage, _super);\n    function LogoImage(props) {\n        return _super.call(this, props) || this;\n    }\n    Object.defineProperty(LogoImage.prototype, \"survey\", {\n        get: function () {\n            return this.props.data;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    LogoImage.prototype.render = function () {\n        var content = [];\n        content.push(external_root_React_commonjs2_react_commonjs_react_amd_react_default.a.createElement(\"div\", { key: \"logo-image\", className: this.survey.logoClassNames },\n            external_root_React_commonjs2_react_commonjs_react_amd_react_default.a.createElement(\"img\", { className: this.survey.css.logoImage, src: this.survey.locLogo.renderedHtml, alt: this.survey.locTitle.renderedHtml, width: this.survey.renderedLogoWidth, height: this.survey.renderedLogoHeight, style: { objectFit: this.survey.logoFit, width: this.survey.renderedStyleLogoWidth, height: this.survey.renderedStyleLogoHeight } })));\n        return external_root_React_commonjs2_react_commonjs_react_amd_react_default.a.createElement(external_root_React_commonjs2_react_commonjs_react_amd_react_default.a.Fragment, null, content);\n    };\n    return LogoImage;\n}(external_root_React_commonjs2_react_commonjs_react_amd_react_default.a.Component));\n\nReactElementFactory.Instance.registerElement(\"sv-logo-image\", function (props) {\n    return external_root_React_commonjs2_react_commonjs_react_amd_react_default.a.createElement(logo_image_LogoImage, props);\n});\n\n// CONCATENATED MODULE: ./packages/survey-react-ui/src/components/matrix-actions/remove-button/remove-button.tsx\nvar remove_button_extends = ( false) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\n\nvar remove_button_SurveyQuestionMatrixDynamicRemoveButton = /** @class */ (function (_super) {\n    remove_button_extends(SurveyQuestionMatrixDynamicRemoveButton, _super);\n    function SurveyQuestionMatrixDynamicRemoveButton(props) {\n        var _this = _super.call(this, props) || this;\n        _this.handleOnRowRemoveClick = _this.handleOnRowRemoveClick.bind(_this);\n        return _this;\n    }\n    Object.defineProperty(SurveyQuestionMatrixDynamicRemoveButton.prototype, \"question\", {\n        get: function () {\n            return this.props.item.data.question;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(SurveyQuestionMatrixDynamicRemoveButton.prototype, \"row\", {\n        get: function () {\n            return this.props.item.data.row;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    SurveyQuestionMatrixDynamicRemoveButton.prototype.handleOnRowRemoveClick = function (event) {\n        this.question.removeRowUI(this.row);\n    };\n    SurveyQuestionMatrixDynamicRemoveButton.prototype.renderElement = function () {\n        var removeRowText = this.renderLocString(this.question.locRemoveRowText);\n        return (external_root_React_commonjs2_react_commonjs_react_amd_react_default.a.createElement(\"button\", { className: this.question.getRemoveRowButtonCss(), type: \"button\", onClick: this.handleOnRowRemoveClick, disabled: this.question.isInputReadOnly },\n            removeRowText,\n            external_root_React_commonjs2_react_commonjs_react_amd_react_default.a.createElement(\"span\", { className: this.question.cssClasses.iconRemove })));\n    };\n    return SurveyQuestionMatrixDynamicRemoveButton;\n}(ReactSurveyElement));\n\nReactElementFactory.Instance.registerElement(\"sv-matrix-remove-button\", function (props) {\n    return external_root_React_commonjs2_react_commonjs_react_amd_react_default.a.createElement(remove_button_SurveyQuestionMatrixDynamicRemoveButton, props);\n});\n\n// CONCATENATED MODULE: ./packages/survey-react-ui/src/components/matrix-actions/detail-button/detail-button.tsx\nvar detail_button_extends = ( false) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\n\n\nvar detail_button_SurveyQuestionMatrixDetailButton = /** @class */ (function (_super) {\n    detail_button_extends(SurveyQuestionMatrixDetailButton, _super);\n    function SurveyQuestionMatrixDetailButton(props) {\n        var _this = _super.call(this, props) || this;\n        _this.handleOnShowHideClick = _this.handleOnShowHideClick.bind(_this);\n        return _this;\n    }\n    SurveyQuestionMatrixDetailButton.prototype.getStateElement = function () {\n        return this.props.item;\n    };\n    Object.defineProperty(SurveyQuestionMatrixDetailButton.prototype, \"item\", {\n        get: function () {\n            return this.props.item;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(SurveyQuestionMatrixDetailButton.prototype, \"question\", {\n        get: function () {\n            return this.props.item.data.question;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(SurveyQuestionMatrixDetailButton.prototype, \"row\", {\n        get: function () {\n            return this.props.item.data.row;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    SurveyQuestionMatrixDetailButton.prototype.handleOnShowHideClick = function (event) {\n        this.row.showHideDetailPanelClick();\n    };\n    SurveyQuestionMatrixDetailButton.prototype.renderElement = function () {\n        var isExpanded = this.row.isDetailPanelShowing;\n        var ariaExpanded = isExpanded;\n        var ariaControls = isExpanded ? this.row.detailPanelId : undefined;\n        return (external_root_React_commonjs2_react_commonjs_react_amd_react_default.a.createElement(\"button\", { type: \"button\", onClick: this.handleOnShowHideClick, className: this.question.getDetailPanelButtonCss(this.row), \"aria-expanded\": ariaExpanded, \"aria-controls\": ariaControls },\n            external_root_React_commonjs2_react_commonjs_react_amd_react_default.a.createElement(svg_icon_SvgIcon, { className: this.question.getDetailPanelIconCss(this.row), iconName: this.question.getDetailPanelIconId(this.row), size: \"auto\" })));\n    };\n    return SurveyQuestionMatrixDetailButton;\n}(ReactSurveyElement));\n\nReactElementFactory.Instance.registerElement(\"sv-matrix-detail-button\", function (props) {\n    return external_root_React_commonjs2_react_commonjs_react_amd_react_default.a.createElement(detail_button_SurveyQuestionMatrixDetailButton, props);\n});\n\n// CONCATENATED MODULE: ./packages/survey-react-ui/src/components/paneldynamic-actions/paneldynamic-remove-btn.tsx\nvar paneldynamic_remove_btn_extends = ( false) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\n\nvar paneldynamic_remove_btn_SurveyQuestionPanelDynamicRemoveButton = /** @class */ (function (_super) {\n    paneldynamic_remove_btn_extends(SurveyQuestionPanelDynamicRemoveButton, _super);\n    function SurveyQuestionPanelDynamicRemoveButton() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.handleClick = function (event) {\n            _this.question.removePanelUI(_this.data.panel);\n        };\n        return _this;\n    }\n    SurveyQuestionPanelDynamicRemoveButton.prototype.renderElement = function () {\n        var btnText = this.renderLocString(this.question.locPanelRemoveText);\n        return (external_root_React_commonjs2_react_commonjs_react_amd_react_default.a.createElement(\"button\", { className: this.question.getPanelRemoveButtonCss(), onClick: this.handleClick, type: \"button\" },\n            external_root_React_commonjs2_react_commonjs_react_amd_react_default.a.createElement(\"span\", { className: this.question.cssClasses.buttonRemoveText }, btnText),\n            external_root_React_commonjs2_react_commonjs_react_amd_react_default.a.createElement(\"span\", { className: this.question.cssClasses.iconRemove })));\n    };\n    return SurveyQuestionPanelDynamicRemoveButton;\n}(SurveyQuestionPanelDynamicAction));\n\nReactElementFactory.Instance.registerElement(\"sv-paneldynamic-remove-btn\", function (props) {\n    return external_root_React_commonjs2_react_commonjs_react_amd_react_default.a.createElement(paneldynamic_remove_btn_SurveyQuestionPanelDynamicRemoveButton, props);\n});\n\n// CONCATENATED MODULE: ./packages/survey-react-ui/src/components/survey-actions/survey-nav-button.tsx\nvar survey_nav_button_extends = ( false) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\n\nvar survey_nav_button_SurveyNavigationButton = /** @class */ (function (_super) {\n    survey_nav_button_extends(SurveyNavigationButton, _super);\n    function SurveyNavigationButton() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(SurveyNavigationButton.prototype, \"item\", {\n        get: function () {\n            return this.props.item;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    SurveyNavigationButton.prototype.canRender = function () {\n        return this.item.isVisible;\n    };\n    SurveyNavigationButton.prototype.renderElement = function () {\n        return (external_root_React_commonjs2_react_commonjs_react_amd_react_default.a.createElement(\"input\", { className: this.item.innerCss, type: \"button\", disabled: this.item.disabled, onMouseDown: this.item.data && this.item.data.mouseDown, onClick: this.item.action, title: this.item.getTooltip(), value: this.item.title }));\n    };\n    return SurveyNavigationButton;\n}(ReactSurveyElement));\n\nReactElementFactory.Instance.registerElement(\"sv-nav-btn\", function (props) {\n    return external_root_React_commonjs2_react_commonjs_react_amd_react_default.a.createElement(survey_nav_button_SurveyNavigationButton, props);\n});\n\n// CONCATENATED MODULE: ./packages/survey-react-ui/src/string-viewer.tsx\nvar string_viewer_extends = ( false) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\n\nvar string_viewer_SurveyLocStringViewer = /** @class */ (function (_super) {\n    string_viewer_extends(SurveyLocStringViewer, _super);\n    function SurveyLocStringViewer(props) {\n        var _this = _super.call(this, props) || this;\n        _this.onChangedHandler = function (sender, options) {\n            if (_this.isRendering)\n                return;\n            _this.setState({ changed: !!_this.state && _this.state.changed ? _this.state.changed + 1 : 1 });\n        };\n        _this.rootRef = external_root_React_commonjs2_react_commonjs_react_amd_react_default.a.createRef();\n        return _this;\n    }\n    Object.defineProperty(SurveyLocStringViewer.prototype, \"locStr\", {\n        get: function () {\n            return this.props.locStr;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(SurveyLocStringViewer.prototype, \"style\", {\n        get: function () {\n            return this.props.style;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    SurveyLocStringViewer.prototype.componentDidMount = function () {\n        this.reactOnStrChanged();\n    };\n    SurveyLocStringViewer.prototype.componentWillUnmount = function () {\n        if (!this.locStr)\n            return;\n        this.locStr.onStringChanged.remove(this.onChangedHandler);\n    };\n    SurveyLocStringViewer.prototype.componentDidUpdate = function (prevProps, prevState) {\n        if (!!prevProps.locStr) {\n            prevProps.locStr.onStringChanged.remove(this.onChangedHandler);\n        }\n        this.reactOnStrChanged();\n    };\n    SurveyLocStringViewer.prototype.reactOnStrChanged = function () {\n        if (!this.locStr)\n            return;\n        this.locStr.onStringChanged.add(this.onChangedHandler);\n    };\n    SurveyLocStringViewer.prototype.render = function () {\n        if (!this.locStr)\n            return null;\n        this.isRendering = true;\n        var strEl = this.renderString();\n        this.isRendering = false;\n        return strEl;\n    };\n    SurveyLocStringViewer.prototype.renderString = function () {\n        var className = this.locStr.allowLineBreaks ? \"sv-string-viewer sv-string-viewer--multiline\" : \"sv-string-viewer\";\n        if (this.locStr.hasHtml) {\n            var htmlValue = { __html: this.locStr.renderedHtml };\n            return external_root_React_commonjs2_react_commonjs_react_amd_react_default.a.createElement(\"span\", { ref: this.rootRef, className: className, style: this.style, dangerouslySetInnerHTML: htmlValue });\n        }\n        return external_root_React_commonjs2_react_commonjs_react_amd_react_default.a.createElement(\"span\", { ref: this.rootRef, className: className, style: this.style }, this.locStr.renderedHtml);\n    };\n    return SurveyLocStringViewer;\n}(external_root_React_commonjs2_react_commonjs_react_amd_react_default.a.Component));\n\nReactElementFactory.Instance.registerElement(external_root_Survey_commonjs2_survey_core_commonjs_survey_core_amd_survey_core_[\"LocalizableString\"].defaultRenderer, function (props) {\n    return external_root_React_commonjs2_react_commonjs_react_amd_react_default.a.createElement(string_viewer_SurveyLocStringViewer, props);\n});\n\n// CONCATENATED MODULE: ./packages/survey-react-ui/src/components/question-error.tsx\nvar question_error_extends = ( false) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\n\nvar question_error_QuestionErrorComponent = /** @class */ (function (_super) {\n    question_error_extends(QuestionErrorComponent, _super);\n    function QuestionErrorComponent() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    QuestionErrorComponent.prototype.render = function () {\n        return (external_root_React_commonjs2_react_commonjs_react_amd_react_default.a.createElement(\"div\", null,\n            external_root_React_commonjs2_react_commonjs_react_amd_react_default.a.createElement(\"span\", { className: this.props.cssClasses.error.icon || undefined, \"aria-hidden\": \"true\" }),\n            external_root_React_commonjs2_react_commonjs_react_amd_react_default.a.createElement(\"span\", { className: this.props.cssClasses.error.item || undefined },\n                external_root_React_commonjs2_react_commonjs_react_amd_react_default.a.createElement(string_viewer_SurveyLocStringViewer, { locStr: this.props.error.locText }))));\n    };\n    return QuestionErrorComponent;\n}(external_root_React_commonjs2_react_commonjs_react_amd_react_default.a.Component));\n\nReactElementFactory.Instance.registerElement(\"sv-question-error\", function (props) {\n    return external_root_React_commonjs2_react_commonjs_react_amd_react_default.a.createElement(question_error_QuestionErrorComponent, props);\n});\n\n// CONCATENATED MODULE: ./packages/survey-react-ui/src/components/skeleton.tsx\nvar skeleton_extends = ( false) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\nvar skeleton_Skeleton = /** @class */ (function (_super) {\n    skeleton_extends(Skeleton, _super);\n    function Skeleton() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Skeleton.prototype.render = function () {\n        var _a;\n        return (external_root_React_commonjs2_react_commonjs_react_amd_react_default.a.createElement(\"div\", { className: \"sv-skeleton-element\", id: (_a = this.props.element) === null || _a === void 0 ? void 0 : _a.id }));\n    };\n    return Skeleton;\n}(external_root_React_commonjs2_react_commonjs_react_amd_react_default.a.Component));\n\nReactElementFactory.Instance.registerElement(\"sv-skeleton\", function (props) {\n    return external_root_React_commonjs2_react_commonjs_react_amd_react_default.a.createElement(skeleton_Skeleton, props);\n});\n\n// CONCATENATED MODULE: ./packages/survey-react-ui/src/components/header.tsx\nvar header_extends = ( false) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\n\n\nvar header_HeaderMobile = /** @class */ (function (_super) {\n    header_extends(HeaderMobile, _super);\n    function HeaderMobile() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(HeaderMobile.prototype, \"model\", {\n        get: function () {\n            return this.props.model;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    HeaderMobile.prototype.renderLogoImage = function () {\n        var componentName = this.model.survey.getElementWrapperComponentName(this.model.survey, \"logo-image\");\n        var componentData = this.model.survey.getElementWrapperComponentData(this.model.survey, \"logo-image\");\n        return ReactElementFactory.Instance.createElement(componentName, {\n            data: componentData,\n        });\n    };\n    HeaderMobile.prototype.render = function () {\n        return (external_root_React_commonjs2_react_commonjs_react_amd_react_default.a.createElement(\"div\", { className: \"sv-header--mobile\" },\n            this.model.survey.hasLogo ? (external_root_React_commonjs2_react_commonjs_react_amd_react_default.a.createElement(\"div\", { className: \"sv-header__logo\" }, this.renderLogoImage())) : null,\n            this.model.survey.hasTitle ? (external_root_React_commonjs2_react_commonjs_react_amd_react_default.a.createElement(\"div\", { className: \"sv-header__title\", style: { maxWidth: this.model.textAreaWidth } },\n                external_root_React_commonjs2_react_commonjs_react_amd_react_default.a.createElement(title_element_TitleElement, { element: this.model.survey }))) : null,\n            this.model.survey.renderedHasDescription ? (external_root_React_commonjs2_react_commonjs_react_amd_react_default.a.createElement(\"div\", { className: \"sv-header__description\", style: { maxWidth: this.model.textAreaWidth } },\n                external_root_React_commonjs2_react_commonjs_react_amd_react_default.a.createElement(\"div\", { className: this.model.survey.css.description }, reactquestion_element_SurveyElementBase.renderLocString(this.model.survey.locDescription)))) : null));\n    };\n    return HeaderMobile;\n}(external_root_React_commonjs2_react_commonjs_react_amd_react_default.a.Component));\n\nvar header_HeaderCell = /** @class */ (function (_super) {\n    header_extends(HeaderCell, _super);\n    function HeaderCell() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(HeaderCell.prototype, \"model\", {\n        get: function () {\n            return this.props.model;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    HeaderCell.prototype.renderLogoImage = function () {\n        var componentName = this.model.survey.getElementWrapperComponentName(this.model.survey, \"logo-image\");\n        var componentData = this.model.survey.getElementWrapperComponentData(this.model.survey, \"logo-image\");\n        return ReactElementFactory.Instance.createElement(componentName, {\n            data: componentData,\n        });\n    };\n    HeaderCell.prototype.render = function () {\n        return (external_root_React_commonjs2_react_commonjs_react_amd_react_default.a.createElement(\"div\", { className: this.model.css, style: this.model.style },\n            external_root_React_commonjs2_react_commonjs_react_amd_react_default.a.createElement(\"div\", { className: \"sv-header__cell-content\", style: this.model.contentStyle },\n                this.model.showLogo ? (external_root_React_commonjs2_react_commonjs_react_amd_react_default.a.createElement(\"div\", { className: \"sv-header__logo\" }, this.renderLogoImage())) : null,\n                this.model.showTitle ? (external_root_React_commonjs2_react_commonjs_react_amd_react_default.a.createElement(\"div\", { className: \"sv-header__title\", style: { maxWidth: this.model.textAreaWidth } },\n                    external_root_React_commonjs2_react_commonjs_react_amd_react_default.a.createElement(title_element_TitleElement, { element: this.model.survey }))) : null,\n                this.model.showDescription ? (external_root_React_commonjs2_react_commonjs_react_amd_react_default.a.createElement(\"div\", { className: \"sv-header__description\", style: { maxWidth: this.model.textAreaWidth } },\n                    external_root_React_commonjs2_react_commonjs_react_amd_react_default.a.createElement(\"div\", { className: this.model.survey.css.description }, reactquestion_element_SurveyElementBase.renderLocString(this.model.survey.locDescription)))) : null)));\n    };\n    return HeaderCell;\n}(external_root_React_commonjs2_react_commonjs_react_amd_react_default.a.Component));\n\nvar header_Header = /** @class */ (function (_super) {\n    header_extends(Header, _super);\n    function Header() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(Header.prototype, \"model\", {\n        get: function () {\n            return this.props.model;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Header.prototype.getStateElement = function () {\n        return this.model;\n    };\n    Header.prototype.renderElement = function () {\n        this.model.survey = this.props.survey;\n        if (!(this.props.survey.headerView === \"advanced\")) {\n            return null;\n        }\n        var headerContent = null;\n        if (this.props.survey.isMobile) {\n            headerContent = external_root_React_commonjs2_react_commonjs_react_amd_react_default.a.createElement(header_HeaderMobile, { model: this.model });\n        }\n        else {\n            headerContent = (external_root_React_commonjs2_react_commonjs_react_amd_react_default.a.createElement(\"div\", { className: this.model.contentClasses, style: { maxWidth: this.model.maxWidth } }, this.model.cells.map(function (cell, index) { return external_root_React_commonjs2_react_commonjs_react_amd_react_default.a.createElement(header_HeaderCell, { key: index, model: cell }); })));\n        }\n        return (external_root_React_commonjs2_react_commonjs_react_amd_react_default.a.createElement(\"div\", { className: this.model.headerClasses, style: { height: this.model.renderedHeight } },\n            this.model.backgroundImage ? external_root_React_commonjs2_react_commonjs_react_amd_react_default.a.createElement(\"div\", { style: this.model.backgroundImageStyle, className: this.model.backgroundImageClasses }) : null,\n            headerContent));\n    };\n    return Header;\n}(reactquestion_element_SurveyElementBase));\n\nReactElementFactory.Instance.registerElement(\"sv-header\", function (props) {\n    return external_root_React_commonjs2_react_commonjs_react_amd_react_default.a.createElement(header_Header, props);\n});\n\n// CONCATENATED MODULE: ./packages/survey-react-ui/src/string-editor.tsx\nvar string_editor_extends = ( false) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\n\nvar string_editor_SurveyLocStringEditor = /** @class */ (function (_super) {\n    string_editor_extends(SurveyLocStringEditor, _super);\n    function SurveyLocStringEditor(props) {\n        var _this = _super.call(this, props) || this;\n        _this.onInput = function (event) {\n            _this.locStr.text = event.target.innerText;\n        };\n        _this.onClick = function (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        };\n        _this.state = { changed: 0 };\n        return _this;\n    }\n    Object.defineProperty(SurveyLocStringEditor.prototype, \"locStr\", {\n        get: function () {\n            return this.props.locStr;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(SurveyLocStringEditor.prototype, \"style\", {\n        get: function () {\n            return this.props.style;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    SurveyLocStringEditor.prototype.componentDidMount = function () {\n        if (!this.locStr)\n            return;\n        var self = this;\n        this.locStr.onChanged = function () {\n            self.setState({ changed: self.state.changed + 1 });\n        };\n    };\n    SurveyLocStringEditor.prototype.componentWillUnmount = function () {\n        if (!this.locStr)\n            return;\n        this.locStr.onChanged = function () { };\n    };\n    SurveyLocStringEditor.prototype.render = function () {\n        if (!this.locStr) {\n            return null;\n        }\n        if (this.locStr.hasHtml) {\n            var htmlValue = { __html: this.locStr.renderedHtml };\n            return (external_root_React_commonjs2_react_commonjs_react_amd_react_default.a.createElement(\"span\", { className: \"sv-string-editor\", contentEditable: \"true\", suppressContentEditableWarning: true, style: this.style, dangerouslySetInnerHTML: htmlValue, onBlur: this.onInput, onClick: this.onClick }));\n        }\n        return (external_root_React_commonjs2_react_commonjs_react_amd_react_default.a.createElement(\"span\", { className: \"sv-string-editor\", contentEditable: \"true\", suppressContentEditableWarning: true, style: this.style, onBlur: this.onInput, onClick: this.onClick }, this.locStr.renderedHtml));\n    };\n    return SurveyLocStringEditor;\n}(external_root_React_commonjs2_react_commonjs_react_amd_react_default.a.Component));\n\nReactElementFactory.Instance.registerElement(external_root_Survey_commonjs2_survey_core_commonjs_survey_core_amd_survey_core_[\"LocalizableString\"].editableRenderer, function (props) {\n    return external_root_React_commonjs2_react_commonjs_react_amd_react_default.a.createElement(string_editor_SurveyLocStringEditor, props);\n});\n\n// CONCATENATED MODULE: ./packages/survey-react-ui/entries/react-ui-model.ts\n// react\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n//Uncomment to include the \"date\" question type.\n//export {default as SurveyQuestionDate} from \"../plugins/react/reactquestiondate\";\n\n// CONCATENATED MODULE: ./src/entries/react-ui.ts\n\n\n\nObject(external_root_Survey_commonjs2_survey_core_commonjs_survey_core_amd_survey_core_[\"checkLibraryVersion\"])(\"\" + \"1.11.13\", \"survey-react-ui\");\n\n\n/***/ }),\n\n/***/ \"react\":\n/*!**************************************************************************************!*\\\n  !*** external {\"root\":\"React\",\"commonjs2\":\"react\",\"commonjs\":\"react\",\"amd\":\"react\"} ***!\n  \\**************************************************************************************/\n/*! no static exports found */\n/*! ModuleConcatenation bailout: Module is not an ECMAScript module */\n/***/ (function(module, exports) {\n\nmodule.exports = __WEBPACK_EXTERNAL_MODULE_react__;\n\n/***/ }),\n\n/***/ \"react-dom\":\n/*!*****************************************************************************************************!*\\\n  !*** external {\"root\":\"ReactDOM\",\"commonjs2\":\"react-dom\",\"commonjs\":\"react-dom\",\"amd\":\"react-dom\"} ***!\n  \\*****************************************************************************************************/\n/*! no static exports found */\n/*! ModuleConcatenation bailout: Module is not an ECMAScript module */\n/***/ (function(module, exports) {\n\nmodule.exports = __WEBPACK_EXTERNAL_MODULE_react_dom__;\n\n/***/ }),\n\n/***/ \"survey-core\":\n/*!*********************************************************************************************************!*\\\n  !*** external {\"root\":\"Survey\",\"commonjs2\":\"survey-core\",\"commonjs\":\"survey-core\",\"amd\":\"survey-core\"} ***!\n  \\*********************************************************************************************************/\n/*! no static exports found */\n/*! ModuleConcatenation bailout: Module is not an ECMAScript module */\n/***/ (function(module, exports) {\n\nmodule.exports = __WEBPACK_EXTERNAL_MODULE_survey_core__;\n\n/***/ })\n\n/******/ });\n});\n//# sourceMappingURL=survey-react-ui.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/survey-react-ui@1.11.13_react-dom@18.3.1_react@18.3.1__react@18.3.1_survey-core@1.11.13/node_modules/survey-react-ui/survey-react-ui.js\n");

/***/ })

};
;